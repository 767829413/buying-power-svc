// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auctions.proto

package kafka

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	enum "gitlab.com/eAuction/enums/go/enum"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuctionEvent_Type int32

const (
	AuctionEvent_TYPE_UNKNOWN              AuctionEvent_Type = 0
	AuctionEvent_TYPE_LOT_CREATED          AuctionEvent_Type = 1
	AuctionEvent_TYPE_LOT_STATE_UPDATED    AuctionEvent_Type = 2
	AuctionEvent_TYPE_PARTICIPANT_CREATED  AuctionEvent_Type = 3
	AuctionEvent_TYPE_PARTICIPANT_UPDATED  AuctionEvent_Type = 4
	AuctionEvent_TYPE_DEPOSIT              AuctionEvent_Type = 5
	AuctionEvent_TYPE_WINNER               AuctionEvent_Type = 6
	AuctionEvent_TYPE_FINAL_BID            AuctionEvent_Type = 7
	AuctionEvent_TYPE_LIVE_BIDDING_DETAILS AuctionEvent_Type = 8
)

var AuctionEvent_Type_name = map[int32]string{
	0: "TYPE_UNKNOWN",
	1: "TYPE_LOT_CREATED",
	2: "TYPE_LOT_STATE_UPDATED",
	3: "TYPE_PARTICIPANT_CREATED",
	4: "TYPE_PARTICIPANT_UPDATED",
	5: "TYPE_DEPOSIT",
	6: "TYPE_WINNER",
	7: "TYPE_FINAL_BID",
	8: "TYPE_LIVE_BIDDING_DETAILS",
}

var AuctionEvent_Type_value = map[string]int32{
	"TYPE_UNKNOWN":              0,
	"TYPE_LOT_CREATED":          1,
	"TYPE_LOT_STATE_UPDATED":    2,
	"TYPE_PARTICIPANT_CREATED":  3,
	"TYPE_PARTICIPANT_UPDATED":  4,
	"TYPE_DEPOSIT":              5,
	"TYPE_WINNER":               6,
	"TYPE_FINAL_BID":            7,
	"TYPE_LIVE_BIDDING_DETAILS": 8,
}

func (x AuctionEvent_Type) String() string {
	return proto.EnumName(AuctionEvent_Type_name, int32(x))
}

func (AuctionEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{0, 0}
}

type Lot_Type int32

const (
	Lot_TYPE_NO_AUCTION Lot_Type = 0
	Lot_TYPE_ENG        Lot_Type = 1
	Lot_TYPE_COPART     Lot_Type = 2
	Lot_TYPE_IAAI       Lot_Type = 3
	Lot_TYPE_BNP        Lot_Type = 4
)

var Lot_Type_name = map[int32]string{
	0: "TYPE_NO_AUCTION",
	1: "TYPE_ENG",
	2: "TYPE_COPART",
	3: "TYPE_IAAI",
	4: "TYPE_BNP",
}

var Lot_Type_value = map[string]int32{
	"TYPE_NO_AUCTION": 0,
	"TYPE_ENG":        1,
	"TYPE_COPART":     2,
	"TYPE_IAAI":       3,
	"TYPE_BNP":        4,
}

func (x Lot_Type) String() string {
	return proto.EnumName(Lot_Type_name, int32(x))
}

func (Lot_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{1, 0}
}

type Lot_State int32

const (
	Lot_STATE_UNKNOWN      Lot_State = 0
	Lot_STATE_PENDING      Lot_State = 1
	Lot_STATE_SOLD         Lot_State = 2
	Lot_STATE_FINISHED     Lot_State = 3
	Lot_STATE_NEGOTIATIONS Lot_State = 4
)

var Lot_State_name = map[int32]string{
	0: "STATE_UNKNOWN",
	1: "STATE_PENDING",
	2: "STATE_SOLD",
	3: "STATE_FINISHED",
	4: "STATE_NEGOTIATIONS",
}

var Lot_State_value = map[string]int32{
	"STATE_UNKNOWN":      0,
	"STATE_PENDING":      1,
	"STATE_SOLD":         2,
	"STATE_FINISHED":     3,
	"STATE_NEGOTIATIONS": 4,
}

func (x Lot_State) String() string {
	return proto.EnumName(Lot_State_name, int32(x))
}

func (Lot_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{1, 1}
}

type Participant_State int32

const (
	Participant_STATE_PENDING         Participant_State = 0
	Participant_STATE_REJECTED        Participant_State = 1
	Participant_STATE_WINNER          Participant_State = 2
	Participant_STATE_BUY_NOW_WINNER  Participant_State = 3
	Participant_STATE_DEPOSIT_PENDING Participant_State = 4
	Participant_STATE_LOST            Participant_State = 5
	Participant_STATE_DEAL_CANCELED   Participant_State = 6
)

var Participant_State_name = map[int32]string{
	0: "STATE_PENDING",
	1: "STATE_REJECTED",
	2: "STATE_WINNER",
	3: "STATE_BUY_NOW_WINNER",
	4: "STATE_DEPOSIT_PENDING",
	5: "STATE_LOST",
	6: "STATE_DEAL_CANCELED",
}

var Participant_State_value = map[string]int32{
	"STATE_PENDING":         0,
	"STATE_REJECTED":        1,
	"STATE_WINNER":          2,
	"STATE_BUY_NOW_WINNER":  3,
	"STATE_DEPOSIT_PENDING": 4,
	"STATE_LOST":            5,
	"STATE_DEAL_CANCELED":   6,
}

func (x Participant_State) String() string {
	return proto.EnumName(Participant_State_name, int32(x))
}

func (Participant_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{4, 0}
}

// Deprecated: use DepositV2 instead
type Deposit_State int32

const (
	// Deprecated: use DepositV2 instead
	Deposit_STATE_UNKNOWN Deposit_State = 0
	// Deprecated: use DepositV2 instead
	Deposit_STATE_PENDING Deposit_State = 1
	// Deprecated: use DepositV2 instead
	Deposit_STATE_PAID Deposit_State = 2
	// Deprecated: use DepositV2 instead
	Deposit_STATE_RETURNED Deposit_State = 3
	// Deprecated: use DepositV2 instead
	Deposit_STATE_FEE_CHARGED Deposit_State = 4
)

var Deposit_State_name = map[int32]string{
	0: "STATE_UNKNOWN",
	1: "STATE_PENDING",
	2: "STATE_PAID",
	3: "STATE_RETURNED",
	4: "STATE_FEE_CHARGED",
}

var Deposit_State_value = map[string]int32{
	"STATE_UNKNOWN":     0,
	"STATE_PENDING":     1,
	"STATE_PAID":        2,
	"STATE_RETURNED":    3,
	"STATE_FEE_CHARGED": 4,
}

func (x Deposit_State) String() string {
	return proto.EnumName(Deposit_State_name, int32(x))
}

func (Deposit_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{8, 0}
}

type Winner_State int32

const (
	Winner_STATE_UNKNOWN             Winner_State = 0
	Winner_STATE_WAITING_FOR_INVOICE Winner_State = 1
	Winner_STATE_DEAL_CANCELED       Winner_State = 2
	Winner_STATE_DEAL_COMPLETED      Winner_State = 3
	Winner_STATE_WAITING_FOR_PAYMENT Winner_State = 4
	Winner_STATE_DELIVERED           Winner_State = 5
	Winner_STATE_IN_TRANSIT          Winner_State = 6
)

var Winner_State_name = map[int32]string{
	0: "STATE_UNKNOWN",
	1: "STATE_WAITING_FOR_INVOICE",
	2: "STATE_DEAL_CANCELED",
	3: "STATE_DEAL_COMPLETED",
	4: "STATE_WAITING_FOR_PAYMENT",
	5: "STATE_DELIVERED",
	6: "STATE_IN_TRANSIT",
}

var Winner_State_value = map[string]int32{
	"STATE_UNKNOWN":             0,
	"STATE_WAITING_FOR_INVOICE": 1,
	"STATE_DEAL_CANCELED":       2,
	"STATE_DEAL_COMPLETED":      3,
	"STATE_WAITING_FOR_PAYMENT": 4,
	"STATE_DELIVERED":           5,
	"STATE_IN_TRANSIT":          6,
}

func (x Winner_State) String() string {
	return proto.EnumName(Winner_State_name, int32(x))
}

func (Winner_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{9, 0}
}

type AuctionEvent struct {
	Type                 AuctionEvent_Type   `protobuf:"varint,1,opt,name=type,proto3,enum=events.AuctionEvent_Type" json:"type,omitempty"`
	LotCreated           *LotCreated         `protobuf:"bytes,2,opt,name=lot_created,json=lotCreated,proto3" json:"lot_created,omitempty"`
	LotStateUpdated      *LotStateUpdated    `protobuf:"bytes,3,opt,name=lot_state_updated,json=lotStateUpdated,proto3" json:"lot_state_updated,omitempty"`
	ParticipantCreated   *ParticipantCreated `protobuf:"bytes,4,opt,name=participant_created,json=participantCreated,proto3" json:"participant_created,omitempty"`
	ParticipantUpdated   *ParticipantUpdated `protobuf:"bytes,5,opt,name=participant_updated,json=participantUpdated,proto3" json:"participant_updated,omitempty"`
	Deposit              *Deposit            `protobuf:"bytes,6,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Winner               *Winner             `protobuf:"bytes,7,opt,name=winner,proto3" json:"winner,omitempty"`
	FinalBid             *FinalBid           `protobuf:"bytes,8,opt,name=finalBid,proto3" json:"finalBid,omitempty"`
	LiveBiddingDetails   *LiveBiddingDetails `protobuf:"bytes,9,opt,name=live_bidding_details,json=liveBiddingDetails,proto3" json:"live_bidding_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AuctionEvent) Reset()         { *m = AuctionEvent{} }
func (m *AuctionEvent) String() string { return proto.CompactTextString(m) }
func (*AuctionEvent) ProtoMessage()    {}
func (*AuctionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{0}
}

func (m *AuctionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuctionEvent.Unmarshal(m, b)
}
func (m *AuctionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuctionEvent.Marshal(b, m, deterministic)
}
func (m *AuctionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuctionEvent.Merge(m, src)
}
func (m *AuctionEvent) XXX_Size() int {
	return xxx_messageInfo_AuctionEvent.Size(m)
}
func (m *AuctionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AuctionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AuctionEvent proto.InternalMessageInfo

func (m *AuctionEvent) GetType() AuctionEvent_Type {
	if m != nil {
		return m.Type
	}
	return AuctionEvent_TYPE_UNKNOWN
}

func (m *AuctionEvent) GetLotCreated() *LotCreated {
	if m != nil {
		return m.LotCreated
	}
	return nil
}

func (m *AuctionEvent) GetLotStateUpdated() *LotStateUpdated {
	if m != nil {
		return m.LotStateUpdated
	}
	return nil
}

func (m *AuctionEvent) GetParticipantCreated() *ParticipantCreated {
	if m != nil {
		return m.ParticipantCreated
	}
	return nil
}

func (m *AuctionEvent) GetParticipantUpdated() *ParticipantUpdated {
	if m != nil {
		return m.ParticipantUpdated
	}
	return nil
}

func (m *AuctionEvent) GetDeposit() *Deposit {
	if m != nil {
		return m.Deposit
	}
	return nil
}

func (m *AuctionEvent) GetWinner() *Winner {
	if m != nil {
		return m.Winner
	}
	return nil
}

func (m *AuctionEvent) GetFinalBid() *FinalBid {
	if m != nil {
		return m.FinalBid
	}
	return nil
}

func (m *AuctionEvent) GetLiveBiddingDetails() *LiveBiddingDetails {
	if m != nil {
		return m.LiveBiddingDetails
	}
	return nil
}

type Lot struct {
	Id              int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type            Lot_Type          `protobuf:"varint,2,opt,name=type,proto3,enum=events.Lot_Type" json:"type,omitempty"`
	PlatformId      string            `protobuf:"bytes,3,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	OrganizerId     string            `protobuf:"bytes,4,opt,name=organizer_id,json=organizerId,proto3" json:"organizer_id,omitempty"`
	StartTime       int64             `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	DurationSec     int32             `protobuf:"varint,6,opt,name=duration_sec,json=durationSec,proto3" json:"duration_sec,omitempty"`
	Name            string            `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Maker           string            `protobuf:"bytes,8,opt,name=maker,proto3" json:"maker,omitempty"`
	Model           string            `protobuf:"bytes,9,opt,name=model,proto3" json:"model,omitempty"`
	ManufactureYear int32             `protobuf:"varint,10,opt,name=manufacture_year,json=manufactureYear,proto3" json:"manufacture_year,omitempty"`
	Country         string            `protobuf:"bytes,12,opt,name=country,proto3" json:"country,omitempty"`
	Registered      bool              `protobuf:"varint,14,opt,name=registered,proto3" json:"registered,omitempty"`
	OnApproval      bool              `protobuf:"varint,20,opt,name=on_approval,json=onApproval,proto3" json:"on_approval,omitempty"`
	ExchangeAllowed bool              `protobuf:"varint,21,opt,name=exchange_allowed,json=exchangeAllowed,proto3" json:"exchange_allowed,omitempty"`
	PrimaryDamage   string            `protobuf:"bytes,23,opt,name=primary_damage,json=primaryDamage,proto3" json:"primary_damage,omitempty"`
	SecondaryDamage string            `protobuf:"bytes,24,opt,name=secondary_damage,json=secondaryDamage,proto3" json:"secondary_damage,omitempty"`
	ImgLinks        []string          `protobuf:"bytes,25,rep,name=img_links,json=imgLinks,proto3" json:"img_links,omitempty"`
	OdometerValueKm int32             `protobuf:"varint,26,opt,name=odometer_value_km,json=odometerValueKm,proto3" json:"odometer_value_km,omitempty"`
	Vin             string            `protobuf:"bytes,27,opt,name=vin,proto3" json:"vin,omitempty"`
	Currency        string            `protobuf:"bytes,30,opt,name=currency,proto3" json:"currency,omitempty"`
	OnRoad          bool              `protobuf:"varint,31,opt,name=on_road,json=onRoad,proto3" json:"on_road,omitempty"`
	CreatedAt       int64             `protobuf:"varint,32,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	HdImgLinks      []string          `protobuf:"bytes,33,rep,name=hd_img_links,json=hdImgLinks,proto3" json:"hd_img_links,omitempty"`
	City            string            `protobuf:"bytes,34,opt,name=city,proto3" json:"city,omitempty"`
	Color           string            `protobuf:"bytes,35,opt,name=color,proto3" json:"color,omitempty"`
	Notes           string            `protobuf:"bytes,36,opt,name=notes,proto3" json:"notes,omitempty"`
	NotesLocalized  map[string]string `protobuf:"bytes,37,rep,name=notes_localized,json=notesLocalized,proto3" json:"notes_localized,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	YoutubeLink     string            `protobuf:"bytes,38,opt,name=youtube_link,json=youtubeLink,proto3" json:"youtube_link,omitempty"`
	MinBidStep      int64             `protobuf:"varint,39,opt,name=min_bid_step,json=minBidStep,proto3" json:"min_bid_step,omitempty"`
	MaxBidStep      int64             `protobuf:"varint,40,opt,name=max_bid_step,json=maxBidStep,proto3" json:"max_bid_step,omitempty"`
	Region          string            `protobuf:"bytes,41,opt,name=region,proto3" json:"region,omitempty"`
	Zip             string            `protobuf:"bytes,42,opt,name=zip,proto3" json:"zip,omitempty"`
	// DEPRECATED: use ownership_document_details instead
	// "ownership_doc_type" denotes the ownership documents that will be transferred to the Member. Each state issues
	// a wide variety of different ownership documents. Each type of document carries with it certain ownership
	// rights and certain restrictions or burdens. Members should research the viability of each type of title
	// document for their intended use of the lot prior to bidding. Each state maintains information on its website
	// for this purpose. Not all Members are able to bid on every title type; some require specific business licenses.
	OwnershipDocType     string `protobuf:"bytes,43,opt,name=ownership_doc_type,json=ownershipDocType,proto3" json:"ownership_doc_type,omitempty"`
	EngineCylinders      string `protobuf:"bytes,44,opt,name=engine_cylinders,json=engineCylinders,proto3" json:"engine_cylinders,omitempty"`
	BodyStyle            string `protobuf:"bytes,45,opt,name=body_style,json=bodyStyle,proto3" json:"body_style,omitempty"`
	DriveType            string `protobuf:"bytes,46,opt,name=drive_type,json=driveType,proto3" json:"drive_type,omitempty"`
	EstimatedRetainValue int64  `protobuf:"varint,47,opt,name=estimated_retain_value,json=estimatedRetainValue,proto3" json:"estimated_retain_value,omitempty"`
	ExternalId           string `protobuf:"bytes,48,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	ExternalSellerName   string `protobuf:"bytes,49,opt,name=external_seller_name,json=externalSellerName,proto3" json:"external_seller_name,omitempty"`
	LossType             string `protobuf:"bytes,50,opt,name=loss_type,json=lossType,proto3" json:"loss_type,omitempty"`
	// DEPRECATED: use key_fob instead
	KeyFobPresent       bool                     `protobuf:"varint,51,opt,name=key_fob_present,json=keyFobPresent,proto3" json:"key_fob_present,omitempty"`
	EngineVolumeCm      int32                    `protobuf:"varint,54,opt,name=engine_volume_cm,json=engineVolumeCm,proto3" json:"engine_volume_cm,omitempty"`
	AuctionPrices       *Lot_AuctionPrices       `protobuf:"bytes,55,opt,name=auction_prices,json=auctionPrices,proto3" json:"auction_prices,omitempty"`
	DirectSalePrices    *Lot_DirectSalePrices    `protobuf:"bytes,56,opt,name=direct_sale_prices,json=directSalePrices,proto3" json:"direct_sale_prices,omitempty"`
	ExtendedName        string                   `protobuf:"bytes,57,opt,name=extended_name,json=extendedName,proto3" json:"extended_name,omitempty"`
	StorageName         string                   `protobuf:"bytes,58,opt,name=storage_name,json=storageName,proto3" json:"storage_name,omitempty"`
	FuelType            enum.Fuel_Type           `protobuf:"varint,28,opt,name=fuel_type,json=fuelType,proto3,enum=enums.Fuel_Type" json:"fuel_type,omitempty"`
	DamageLevel         enum.Damage_Level        `protobuf:"varint,22,opt,name=damage_level,json=damageLevel,proto3,enum=enums.Damage_Level" json:"damage_level,omitempty"`
	WheelPosition       enum.Wheel_Position      `protobuf:"varint,13,opt,name=wheel_position,json=wheelPosition,proto3,enum=enums.Wheel_Position" json:"wheel_position,omitempty"`
	Transmission        enum.Transmission_Type   `protobuf:"varint,29,opt,name=transmission,proto3,enum=enums.Transmission_Type" json:"transmission,omitempty"`
	VehicleState        enum.Vehicle_State       `protobuf:"varint,52,opt,name=vehicle_state,json=vehicleState,proto3,enum=enums.Vehicle_State" json:"vehicle_state,omitempty"`
	OdometerValueState  enum.OdometerValue_State `protobuf:"varint,53,opt,name=odometer_value_state,json=odometerValueState,proto3,enum=enums.OdometerValue_State" json:"odometer_value_state,omitempty"`
	VehicleCategory     string                   `protobuf:"bytes,59,opt,name=vehicleCategory,proto3" json:"vehicleCategory,omitempty"`
	BranchId            string                   `protobuf:"bytes,60,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ExternalSellerType  string                   `protobuf:"bytes,61,opt,name=external_seller_type,json=externalSellerType,proto3" json:"external_seller_type,omitempty"`
	ExternalSellerPhone string                   `protobuf:"bytes,62,opt,name=external_seller_phone,json=externalSellerPhone,proto3" json:"external_seller_phone,omitempty"`
	LiveBidding         *Lot_LiveBidding         `protobuf:"bytes,63,opt,name=liveBidding,proto3" json:"liveBidding,omitempty"`
	IsSubLot            bool                     `protobuf:"varint,64,opt,name=is_sub_lot,json=isSubLot,proto3" json:"is_sub_lot,omitempty"`
	// DEPRECATED: use ownership_document_details instead
	OwnershipDocGrade        int32                         `protobuf:"varint,65,opt,name=ownership_doc_grade,json=ownershipDocGrade,proto3" json:"ownership_doc_grade,omitempty"`
	KeyFob                   int32                         `protobuf:"varint,66,opt,name=key_fob,json=keyFob,proto3" json:"key_fob,omitempty"`
	OwnershipDocumentDetails *Lot_OwnershipDocumentDetails `protobuf:"bytes,67,opt,name=ownership_document_details,json=ownershipDocumentDetails,proto3" json:"ownership_document_details,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                      `json:"-"`
	XXX_unrecognized         []byte                        `json:"-"`
	XXX_sizecache            int32                         `json:"-"`
}

func (m *Lot) Reset()         { *m = Lot{} }
func (m *Lot) String() string { return proto.CompactTextString(m) }
func (*Lot) ProtoMessage()    {}
func (*Lot) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{1}
}

func (m *Lot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lot.Unmarshal(m, b)
}
func (m *Lot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lot.Marshal(b, m, deterministic)
}
func (m *Lot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lot.Merge(m, src)
}
func (m *Lot) XXX_Size() int {
	return xxx_messageInfo_Lot.Size(m)
}
func (m *Lot) XXX_DiscardUnknown() {
	xxx_messageInfo_Lot.DiscardUnknown(m)
}

var xxx_messageInfo_Lot proto.InternalMessageInfo

func (m *Lot) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Lot) GetType() Lot_Type {
	if m != nil {
		return m.Type
	}
	return Lot_TYPE_NO_AUCTION
}

func (m *Lot) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *Lot) GetOrganizerId() string {
	if m != nil {
		return m.OrganizerId
	}
	return ""
}

func (m *Lot) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Lot) GetDurationSec() int32 {
	if m != nil {
		return m.DurationSec
	}
	return 0
}

func (m *Lot) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Lot) GetMaker() string {
	if m != nil {
		return m.Maker
	}
	return ""
}

func (m *Lot) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Lot) GetManufactureYear() int32 {
	if m != nil {
		return m.ManufactureYear
	}
	return 0
}

func (m *Lot) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Lot) GetRegistered() bool {
	if m != nil {
		return m.Registered
	}
	return false
}

func (m *Lot) GetOnApproval() bool {
	if m != nil {
		return m.OnApproval
	}
	return false
}

func (m *Lot) GetExchangeAllowed() bool {
	if m != nil {
		return m.ExchangeAllowed
	}
	return false
}

func (m *Lot) GetPrimaryDamage() string {
	if m != nil {
		return m.PrimaryDamage
	}
	return ""
}

func (m *Lot) GetSecondaryDamage() string {
	if m != nil {
		return m.SecondaryDamage
	}
	return ""
}

func (m *Lot) GetImgLinks() []string {
	if m != nil {
		return m.ImgLinks
	}
	return nil
}

func (m *Lot) GetOdometerValueKm() int32 {
	if m != nil {
		return m.OdometerValueKm
	}
	return 0
}

func (m *Lot) GetVin() string {
	if m != nil {
		return m.Vin
	}
	return ""
}

func (m *Lot) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Lot) GetOnRoad() bool {
	if m != nil {
		return m.OnRoad
	}
	return false
}

func (m *Lot) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Lot) GetHdImgLinks() []string {
	if m != nil {
		return m.HdImgLinks
	}
	return nil
}

func (m *Lot) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Lot) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Lot) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *Lot) GetNotesLocalized() map[string]string {
	if m != nil {
		return m.NotesLocalized
	}
	return nil
}

func (m *Lot) GetYoutubeLink() string {
	if m != nil {
		return m.YoutubeLink
	}
	return ""
}

func (m *Lot) GetMinBidStep() int64 {
	if m != nil {
		return m.MinBidStep
	}
	return 0
}

func (m *Lot) GetMaxBidStep() int64 {
	if m != nil {
		return m.MaxBidStep
	}
	return 0
}

func (m *Lot) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Lot) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Lot) GetOwnershipDocType() string {
	if m != nil {
		return m.OwnershipDocType
	}
	return ""
}

func (m *Lot) GetEngineCylinders() string {
	if m != nil {
		return m.EngineCylinders
	}
	return ""
}

func (m *Lot) GetBodyStyle() string {
	if m != nil {
		return m.BodyStyle
	}
	return ""
}

func (m *Lot) GetDriveType() string {
	if m != nil {
		return m.DriveType
	}
	return ""
}

func (m *Lot) GetEstimatedRetainValue() int64 {
	if m != nil {
		return m.EstimatedRetainValue
	}
	return 0
}

func (m *Lot) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Lot) GetExternalSellerName() string {
	if m != nil {
		return m.ExternalSellerName
	}
	return ""
}

func (m *Lot) GetLossType() string {
	if m != nil {
		return m.LossType
	}
	return ""
}

func (m *Lot) GetKeyFobPresent() bool {
	if m != nil {
		return m.KeyFobPresent
	}
	return false
}

func (m *Lot) GetEngineVolumeCm() int32 {
	if m != nil {
		return m.EngineVolumeCm
	}
	return 0
}

func (m *Lot) GetAuctionPrices() *Lot_AuctionPrices {
	if m != nil {
		return m.AuctionPrices
	}
	return nil
}

func (m *Lot) GetDirectSalePrices() *Lot_DirectSalePrices {
	if m != nil {
		return m.DirectSalePrices
	}
	return nil
}

func (m *Lot) GetExtendedName() string {
	if m != nil {
		return m.ExtendedName
	}
	return ""
}

func (m *Lot) GetStorageName() string {
	if m != nil {
		return m.StorageName
	}
	return ""
}

func (m *Lot) GetFuelType() enum.Fuel_Type {
	if m != nil {
		return m.FuelType
	}
	return enum.Fuel_TYPE_UNKNOWN
}

func (m *Lot) GetDamageLevel() enum.Damage_Level {
	if m != nil {
		return m.DamageLevel
	}
	return enum.Damage_LEVEL_UNKNOWN
}

func (m *Lot) GetWheelPosition() enum.Wheel_Position {
	if m != nil {
		return m.WheelPosition
	}
	return enum.Wheel_POSITION_UNKNOWN
}

func (m *Lot) GetTransmission() enum.Transmission_Type {
	if m != nil {
		return m.Transmission
	}
	return enum.Transmission_TYPE_UNKNOWN
}

func (m *Lot) GetVehicleState() enum.Vehicle_State {
	if m != nil {
		return m.VehicleState
	}
	return enum.Vehicle_STATE_UNKNOWN
}

func (m *Lot) GetOdometerValueState() enum.OdometerValue_State {
	if m != nil {
		return m.OdometerValueState
	}
	return enum.OdometerValue_STATE_UNKNOWN
}

func (m *Lot) GetVehicleCategory() string {
	if m != nil {
		return m.VehicleCategory
	}
	return ""
}

func (m *Lot) GetBranchId() string {
	if m != nil {
		return m.BranchId
	}
	return ""
}

func (m *Lot) GetExternalSellerType() string {
	if m != nil {
		return m.ExternalSellerType
	}
	return ""
}

func (m *Lot) GetExternalSellerPhone() string {
	if m != nil {
		return m.ExternalSellerPhone
	}
	return ""
}

func (m *Lot) GetLiveBidding() *Lot_LiveBidding {
	if m != nil {
		return m.LiveBidding
	}
	return nil
}

func (m *Lot) GetIsSubLot() bool {
	if m != nil {
		return m.IsSubLot
	}
	return false
}

func (m *Lot) GetOwnershipDocGrade() int32 {
	if m != nil {
		return m.OwnershipDocGrade
	}
	return 0
}

func (m *Lot) GetKeyFob() int32 {
	if m != nil {
		return m.KeyFob
	}
	return 0
}

func (m *Lot) GetOwnershipDocumentDetails() *Lot_OwnershipDocumentDetails {
	if m != nil {
		return m.OwnershipDocumentDetails
	}
	return nil
}

type Lot_AuctionPrices struct {
	Start                int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	BuyNow               int64    `protobuf:"varint,2,opt,name=buy_now,json=buyNow,proto3" json:"buy_now,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lot_AuctionPrices) Reset()         { *m = Lot_AuctionPrices{} }
func (m *Lot_AuctionPrices) String() string { return proto.CompactTextString(m) }
func (*Lot_AuctionPrices) ProtoMessage()    {}
func (*Lot_AuctionPrices) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{1, 1}
}

func (m *Lot_AuctionPrices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lot_AuctionPrices.Unmarshal(m, b)
}
func (m *Lot_AuctionPrices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lot_AuctionPrices.Marshal(b, m, deterministic)
}
func (m *Lot_AuctionPrices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lot_AuctionPrices.Merge(m, src)
}
func (m *Lot_AuctionPrices) XXX_Size() int {
	return xxx_messageInfo_Lot_AuctionPrices.Size(m)
}
func (m *Lot_AuctionPrices) XXX_DiscardUnknown() {
	xxx_messageInfo_Lot_AuctionPrices.DiscardUnknown(m)
}

var xxx_messageInfo_Lot_AuctionPrices proto.InternalMessageInfo

func (m *Lot_AuctionPrices) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Lot_AuctionPrices) GetBuyNow() int64 {
	if m != nil {
		return m.BuyNow
	}
	return 0
}

type Lot_DirectSalePrices struct {
	BusinessTotal        int64    `protobuf:"varint,1,opt,name=business_total,json=businessTotal,proto3" json:"business_total,omitempty"`
	BusinessFee          int64    `protobuf:"varint,2,opt,name=business_fee,json=businessFee,proto3" json:"business_fee,omitempty"`
	CustomerTotal        int64    `protobuf:"varint,3,opt,name=customer_total,json=customerTotal,proto3" json:"customer_total,omitempty"`
	CustomerFee          int64    `protobuf:"varint,4,opt,name=customer_fee,json=customerFee,proto3" json:"customer_fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lot_DirectSalePrices) Reset()         { *m = Lot_DirectSalePrices{} }
func (m *Lot_DirectSalePrices) String() string { return proto.CompactTextString(m) }
func (*Lot_DirectSalePrices) ProtoMessage()    {}
func (*Lot_DirectSalePrices) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{1, 2}
}

func (m *Lot_DirectSalePrices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lot_DirectSalePrices.Unmarshal(m, b)
}
func (m *Lot_DirectSalePrices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lot_DirectSalePrices.Marshal(b, m, deterministic)
}
func (m *Lot_DirectSalePrices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lot_DirectSalePrices.Merge(m, src)
}
func (m *Lot_DirectSalePrices) XXX_Size() int {
	return xxx_messageInfo_Lot_DirectSalePrices.Size(m)
}
func (m *Lot_DirectSalePrices) XXX_DiscardUnknown() {
	xxx_messageInfo_Lot_DirectSalePrices.DiscardUnknown(m)
}

var xxx_messageInfo_Lot_DirectSalePrices proto.InternalMessageInfo

func (m *Lot_DirectSalePrices) GetBusinessTotal() int64 {
	if m != nil {
		return m.BusinessTotal
	}
	return 0
}

func (m *Lot_DirectSalePrices) GetBusinessFee() int64 {
	if m != nil {
		return m.BusinessFee
	}
	return 0
}

func (m *Lot_DirectSalePrices) GetCustomerTotal() int64 {
	if m != nil {
		return m.CustomerTotal
	}
	return 0
}

func (m *Lot_DirectSalePrices) GetCustomerFee() int64 {
	if m != nil {
		return m.CustomerFee
	}
	return 0
}

type Lot_LiveBidding struct {
	Yard                 string   `protobuf:"bytes,1,opt,name=yard,proto3" json:"yard,omitempty"`
	Lane                 string   `protobuf:"bytes,2,opt,name=lane,proto3" json:"lane,omitempty"`
	ItemNumber           int64    `protobuf:"varint,3,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lot_LiveBidding) Reset()         { *m = Lot_LiveBidding{} }
func (m *Lot_LiveBidding) String() string { return proto.CompactTextString(m) }
func (*Lot_LiveBidding) ProtoMessage()    {}
func (*Lot_LiveBidding) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{1, 3}
}

func (m *Lot_LiveBidding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lot_LiveBidding.Unmarshal(m, b)
}
func (m *Lot_LiveBidding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lot_LiveBidding.Marshal(b, m, deterministic)
}
func (m *Lot_LiveBidding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lot_LiveBidding.Merge(m, src)
}
func (m *Lot_LiveBidding) XXX_Size() int {
	return xxx_messageInfo_Lot_LiveBidding.Size(m)
}
func (m *Lot_LiveBidding) XXX_DiscardUnknown() {
	xxx_messageInfo_Lot_LiveBidding.DiscardUnknown(m)
}

var xxx_messageInfo_Lot_LiveBidding proto.InternalMessageInfo

func (m *Lot_LiveBidding) GetYard() string {
	if m != nil {
		return m.Yard
	}
	return ""
}

func (m *Lot_LiveBidding) GetLane() string {
	if m != nil {
		return m.Lane
	}
	return ""
}

func (m *Lot_LiveBidding) GetItemNumber() int64 {
	if m != nil {
		return m.ItemNumber
	}
	return 0
}

type Lot_OwnershipDocumentDetails struct {
	Original             string   `protobuf:"bytes,1,opt,name=original,proto3" json:"original,omitempty"`
	Grade                int32    `protobuf:"varint,2,opt,name=grade,proto3" json:"grade,omitempty"`
	Document             int32    `protobuf:"varint,3,opt,name=document,proto3" json:"document,omitempty"`
	IsPending            bool     `protobuf:"varint,4,opt,name=is_pending,json=isPending,proto3" json:"is_pending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lot_OwnershipDocumentDetails) Reset()         { *m = Lot_OwnershipDocumentDetails{} }
func (m *Lot_OwnershipDocumentDetails) String() string { return proto.CompactTextString(m) }
func (*Lot_OwnershipDocumentDetails) ProtoMessage()    {}
func (*Lot_OwnershipDocumentDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{1, 4}
}

func (m *Lot_OwnershipDocumentDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lot_OwnershipDocumentDetails.Unmarshal(m, b)
}
func (m *Lot_OwnershipDocumentDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lot_OwnershipDocumentDetails.Marshal(b, m, deterministic)
}
func (m *Lot_OwnershipDocumentDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lot_OwnershipDocumentDetails.Merge(m, src)
}
func (m *Lot_OwnershipDocumentDetails) XXX_Size() int {
	return xxx_messageInfo_Lot_OwnershipDocumentDetails.Size(m)
}
func (m *Lot_OwnershipDocumentDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_Lot_OwnershipDocumentDetails.DiscardUnknown(m)
}

var xxx_messageInfo_Lot_OwnershipDocumentDetails proto.InternalMessageInfo

func (m *Lot_OwnershipDocumentDetails) GetOriginal() string {
	if m != nil {
		return m.Original
	}
	return ""
}

func (m *Lot_OwnershipDocumentDetails) GetGrade() int32 {
	if m != nil {
		return m.Grade
	}
	return 0
}

func (m *Lot_OwnershipDocumentDetails) GetDocument() int32 {
	if m != nil {
		return m.Document
	}
	return 0
}

func (m *Lot_OwnershipDocumentDetails) GetIsPending() bool {
	if m != nil {
		return m.IsPending
	}
	return false
}

type LotCreated struct {
	Lot                  *Lot     `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LotCreated) Reset()         { *m = LotCreated{} }
func (m *LotCreated) String() string { return proto.CompactTextString(m) }
func (*LotCreated) ProtoMessage()    {}
func (*LotCreated) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{2}
}

func (m *LotCreated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LotCreated.Unmarshal(m, b)
}
func (m *LotCreated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LotCreated.Marshal(b, m, deterministic)
}
func (m *LotCreated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LotCreated.Merge(m, src)
}
func (m *LotCreated) XXX_Size() int {
	return xxx_messageInfo_LotCreated.Size(m)
}
func (m *LotCreated) XXX_DiscardUnknown() {
	xxx_messageInfo_LotCreated.DiscardUnknown(m)
}

var xxx_messageInfo_LotCreated proto.InternalMessageInfo

func (m *LotCreated) GetLot() *Lot {
	if m != nil {
		return m.Lot
	}
	return nil
}

type LotStateUpdated struct {
	LotId                int64     `protobuf:"varint,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	State                Lot_State `protobuf:"varint,2,opt,name=state,proto3,enum=events.Lot_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LotStateUpdated) Reset()         { *m = LotStateUpdated{} }
func (m *LotStateUpdated) String() string { return proto.CompactTextString(m) }
func (*LotStateUpdated) ProtoMessage()    {}
func (*LotStateUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{3}
}

func (m *LotStateUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LotStateUpdated.Unmarshal(m, b)
}
func (m *LotStateUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LotStateUpdated.Marshal(b, m, deterministic)
}
func (m *LotStateUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LotStateUpdated.Merge(m, src)
}
func (m *LotStateUpdated) XXX_Size() int {
	return xxx_messageInfo_LotStateUpdated.Size(m)
}
func (m *LotStateUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_LotStateUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_LotStateUpdated proto.InternalMessageInfo

func (m *LotStateUpdated) GetLotId() int64 {
	if m != nil {
		return m.LotId
	}
	return 0
}

func (m *LotStateUpdated) GetState() Lot_State {
	if m != nil {
		return m.State
	}
	return Lot_STATE_UNKNOWN
}

type Participant struct {
	AccountId       string            `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RequestedBuyNow bool              `protobuf:"varint,2,opt,name=requested_buy_now,json=requestedBuyNow,proto3" json:"requested_buy_now,omitempty"`
	CurrentBid      int64             `protobuf:"varint,3,opt,name=current_bid,json=currentBid,proto3" json:"current_bid,omitempty"`
	State           Participant_State `protobuf:"varint,4,opt,name=state,proto3,enum=events.Participant_State" json:"state,omitempty"`
	BidLimit        int64             `protobuf:"varint,5,opt,name=bid_limit,json=bidLimit,proto3" json:"bid_limit,omitempty"`
	AutoBidLimit    int64             `protobuf:"varint,6,opt,name=auto_bid_limit,json=autoBidLimit,proto3" json:"auto_bid_limit,omitempty"`
	// only set when lost on live bidding
	OutbidedWith         int64    `protobuf:"varint,8,opt,name=outbided_with,json=outbidedWith,proto3" json:"outbided_with,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Participant) Reset()         { *m = Participant{} }
func (m *Participant) String() string { return proto.CompactTextString(m) }
func (*Participant) ProtoMessage()    {}
func (*Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{4}
}

func (m *Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Participant.Unmarshal(m, b)
}
func (m *Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Participant.Marshal(b, m, deterministic)
}
func (m *Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Participant.Merge(m, src)
}
func (m *Participant) XXX_Size() int {
	return xxx_messageInfo_Participant.Size(m)
}
func (m *Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_Participant proto.InternalMessageInfo

func (m *Participant) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Participant) GetRequestedBuyNow() bool {
	if m != nil {
		return m.RequestedBuyNow
	}
	return false
}

func (m *Participant) GetCurrentBid() int64 {
	if m != nil {
		return m.CurrentBid
	}
	return 0
}

func (m *Participant) GetState() Participant_State {
	if m != nil {
		return m.State
	}
	return Participant_STATE_PENDING
}

func (m *Participant) GetBidLimit() int64 {
	if m != nil {
		return m.BidLimit
	}
	return 0
}

func (m *Participant) GetAutoBidLimit() int64 {
	if m != nil {
		return m.AutoBidLimit
	}
	return 0
}

func (m *Participant) GetOutbidedWith() int64 {
	if m != nil {
		return m.OutbidedWith
	}
	return 0
}

type ParticipantCreated struct {
	LotId                int64        `protobuf:"varint,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	Participant          *Participant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ParticipantCreated) Reset()         { *m = ParticipantCreated{} }
func (m *ParticipantCreated) String() string { return proto.CompactTextString(m) }
func (*ParticipantCreated) ProtoMessage()    {}
func (*ParticipantCreated) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{5}
}

func (m *ParticipantCreated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParticipantCreated.Unmarshal(m, b)
}
func (m *ParticipantCreated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParticipantCreated.Marshal(b, m, deterministic)
}
func (m *ParticipantCreated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipantCreated.Merge(m, src)
}
func (m *ParticipantCreated) XXX_Size() int {
	return xxx_messageInfo_ParticipantCreated.Size(m)
}
func (m *ParticipantCreated) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipantCreated.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipantCreated proto.InternalMessageInfo

func (m *ParticipantCreated) GetLotId() int64 {
	if m != nil {
		return m.LotId
	}
	return 0
}

func (m *ParticipantCreated) GetParticipant() *Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

type ParticipantUpdated struct {
	LotId                int64        `protobuf:"varint,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	Participant          *Participant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ParticipantUpdated) Reset()         { *m = ParticipantUpdated{} }
func (m *ParticipantUpdated) String() string { return proto.CompactTextString(m) }
func (*ParticipantUpdated) ProtoMessage()    {}
func (*ParticipantUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{6}
}

func (m *ParticipantUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParticipantUpdated.Unmarshal(m, b)
}
func (m *ParticipantUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParticipantUpdated.Marshal(b, m, deterministic)
}
func (m *ParticipantUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipantUpdated.Merge(m, src)
}
func (m *ParticipantUpdated) XXX_Size() int {
	return xxx_messageInfo_ParticipantUpdated.Size(m)
}
func (m *ParticipantUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipantUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipantUpdated proto.InternalMessageInfo

func (m *ParticipantUpdated) GetLotId() int64 {
	if m != nil {
		return m.LotId
	}
	return 0
}

func (m *ParticipantUpdated) GetParticipant() *Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

type FinalBid struct {
	LotId                int64    `protobuf:"varint,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	AccountId            string   `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinalBid) Reset()         { *m = FinalBid{} }
func (m *FinalBid) String() string { return proto.CompactTextString(m) }
func (*FinalBid) ProtoMessage()    {}
func (*FinalBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{7}
}

func (m *FinalBid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinalBid.Unmarshal(m, b)
}
func (m *FinalBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinalBid.Marshal(b, m, deterministic)
}
func (m *FinalBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalBid.Merge(m, src)
}
func (m *FinalBid) XXX_Size() int {
	return xxx_messageInfo_FinalBid.Size(m)
}
func (m *FinalBid) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalBid.DiscardUnknown(m)
}

var xxx_messageInfo_FinalBid proto.InternalMessageInfo

func (m *FinalBid) GetLotId() int64 {
	if m != nil {
		return m.LotId
	}
	return 0
}

func (m *FinalBid) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *FinalBid) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// Deprecated: use DepositV2 instead
type Deposit struct {
	Id                   int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int64         `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string        `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	AccountId            string        `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	LotId                int64         `protobuf:"varint,5,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	ParticipantId        int64         `protobuf:"varint,7,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	State                Deposit_State `protobuf:"varint,6,opt,name=state,proto3,enum=events.Deposit_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Deposit) Reset()         { *m = Deposit{} }
func (m *Deposit) String() string { return proto.CompactTextString(m) }
func (*Deposit) ProtoMessage()    {}
func (*Deposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{8}
}

func (m *Deposit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deposit.Unmarshal(m, b)
}
func (m *Deposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deposit.Marshal(b, m, deterministic)
}
func (m *Deposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deposit.Merge(m, src)
}
func (m *Deposit) XXX_Size() int {
	return xxx_messageInfo_Deposit.Size(m)
}
func (m *Deposit) XXX_DiscardUnknown() {
	xxx_messageInfo_Deposit.DiscardUnknown(m)
}

var xxx_messageInfo_Deposit proto.InternalMessageInfo

func (m *Deposit) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Deposit) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Deposit) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Deposit) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Deposit) GetLotId() int64 {
	if m != nil {
		return m.LotId
	}
	return 0
}

func (m *Deposit) GetParticipantId() int64 {
	if m != nil {
		return m.ParticipantId
	}
	return 0
}

func (m *Deposit) GetState() Deposit_State {
	if m != nil {
		return m.State
	}
	return Deposit_STATE_UNKNOWN
}

type Winner struct {
	LotId                       int64        `protobuf:"varint,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	InvoiceId                   string       `protobuf:"bytes,2,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	InvoicePaid                 bool         `protobuf:"varint,3,opt,name=invoice_paid,json=invoicePaid,proto3" json:"invoice_paid,omitempty"`
	InvoiceCreatedAt            int64        `protobuf:"varint,4,opt,name=invoice_created_at,json=invoiceCreatedAt,proto3" json:"invoice_created_at,omitempty"`
	ContainerId                 string       `protobuf:"bytes,5,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerLink               string       `protobuf:"bytes,6,opt,name=container_link,json=containerLink,proto3" json:"container_link,omitempty"`
	FeeAmount                   int64        `protobuf:"varint,7,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`
	FeeCurrency                 string       `protobuf:"bytes,8,opt,name=fee_currency,json=feeCurrency,proto3" json:"fee_currency,omitempty"`
	TransportationPrice         int64        `protobuf:"varint,9,opt,name=transportation_price,json=transportationPrice,proto3" json:"transportation_price,omitempty"`
	TransportationPriceCurrency string       `protobuf:"bytes,11,opt,name=transportation_price_currency,json=transportationPriceCurrency,proto3" json:"transportation_price_currency,omitempty"`
	DeliveredAt                 int64        `protobuf:"varint,12,opt,name=delivered_at,json=deliveredAt,proto3" json:"delivered_at,omitempty"`
	State                       Winner_State `protobuf:"varint,10,opt,name=state,proto3,enum=events.Winner_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}     `json:"-"`
	XXX_unrecognized            []byte       `json:"-"`
	XXX_sizecache               int32        `json:"-"`
}

func (m *Winner) Reset()         { *m = Winner{} }
func (m *Winner) String() string { return proto.CompactTextString(m) }
func (*Winner) ProtoMessage()    {}
func (*Winner) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{9}
}

func (m *Winner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Winner.Unmarshal(m, b)
}
func (m *Winner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Winner.Marshal(b, m, deterministic)
}
func (m *Winner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Winner.Merge(m, src)
}
func (m *Winner) XXX_Size() int {
	return xxx_messageInfo_Winner.Size(m)
}
func (m *Winner) XXX_DiscardUnknown() {
	xxx_messageInfo_Winner.DiscardUnknown(m)
}

var xxx_messageInfo_Winner proto.InternalMessageInfo

func (m *Winner) GetLotId() int64 {
	if m != nil {
		return m.LotId
	}
	return 0
}

func (m *Winner) GetInvoiceId() string {
	if m != nil {
		return m.InvoiceId
	}
	return ""
}

func (m *Winner) GetInvoicePaid() bool {
	if m != nil {
		return m.InvoicePaid
	}
	return false
}

func (m *Winner) GetInvoiceCreatedAt() int64 {
	if m != nil {
		return m.InvoiceCreatedAt
	}
	return 0
}

func (m *Winner) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *Winner) GetContainerLink() string {
	if m != nil {
		return m.ContainerLink
	}
	return ""
}

func (m *Winner) GetFeeAmount() int64 {
	if m != nil {
		return m.FeeAmount
	}
	return 0
}

func (m *Winner) GetFeeCurrency() string {
	if m != nil {
		return m.FeeCurrency
	}
	return ""
}

func (m *Winner) GetTransportationPrice() int64 {
	if m != nil {
		return m.TransportationPrice
	}
	return 0
}

func (m *Winner) GetTransportationPriceCurrency() string {
	if m != nil {
		return m.TransportationPriceCurrency
	}
	return ""
}

func (m *Winner) GetDeliveredAt() int64 {
	if m != nil {
		return m.DeliveredAt
	}
	return 0
}

func (m *Winner) GetState() Winner_State {
	if m != nil {
		return m.State
	}
	return Winner_STATE_UNKNOWN
}

type LiveBiddingDetails struct {
	LotId                int64    `protobuf:"varint,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	Lane                 string   `protobuf:"bytes,2,opt,name=lane,proto3" json:"lane,omitempty"`
	ItemNumber           uint64   `protobuf:"varint,3,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
	BranchName           string   `protobuf:"bytes,4,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Branch               string   `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`
	StartTime            int64    `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Platform             string   `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveBiddingDetails) Reset()         { *m = LiveBiddingDetails{} }
func (m *LiveBiddingDetails) String() string { return proto.CompactTextString(m) }
func (*LiveBiddingDetails) ProtoMessage()    {}
func (*LiveBiddingDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02e33ddbe47f53, []int{10}
}

func (m *LiveBiddingDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveBiddingDetails.Unmarshal(m, b)
}
func (m *LiveBiddingDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveBiddingDetails.Marshal(b, m, deterministic)
}
func (m *LiveBiddingDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveBiddingDetails.Merge(m, src)
}
func (m *LiveBiddingDetails) XXX_Size() int {
	return xxx_messageInfo_LiveBiddingDetails.Size(m)
}
func (m *LiveBiddingDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveBiddingDetails.DiscardUnknown(m)
}

var xxx_messageInfo_LiveBiddingDetails proto.InternalMessageInfo

func (m *LiveBiddingDetails) GetLotId() int64 {
	if m != nil {
		return m.LotId
	}
	return 0
}

func (m *LiveBiddingDetails) GetLane() string {
	if m != nil {
		return m.Lane
	}
	return ""
}

func (m *LiveBiddingDetails) GetItemNumber() uint64 {
	if m != nil {
		return m.ItemNumber
	}
	return 0
}

func (m *LiveBiddingDetails) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *LiveBiddingDetails) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *LiveBiddingDetails) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *LiveBiddingDetails) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func init() {
	proto.RegisterEnum("events.AuctionEvent_Type", AuctionEvent_Type_name, AuctionEvent_Type_value)
	proto.RegisterEnum("events.Lot_Type", Lot_Type_name, Lot_Type_value)
	proto.RegisterEnum("events.Lot_State", Lot_State_name, Lot_State_value)
	proto.RegisterEnum("events.Participant_State", Participant_State_name, Participant_State_value)
	proto.RegisterEnum("events.Deposit_State", Deposit_State_name, Deposit_State_value)
	proto.RegisterEnum("events.Winner_State", Winner_State_name, Winner_State_value)
	proto.RegisterType((*AuctionEvent)(nil), "events.AuctionEvent")
	proto.RegisterType((*Lot)(nil), "events.Lot")
	proto.RegisterMapType((map[string]string)(nil), "events.Lot.NotesLocalizedEntry")
	proto.RegisterType((*Lot_AuctionPrices)(nil), "events.Lot.AuctionPrices")
	proto.RegisterType((*Lot_DirectSalePrices)(nil), "events.Lot.DirectSalePrices")
	proto.RegisterType((*Lot_LiveBidding)(nil), "events.Lot.LiveBidding")
	proto.RegisterType((*Lot_OwnershipDocumentDetails)(nil), "events.Lot.OwnershipDocumentDetails")
	proto.RegisterType((*LotCreated)(nil), "events.LotCreated")
	proto.RegisterType((*LotStateUpdated)(nil), "events.LotStateUpdated")
	proto.RegisterType((*Participant)(nil), "events.Participant")
	proto.RegisterType((*ParticipantCreated)(nil), "events.ParticipantCreated")
	proto.RegisterType((*ParticipantUpdated)(nil), "events.ParticipantUpdated")
	proto.RegisterType((*FinalBid)(nil), "events.FinalBid")
	proto.RegisterType((*Deposit)(nil), "events.Deposit")
	proto.RegisterType((*Winner)(nil), "events.Winner")
	proto.RegisterType((*LiveBiddingDetails)(nil), "events.LiveBiddingDetails")
}

func init() { proto.RegisterFile("auctions.proto", fileDescriptor_1b02e33ddbe47f53) }

var fileDescriptor_1b02e33ddbe47f53 = []byte{
	// 2654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x58, 0xcd, 0x76, 0xe3, 0xb6,
	0x15, 0x8e, 0x2c, 0x59, 0x96, 0xae, 0x64, 0x9b, 0x03, 0x7b, 0x3c, 0x1c, 0xcf, 0x38, 0xf1, 0x68,
	0x26, 0x89, 0xf3, 0xe7, 0x49, 0x26, 0x3f, 0x4d, 0xd2, 0x34, 0x8d, 0x2c, 0xc9, 0x13, 0x26, 0x8a,
	0xa4, 0x52, 0x1a, 0xbb, 0xd3, 0x0d, 0x0f, 0x25, 0xc2, 0x32, 0x8e, 0x49, 0x42, 0x25, 0x29, 0x7b,
	0x34, 0x2f, 0xd0, 0x77, 0xe8, 0xa2, 0xcb, 0x3e, 0x42, 0xcf, 0xe9, 0xb2, 0x9b, 0x3e, 0x41, 0x97,
	0x7d, 0x97, 0xf6, 0xe0, 0x02, 0xa0, 0x28, 0xd9, 0x4e, 0x7b, 0xb2, 0x23, 0xbe, 0xfb, 0xe1, 0x02,
	0x04, 0x3e, 0x5c, 0xdc, 0x0b, 0xd8, 0x70, 0xa7, 0xa3, 0x84, 0xf1, 0x30, 0x3e, 0x9c, 0x44, 0x3c,
	0xe1, 0xa4, 0x48, 0x2f, 0x69, 0x98, 0xc4, 0xbb, 0x15, 0x1a, 0x4e, 0x03, 0x05, 0xd6, 0xfe, 0xb3,
	0x0a, 0xd5, 0xba, 0xe4, 0xb5, 0x84, 0x99, 0x7c, 0x04, 0x85, 0x64, 0x36, 0xa1, 0x66, 0x6e, 0x3f,
	0x77, 0xb0, 0xf1, 0xec, 0xfe, 0xa1, 0xec, 0x74, 0x98, 0xe5, 0x1c, 0x0e, 0x66, 0x13, 0x6a, 0x23,
	0x8d, 0x7c, 0x0a, 0x15, 0x9f, 0x27, 0xce, 0x28, 0xa2, 0x6e, 0x42, 0x3d, 0x73, 0x65, 0x3f, 0x77,
	0x50, 0x79, 0x46, 0x74, 0xaf, 0x36, 0x4f, 0x1a, 0xd2, 0x62, 0x83, 0x9f, 0x7e, 0x93, 0x06, 0xdc,
	0x11, 0x9d, 0xe2, 0xc4, 0x4d, 0xa8, 0x33, 0x9d, 0x78, 0xd8, 0x35, 0x8f, 0x5d, 0xef, 0x65, 0xba,
	0xf6, 0x85, 0xfd, 0x85, 0x34, 0xdb, 0x9b, 0xfe, 0x22, 0x40, 0x7e, 0x84, 0xad, 0x89, 0x1b, 0x25,
	0x6c, 0xc4, 0x26, 0x6e, 0x38, 0x9f, 0x41, 0x01, 0xdd, 0xec, 0x6a, 0x37, 0xbd, 0x39, 0x45, 0xcf,
	0x84, 0x4c, 0xae, 0x61, 0xcb, 0xce, 0xf4, 0x9c, 0x56, 0x6f, 0x75, 0xa6, 0xa7, 0x95, 0x75, 0xa6,
	0x67, 0xf6, 0x1e, 0xac, 0x79, 0x74, 0xc2, 0x63, 0x96, 0x98, 0x45, 0x74, 0xb0, 0xa9, 0x1d, 0x34,
	0x25, 0x6c, 0x6b, 0x3b, 0x79, 0x07, 0x8a, 0x57, 0x2c, 0x0c, 0x69, 0x64, 0xae, 0x21, 0x73, 0x43,
	0x33, 0x4f, 0x11, 0xb5, 0x95, 0x95, 0x7c, 0x08, 0xa5, 0x33, 0x16, 0xba, 0xfe, 0x11, 0xf3, 0xcc,
	0x12, 0x32, 0x0d, 0xcd, 0x3c, 0x56, 0xb8, 0x9d, 0x32, 0x48, 0x1b, 0xb6, 0x7d, 0x76, 0x49, 0x9d,
	0x21, 0xf3, 0x3c, 0x16, 0x8e, 0x1d, 0x8f, 0x26, 0x2e, 0xf3, 0x63, 0xb3, 0xbc, 0xf8, 0x3b, 0x6d,
	0x76, 0x49, 0x8f, 0x24, 0xa5, 0x29, 0x19, 0x36, 0xf1, 0xaf, 0x61, 0xb5, 0x7f, 0xe7, 0xa0, 0x20,
	0x76, 0x9c, 0x18, 0x50, 0x1d, 0xbc, 0xec, 0xb5, 0x9c, 0x17, 0x9d, 0x1f, 0x3b, 0xdd, 0xd3, 0x8e,
	0xf1, 0x06, 0xd9, 0x06, 0x03, 0x91, 0x76, 0x77, 0xe0, 0x34, 0xec, 0x56, 0x7d, 0xd0, 0x6a, 0x1a,
	0x39, 0xb2, 0x0b, 0x3b, 0x29, 0xda, 0x1f, 0xd4, 0x07, 0x2d, 0xe7, 0x45, 0xaf, 0x89, 0xb6, 0x15,
	0xf2, 0x10, 0x4c, 0xb4, 0xf5, 0xea, 0xf6, 0xc0, 0x6a, 0x58, 0xbd, 0x7a, 0x67, 0xde, 0x33, 0x7f,
	0xa3, 0x55, 0xf7, 0x2d, 0xa4, 0xe3, 0x37, 0x5b, 0xbd, 0x6e, 0xdf, 0x1a, 0x18, 0xab, 0x64, 0x13,
	0x2a, 0x88, 0x9c, 0x5a, 0x9d, 0x4e, 0xcb, 0x36, 0x8a, 0x84, 0xc0, 0x06, 0x02, 0xc7, 0x56, 0xa7,
	0xde, 0x76, 0x8e, 0xac, 0xa6, 0xb1, 0x46, 0xf6, 0xe0, 0xbe, 0x9c, 0x8e, 0x75, 0xd2, 0x12, 0x50,
	0xd3, 0xea, 0x3c, 0x77, 0x9a, 0xad, 0x41, 0xdd, 0x6a, 0xf7, 0x8d, 0x52, 0xed, 0x9f, 0x26, 0xe4,
	0xdb, 0x3c, 0x21, 0x1b, 0xb0, 0xc2, 0x3c, 0x94, 0x7d, 0xde, 0x5e, 0x61, 0x1e, 0x79, 0xa2, 0x0e,
	0xc2, 0x0a, 0x1e, 0x04, 0x23, 0xa3, 0xcb, 0xac, 0xfe, 0xdf, 0x82, 0xca, 0xc4, 0x77, 0x93, 0x33,
	0x1e, 0x05, 0x0e, 0x93, 0x22, 0x2e, 0xdb, 0xa0, 0x21, 0xcb, 0x23, 0x8f, 0xa0, 0xca, 0xa3, 0xb1,
	0x1b, 0xb2, 0xd7, 0x34, 0x12, 0x8c, 0x02, 0x32, 0x2a, 0x29, 0x66, 0x79, 0x64, 0x0f, 0x20, 0x4e,
	0xdc, 0x28, 0x71, 0x12, 0x16, 0x50, 0xd4, 0x5c, 0xde, 0x2e, 0x23, 0x32, 0x60, 0x01, 0x15, 0x1e,
	0xbc, 0x69, 0xe4, 0x8a, 0xe3, 0xe7, 0xc4, 0x74, 0x84, 0x9a, 0x5a, 0xb5, 0x2b, 0x1a, 0xeb, 0xd3,
	0x11, 0x21, 0x50, 0x08, 0xdd, 0x80, 0xa2, 0x88, 0xca, 0x36, 0x7e, 0x93, 0x6d, 0x58, 0x0d, 0xdc,
	0x0b, 0x1a, 0xa1, 0x5e, 0xca, 0xb6, 0x6c, 0x20, 0xca, 0x3d, 0xea, 0xa3, 0x16, 0x04, 0x2a, 0x1a,
	0xe4, 0x3d, 0x30, 0x02, 0x37, 0x9c, 0x9e, 0xb9, 0xa3, 0x64, 0x1a, 0x51, 0x67, 0x46, 0xdd, 0xc8,
	0x04, 0x1c, 0x66, 0x33, 0x83, 0xbf, 0xa4, 0x6e, 0x44, 0x4c, 0x58, 0x1b, 0xf1, 0x69, 0x98, 0x44,
	0x33, 0xb3, 0x8a, 0x2e, 0x74, 0x93, 0xbc, 0x09, 0x10, 0xd1, 0x31, 0x8b, 0x13, 0x1a, 0x51, 0xcf,
	0xdc, 0xd8, 0xcf, 0x1d, 0x94, 0xec, 0x0c, 0x22, 0x96, 0x8a, 0x87, 0x8e, 0x3b, 0x99, 0x44, 0xfc,
	0xd2, 0xf5, 0xcd, 0x6d, 0x49, 0xe0, 0x61, 0x5d, 0x21, 0x62, 0x16, 0xf4, 0xd5, 0xe8, 0xdc, 0x0d,
	0xc7, 0xd4, 0x71, 0x7d, 0x9f, 0x5f, 0x51, 0xcf, 0xbc, 0x8b, 0xac, 0x4d, 0x8d, 0xd7, 0x25, 0x4c,
	0xde, 0x86, 0x8d, 0x49, 0xc4, 0x02, 0x37, 0x9a, 0x39, 0x9e, 0x1b, 0xb8, 0x63, 0x6a, 0xde, 0xc3,
	0xc9, 0xac, 0x2b, 0xb4, 0x89, 0xa0, 0xf0, 0x18, 0xd3, 0x11, 0x0f, 0xbd, 0x0c, 0xd1, 0x44, 0xe2,
	0x66, 0x8a, 0x2b, 0xea, 0x03, 0x28, 0xb3, 0x60, 0xec, 0xf8, 0x2c, 0xbc, 0x88, 0xcd, 0xfb, 0xfb,
	0xf9, 0x83, 0xb2, 0x5d, 0x62, 0xc1, 0xb8, 0x2d, 0xda, 0xe4, 0x7d, 0xb8, 0xc3, 0x3d, 0x1e, 0xd0,
	0x84, 0x46, 0xce, 0xa5, 0xeb, 0x4f, 0xa9, 0x73, 0x11, 0x98, 0xbb, 0x72, 0x81, 0xb4, 0xe1, 0x44,
	0xe0, 0x3f, 0x06, 0xc4, 0x80, 0xfc, 0x25, 0x0b, 0xcd, 0x07, 0x38, 0x8c, 0xf8, 0x24, 0xbb, 0x50,
	0x1a, 0x4d, 0xa3, 0x88, 0x86, 0xa3, 0x99, 0xf9, 0x26, 0xc2, 0x69, 0x9b, 0xdc, 0x83, 0x35, 0x1e,
	0x3a, 0x11, 0x77, 0x3d, 0xf3, 0x2d, 0xfc, 0xd5, 0x22, 0x0f, 0x6d, 0xee, 0xa2, 0x28, 0x54, 0x48,
	0x73, 0xdc, 0xc4, 0xdc, 0x97, 0xa2, 0x50, 0x48, 0x3d, 0x21, 0xfb, 0x50, 0x3d, 0xf7, 0x9c, 0xf9,
	0x8c, 0x1f, 0xe1, 0x8c, 0xe1, 0xdc, 0xb3, 0xf4, 0x9c, 0x09, 0x14, 0x46, 0x2c, 0x99, 0x99, 0x35,
	0xa9, 0x09, 0xf1, 0x2d, 0x76, 0x7f, 0xc4, 0x7d, 0x1e, 0x99, 0x8f, 0xe5, 0xee, 0x63, 0x43, 0xa0,
	0x21, 0x4f, 0x68, 0x6c, 0x3e, 0x91, 0x28, 0x36, 0xc8, 0xf7, 0xb0, 0x89, 0x1f, 0x8e, 0xcf, 0x47,
	0xae, 0xcf, 0x5e, 0x53, 0xcf, 0x7c, 0x7b, 0x3f, 0x7f, 0x50, 0x79, 0xf6, 0x56, 0xf6, 0x28, 0x74,
	0x04, 0xa5, 0xad, 0x19, 0x2d, 0x21, 0x04, 0x7b, 0x23, 0x5c, 0x00, 0x85, 0x80, 0x67, 0x7c, 0x9a,
	0x4c, 0x87, 0x14, 0x27, 0x6b, 0xbe, 0x23, 0x8f, 0x80, 0xc2, 0xc4, 0x6c, 0xc5, 0xef, 0x04, 0x2c,
	0x14, 0x01, 0xcb, 0x89, 0x13, 0x3a, 0x31, 0xdf, 0xc5, 0xff, 0x85, 0x80, 0x85, 0x47, 0xcc, 0xeb,
	0x27, 0x74, 0x82, 0x0c, 0xf7, 0xd5, 0x9c, 0x71, 0xa0, 0x18, 0xee, 0x2b, 0xcd, 0xd8, 0x81, 0xa2,
	0x50, 0x1b, 0x0f, 0xcd, 0xf7, 0x70, 0x00, 0xd5, 0x12, 0x1b, 0xf2, 0x9a, 0x4d, 0xcc, 0xf7, 0xe5,
	0x86, 0xbc, 0x66, 0x13, 0xf2, 0x21, 0x10, 0x7e, 0x15, 0xd2, 0x28, 0x3e, 0x67, 0x13, 0xc7, 0xe3,
	0x23, 0x07, 0x0f, 0xfa, 0x07, 0x48, 0x30, 0x52, 0x4b, 0x93, 0x8f, 0x30, 0xec, 0x09, 0x59, 0x86,
	0x63, 0x16, 0x52, 0x67, 0x34, 0xf3, 0x59, 0xe8, 0xd1, 0x28, 0x36, 0x3f, 0x94, 0x22, 0x92, 0x78,
	0x43, 0xc3, 0x62, 0xd3, 0x86, 0xdc, 0x9b, 0x39, 0x71, 0x32, 0xf3, 0xa9, 0xf9, 0x11, 0x92, 0xca,
	0x02, 0xe9, 0x0b, 0x40, 0x98, 0xbd, 0x48, 0x04, 0x66, 0x1c, 0xef, 0x50, 0x9a, 0x11, 0xc1, 0x81,
	0x3e, 0x83, 0x1d, 0x1a, 0x27, 0x2c, 0xc0, 0x4d, 0x8f, 0x44, 0xf4, 0x0d, 0xa5, 0xda, 0xcc, 0xa7,
	0xf8, 0xb3, 0xdb, 0xa9, 0xd5, 0x46, 0x23, 0x2a, 0x4e, 0x1c, 0x2b, 0xfa, 0x2a, 0xa1, 0x51, 0xe8,
	0xfa, 0x22, 0xbe, 0x7c, 0x2c, 0x23, 0x90, 0x86, 0x2c, 0x8f, 0x7c, 0x0c, 0xdb, 0x29, 0x21, 0xa6,
	0xbe, 0x4f, 0x23, 0x07, 0x83, 0xc5, 0x27, 0xc8, 0x24, 0xda, 0xd6, 0x47, 0x53, 0x47, 0x84, 0x8e,
	0x07, 0x50, 0xf6, 0x79, 0x1c, 0xcb, 0x69, 0x3e, 0x93, 0x8a, 0x15, 0x00, 0xce, 0xf2, 0x1d, 0xd8,
	0xbc, 0xa0, 0x33, 0xe7, 0x8c, 0x0f, 0x9d, 0x49, 0x44, 0x63, 0x1a, 0x26, 0xe6, 0xa7, 0xa8, 0xdc,
	0xf5, 0x0b, 0x3a, 0x3b, 0xe6, 0xc3, 0x9e, 0x04, 0xc9, 0x41, 0xba, 0x6c, 0x97, 0xdc, 0x9f, 0x06,
	0xd4, 0x19, 0x05, 0xe6, 0x17, 0x78, 0x64, 0x36, 0x24, 0x7e, 0x82, 0x70, 0x23, 0x20, 0xdf, 0xa5,
	0xa9, 0x8a, 0x33, 0x89, 0xd8, 0x88, 0xc6, 0xe6, 0xaf, 0xf0, 0xa2, 0xba, 0x9f, 0x15, 0x9a, 0x4a,
	0x40, 0x7a, 0x48, 0xb0, 0xd7, 0xdd, 0x6c, 0x93, 0xfc, 0x00, 0xc4, 0x63, 0x11, 0x1d, 0x25, 0x4e,
	0xec, 0xfa, 0x54, 0x7b, 0xf9, 0x12, 0xbd, 0x3c, 0xcc, 0x7a, 0x69, 0x22, 0xab, 0xef, 0xfa, 0x54,
	0x39, 0x32, 0xbc, 0x25, 0x84, 0x3c, 0x86, 0x75, 0xb1, 0x24, 0xa1, 0x47, 0x3d, 0xb9, 0x4e, 0x5f,
	0xe1, 0x02, 0x54, 0x35, 0x88, 0x2b, 0xf4, 0x08, 0xaa, 0x71, 0xc2, 0x23, 0x77, 0x4c, 0x25, 0xe7,
	0x6b, 0x29, 0x69, 0x85, 0x21, 0xe5, 0x23, 0x28, 0x9f, 0x4d, 0xa9, 0x2f, 0x17, 0xf1, 0xa1, 0xbe,
	0x44, 0x30, 0xf5, 0x3a, 0x9e, 0x52, 0x5f, 0x5e, 0x22, 0x25, 0x41, 0xc1, 0x65, 0xfd, 0x02, 0xaa,
	0x32, 0x40, 0x39, 0x3e, 0xbd, 0xa4, 0xbe, 0xb9, 0x83, 0x3d, 0xb6, 0x54, 0x0f, 0x19, 0xa4, 0x0e,
	0xdb, 0xc2, 0x64, 0x57, 0x24, 0x11, 0x1b, 0xe4, 0x1b, 0xd8, 0xb8, 0x3a, 0xa7, 0xd4, 0x77, 0x30,
	0xa1, 0x10, 0xea, 0x5f, 0xc7, 0x9e, 0x77, 0x55, 0xcf, 0x53, 0x61, 0x3c, 0xec, 0x29, 0xa3, 0xbd,
	0x8e, 0x64, 0xdd, 0x24, 0xdf, 0x40, 0x35, 0x89, 0xdc, 0x30, 0x0e, 0x58, 0x1c, 0x8b, 0xbe, 0x7b,
	0xd8, 0xd7, 0x54, 0x7d, 0x07, 0x19, 0x93, 0x9c, 0xef, 0x02, 0x9b, 0x7c, 0x05, 0xeb, 0x97, 0xf4,
	0x9c, 0x8d, 0x7c, 0x2a, 0x73, 0x39, 0xf3, 0x33, 0xec, 0xbe, 0xad, 0xba, 0x9f, 0x48, 0xdb, 0x21,
	0xa6, 0x6d, 0x76, 0x55, 0x51, 0xb1, 0x25, 0x52, 0x94, 0xa5, 0x88, 0x2a, 0x3d, 0x7c, 0x8e, 0x1e,
	0x76, 0x95, 0x87, 0x6e, 0x36, 0xb6, 0x2a, 0x3f, 0x64, 0x21, 0xe0, 0x4a, 0x6f, 0x07, 0xb0, 0xa9,
	0xbc, 0x37, 0xdc, 0x84, 0x8e, 0x79, 0x34, 0x33, 0x7f, 0x2d, 0x4f, 0xe8, 0x12, 0x2c, 0xa4, 0x3d,
	0x8c, 0xdc, 0x70, 0x74, 0x2e, 0xce, 0xca, 0x37, 0x52, 0xda, 0x12, 0xb8, 0xf9, 0xa4, 0xe0, 0xee,
	0xfd, 0xe6, 0xa6, 0x93, 0x82, 0xbb, 0xf6, 0x0c, 0xee, 0x2e, 0xf7, 0x98, 0x9c, 0xf3, 0x90, 0x9a,
	0xdf, 0x62, 0x97, 0xad, 0xc5, 0x2e, 0x3d, 0x61, 0x22, 0x5f, 0x41, 0x25, 0x93, 0x65, 0x99, 0xbf,
	0xbd, 0x96, 0xf7, 0x66, 0x13, 0x33, 0x3b, 0xcb, 0x25, 0x0f, 0x01, 0x58, 0xec, 0xc4, 0xd3, 0xa1,
	0xe3, 0xf3, 0xc4, 0xfc, 0x0e, 0x8f, 0x5d, 0x89, 0xc5, 0xfd, 0xe9, 0x50, 0x64, 0x30, 0x87, 0xb0,
	0xb5, 0x18, 0xd6, 0xc6, 0x91, 0xeb, 0x51, 0xb3, 0x8e, 0x87, 0xee, 0x4e, 0x36, 0xae, 0x3d, 0x17,
	0x06, 0x71, 0xf7, 0xa8, 0x93, 0x6c, 0x1e, 0x21, 0xa7, 0x28, 0x4f, 0x30, 0x19, 0xc2, 0xee, 0x82,
	0xa3, 0x69, 0x40, 0xc3, 0x24, 0xcd, 0x22, 0x1b, 0x38, 0xe1, 0x27, 0xd9, 0x09, 0x77, 0x33, 0xbe,
	0x91, 0xac, 0xf3, 0x49, 0x93, 0xdf, 0x62, 0xd9, 0xad, 0xc3, 0xd6, 0x0d, 0x77, 0x87, 0x08, 0xd6,
	0x17, 0x74, 0x86, 0x69, 0x58, 0xd9, 0x16, 0x9f, 0xe2, 0x76, 0x92, 0x41, 0x70, 0x45, 0xde, 0x4e,
	0xd8, 0xf8, 0x7a, 0xe5, 0xcb, 0xdc, 0xee, 0xb7, 0xb0, 0xbe, 0x10, 0x15, 0x04, 0x15, 0xd3, 0x26,
	0x95, 0xc5, 0xc9, 0x86, 0xf8, 0xcd, 0xe1, 0x74, 0xe6, 0x84, 0xfc, 0x0a, 0x5d, 0xe4, 0xed, 0xe2,
	0x70, 0x3a, 0xeb, 0xf0, 0xab, 0xdd, 0xbf, 0xe6, 0xc0, 0x58, 0x0e, 0x08, 0x22, 0xb3, 0x18, 0x4e,
	0x63, 0x16, 0x52, 0x11, 0xff, 0x78, 0xe2, 0xfa, 0xca, 0xd9, 0xba, 0x46, 0x07, 0x02, 0x14, 0x01,
	0x20, 0xa5, 0x9d, 0x51, 0xaa, 0x3c, 0x57, 0x34, 0x76, 0x4c, 0xa9, 0xf0, 0x34, 0x9a, 0xc6, 0x09,
	0x0f, 0x84, 0x8c, 0xd0, 0x53, 0x5e, 0x7a, 0xd2, 0x68, 0xea, 0x29, 0xa5, 0x09, 0x4f, 0x05, 0xe9,
	0x49, 0x63, 0xc7, 0x94, 0xee, 0x9e, 0x40, 0x25, 0x23, 0x09, 0x71, 0xb3, 0xcf, 0xdc, 0xc8, 0x53,
	0x8b, 0x84, 0xdf, 0x02, 0xf3, 0xdd, 0x50, 0x2f, 0x12, 0x7e, 0x8b, 0x9b, 0x81, 0x25, 0x34, 0x70,
	0xc2, 0x69, 0x30, 0xa4, 0x91, 0x1a, 0x1d, 0x04, 0xd4, 0x41, 0x64, 0xf7, 0x4f, 0x39, 0x30, 0x6f,
	0xdb, 0x3a, 0x91, 0xb5, 0xf0, 0x88, 0x8d, 0x45, 0x4d, 0xa1, 0x46, 0x4a, 0xdb, 0x62, 0xa1, 0xa5,
	0xb6, 0x56, 0x50, 0x37, 0xb2, 0x21, 0x7a, 0x68, 0xb1, 0xe0, 0x60, 0xab, 0x76, 0xda, 0x16, 0x57,
	0x1f, 0x8b, 0x9d, 0x09, 0x0d, 0x51, 0xf3, 0x05, 0x54, 0x6e, 0x99, 0xc5, 0x3d, 0x09, 0xd4, 0x4e,
	0x55, 0x89, 0xb1, 0x05, 0x9b, 0x98, 0xab, 0x77, 0xba, 0x4e, 0xfd, 0x45, 0x63, 0x60, 0x75, 0x45,
	0x95, 0x51, 0x85, 0x12, 0x82, 0xad, 0xce, 0x73, 0x23, 0x97, 0xe6, 0xfc, 0x8d, 0xae, 0xa8, 0x12,
	0x8c, 0x15, 0xb2, 0x0e, 0x65, 0x04, 0xac, 0x7a, 0xdd, 0x32, 0xf2, 0x29, 0xfb, 0xa8, 0xd3, 0x33,
	0x0a, 0x35, 0x06, 0xab, 0x32, 0x44, 0xdc, 0x81, 0x75, 0x55, 0x8b, 0xa4, 0xd5, 0x4b, 0x0a, 0xf5,
	0x5a, 0x1d, 0x51, 0x14, 0x18, 0x39, 0xb2, 0x01, 0x20, 0xa1, 0x7e, 0xb7, 0x2d, 0xca, 0x15, 0x02,
	0x1b, 0xb2, 0x7d, 0x6c, 0x75, 0xac, 0xfe, 0xf7, 0x58, 0xa4, 0xec, 0x00, 0x91, 0x58, 0xa7, 0xf5,
	0xbc, 0x3b, 0xb0, 0xea, 0x62, 0x96, 0x7d, 0xa3, 0x50, 0xfb, 0x00, 0x60, 0x5e, 0xef, 0x92, 0x3d,
	0xc8, 0x8b, 0x33, 0x9a, 0xc3, 0xc3, 0x52, 0xc9, 0x1c, 0x16, 0x5b, 0xe0, 0xb5, 0xdf, 0xc1, 0xe6,
	0x52, 0x85, 0x4b, 0xee, 0x42, 0x51, 0x54, 0xc5, 0x69, 0x11, 0xb2, 0xea, 0xf3, 0xc4, 0xf2, 0xc8,
	0xbb, 0x28, 0xea, 0x44, 0x17, 0x22, 0x77, 0xb2, 0xe7, 0x4e, 0x46, 0x44, 0x69, 0xaf, 0xfd, 0x3d,
	0x0f, 0x95, 0x4c, 0x85, 0x2a, 0x96, 0xdc, 0x1d, 0x61, 0x72, 0xae, 0x7d, 0x96, 0xed, 0xb2, 0x42,
	0x2c, 0x4f, 0xe4, 0xb4, 0x11, 0xfd, 0xe3, 0x94, 0xc6, 0x22, 0xdb, 0xc8, 0x1e, 0x90, 0x92, 0xbd,
	0x99, 0x1a, 0x8e, 0xf0, 0xa4, 0x08, 0x25, 0xc9, 0x8c, 0x35, 0x11, 0x09, 0x98, 0x56, 0x92, 0x82,
	0x44, 0xc5, 0xf9, 0x54, 0x4f, 0xb2, 0xb0, 0xf8, 0x6c, 0x90, 0x99, 0xcf, 0xc2, 0x64, 0x31, 0x0e,
	0x33, 0xcf, 0xf1, 0x59, 0xc0, 0x12, 0x55, 0xf2, 0x94, 0x86, 0xcc, 0x6b, 0x8b, 0x36, 0x79, 0x22,
	0x12, 0x82, 0x84, 0x3b, 0x73, 0x46, 0x11, 0x19, 0x55, 0x81, 0x1e, 0x69, 0xd6, 0x63, 0x58, 0xe7,
	0xd3, 0x64, 0xc8, 0xc4, 0x45, 0x7d, 0xc5, 0x92, 0x73, 0x2c, 0x74, 0xf2, 0x76, 0x55, 0x83, 0xa7,
	0x2c, 0x39, 0xaf, 0xfd, 0x25, 0x77, 0x4d, 0x00, 0x7a, 0xb7, 0xdf, 0x98, 0xef, 0xae, 0xdd, 0xfa,
	0xa1, 0xd5, 0x90, 0xc5, 0xab, 0x01, 0x55, 0x89, 0xa9, 0x9a, 0x72, 0x85, 0x98, 0xb0, 0x2d, 0x91,
	0xa3, 0x17, 0x2f, 0x9d, 0x4e, 0xf7, 0x54, 0x5b, 0xf2, 0xe4, 0x3e, 0xdc, 0x95, 0x16, 0x55, 0x91,
	0xa6, 0xae, 0x0b, 0x73, 0x21, 0xb5, 0xbb, 0x7d, 0x51, 0xa9, 0xde, 0x83, 0x2d, 0x4d, 0xad, 0xb7,
	0x9d, 0x46, 0xbd, 0xd3, 0x68, 0xb5, 0x5b, 0x4d, 0xa3, 0xf8, 0x43, 0xa1, 0xb4, 0x66, 0x94, 0x6a,
	0x43, 0x20, 0xd7, 0x5f, 0x2a, 0x6e, 0x53, 0xc4, 0xe7, 0x50, 0xc9, 0xbc, 0x3a, 0xa8, 0x37, 0x97,
	0xad, 0x1b, 0x96, 0xdc, 0xce, 0xf2, 0x96, 0xc6, 0xf8, 0x1f, 0xaa, 0xfb, 0x85, 0x63, 0xfc, 0x1e,
	0x4a, 0xfa, 0x3d, 0xe2, 0x36, 0xcf, 0x8b, 0xb2, 0x5c, 0x59, 0x96, 0xe5, 0x0e, 0x14, 0xdd, 0x40,
	0x7c, 0x2b, 0x95, 0xa9, 0x56, 0xed, 0x1f, 0x2b, 0xb0, 0xa6, 0x9e, 0x4f, 0xae, 0x95, 0xea, 0xf3,
	0x3e, 0x2b, 0xd9, 0x3e, 0x0b, 0x85, 0x57, 0x7e, 0xa9, 0xf0, 0x5a, 0x9c, 0x46, 0x61, 0x79, 0x1a,
	0xf3, 0xc9, 0xaf, 0x66, 0x27, 0x2f, 0xea, 0xce, 0xcc, 0x3b, 0x11, 0xf3, 0xb0, 0xe4, 0xce, 0xdb,
	0xeb, 0x19, 0xd4, 0xf2, 0xc8, 0x07, 0xfa, 0x38, 0x14, 0x75, 0x2e, 0xb6, 0xf0, 0xfe, 0xb3, 0x78,
	0x6e, 0xcf, 0x7f, 0x61, 0x88, 0xea, 0xd5, 0xad, 0x85, 0x10, 0x65, 0xb7, 0x06, 0x2f, 0xec, 0x0e,
	0x86, 0xa8, 0xbb, 0x70, 0x47, 0x85, 0xad, 0x56, 0xcb, 0x69, 0x7c, 0x5f, 0xb7, 0x9f, 0xb7, 0x9a,
	0x46, 0xa1, 0xf6, 0xe7, 0x55, 0x28, 0xca, 0x87, 0xa5, 0x9f, 0xd9, 0x1c, 0x16, 0x5e, 0x72, 0x36,
	0xa2, 0x99, 0xcd, 0x51, 0x88, 0x7c, 0xcc, 0xd0, 0xe6, 0x89, 0xab, 0x02, 0x41, 0xc9, 0xae, 0x28,
	0xac, 0xe7, 0x32, 0x4f, 0xd4, 0x56, 0x9a, 0x92, 0xa9, 0x5f, 0xe5, 0xa5, 0x66, 0x28, 0x4b, 0x23,
	0x2d, 0x63, 0xc5, 0xe5, 0xc7, 0x43, 0x51, 0xcc, 0xc8, 0xd7, 0x91, 0x55, 0x99, 0x47, 0xa7, 0x98,
	0x5c, 0xf2, 0x39, 0x05, 0xeb, 0xc7, 0xa2, 0x2c, 0xf5, 0x53, 0x14, 0x2b, 0xc8, 0x3d, 0x80, 0x33,
	0x4a, 0x1d, 0xa5, 0x03, 0xb9, 0x2b, 0xe5, 0x33, 0x4a, 0xeb, 0x52, 0x0a, 0x8f, 0xa0, 0x2a, 0xcc,
	0xa9, 0x1c, 0xe4, 0xa3, 0x48, 0xe5, 0x8c, 0xd2, 0x86, 0x56, 0xc4, 0x27, 0xb0, 0x8d, 0xd9, 0xed,
	0x84, 0x47, 0x89, 0x3b, 0xaf, 0x46, 0xf0, 0xa5, 0x24, 0x6f, 0x6f, 0x2d, 0xda, 0x30, 0x5b, 0x20,
	0x47, 0xb0, 0x77, 0x53, 0x97, 0xf9, 0x30, 0x15, 0x1c, 0xe6, 0xc1, 0x0d, 0x7d, 0xd3, 0x61, 0x1f,
	0x41, 0xd5, 0xa3, 0x22, 0xc9, 0x8b, 0xe4, 0x52, 0x55, 0xe5, 0xfd, 0x9f, 0x62, 0xf5, 0x84, 0xbc,
	0xaf, 0xe5, 0x04, 0x3a, 0xbf, 0xce, 0x3e, 0x12, 0x2e, 0xaa, 0xe9, 0x6f, 0xb9, 0x9f, 0x91, 0xd3,
	0x1e, 0xdc, 0x57, 0xc1, 0xad, 0x6e, 0x0d, 0xac, 0xce, 0x73, 0xe7, 0xb8, 0x6b, 0x3b, 0x56, 0xe7,
	0xa4, 0x6b, 0x35, 0x5a, 0x46, 0xee, 0xb6, 0x20, 0x95, 0x09, 0x81, 0xd2, 0xd0, 0xfd, 0xa9, 0xd7,
	0x6e, 0xc9, 0x17, 0xbb, 0x1b, 0x3d, 0xf6, 0xea, 0x2f, 0x7f, 0x6a, 0x75, 0x06, 0x46, 0x41, 0xdc,
	0xe7, 0xba, 0x63, 0xdb, 0x3a, 0x69, 0xd9, 0xad, 0xa6, 0xb1, 0x4a, 0xb6, 0xc1, 0x90, 0xa0, 0xd5,
	0x71, 0x06, 0x76, 0xbd, 0xd3, 0xb7, 0x06, 0x46, 0xb1, 0xf6, 0xaf, 0x1c, 0x90, 0xeb, 0x2f, 0x92,
	0xb7, 0x09, 0xf5, 0xff, 0xcc, 0x77, 0x0a, 0xd9, 0x7c, 0x47, 0x10, 0x54, 0xf2, 0x8f, 0x45, 0x9b,
	0x3c, 0xf4, 0x20, 0x21, 0xac, 0xd9, 0x76, 0xa0, 0x28, 0x5b, 0x4a, 0x88, 0xaa, 0xb5, 0xf4, 0x42,
	0x57, 0x5c, 0x7e, 0xa1, 0xdb, 0x85, 0x92, 0x7e, 0xf1, 0x53, 0x4f, 0x70, 0x69, 0xfb, 0xe8, 0xed,
	0x3f, 0x3c, 0x1e, 0xb3, 0xc4, 0x77, 0x87, 0x87, 0x23, 0x1e, 0x3c, 0xa5, 0x2a, 0x61, 0x7d, 0x2a,
	0x77, 0xf0, 0xe9, 0x98, 0x3f, 0xbd, 0x70, 0xcf, 0x2e, 0xdc, 0x61, 0x11, 0x9f, 0xe3, 0x3f, 0xfd,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x70, 0x92, 0x4f, 0x4b, 0xb5, 0x17, 0x00, 0x00,
}
