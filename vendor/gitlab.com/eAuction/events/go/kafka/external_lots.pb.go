// Code generated by protoc-gen-go. DO NOT EDIT.
// source: external_lots.proto

package kafka

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExternalLotEvent_Type int32

const (
	ExternalLotEvent_TYPE_UNKNOWN              ExternalLotEvent_Type = 0
	ExternalLotEvent_TYPE_CREATED              ExternalLotEvent_Type = 1
	ExternalLotEvent_TYPE_CLOSED               ExternalLotEvent_Type = 2
	ExternalLotEvent_TYPE_BID_UPDATED          ExternalLotEvent_Type = 3
	ExternalLotEvent_TYPE_CREATED_V2           ExternalLotEvent_Type = 4
	ExternalLotEvent_TYPE_LIVE_BIDDING_DETAILS ExternalLotEvent_Type = 5
)

var ExternalLotEvent_Type_name = map[int32]string{
	0: "TYPE_UNKNOWN",
	1: "TYPE_CREATED",
	2: "TYPE_CLOSED",
	3: "TYPE_BID_UPDATED",
	4: "TYPE_CREATED_V2",
	5: "TYPE_LIVE_BIDDING_DETAILS",
}

var ExternalLotEvent_Type_value = map[string]int32{
	"TYPE_UNKNOWN":              0,
	"TYPE_CREATED":              1,
	"TYPE_CLOSED":               2,
	"TYPE_BID_UPDATED":          3,
	"TYPE_CREATED_V2":           4,
	"TYPE_LIVE_BIDDING_DETAILS": 5,
}

func (x ExternalLotEvent_Type) String() string {
	return proto.EnumName(ExternalLotEvent_Type_name, int32(x))
}

func (ExternalLotEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{0, 0}
}

type BNP_SaleType int32

const (
	BNP_SALE_TYPE_UNKNOWN BNP_SaleType = 0
	BNP_SALE_TYPE_BUY_NOW BNP_SaleType = 1
	BNP_SALE_TYPE_OFFER   BNP_SaleType = 2
	BNP_SALE_TYPE_AUCTION BNP_SaleType = 3
)

var BNP_SaleType_name = map[int32]string{
	0: "SALE_TYPE_UNKNOWN",
	1: "SALE_TYPE_BUY_NOW",
	2: "SALE_TYPE_OFFER",
	3: "SALE_TYPE_AUCTION",
}

var BNP_SaleType_value = map[string]int32{
	"SALE_TYPE_UNKNOWN": 0,
	"SALE_TYPE_BUY_NOW": 1,
	"SALE_TYPE_OFFER":   2,
	"SALE_TYPE_AUCTION": 3,
}

func (x BNP_SaleType) String() string {
	return proto.EnumName(BNP_SaleType_name, int32(x))
}

func (BNP_SaleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{8, 0}
}

type ExternalLotEvent struct {
	Type ExternalLotEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=events.ExternalLotEvent_Type" json:"type,omitempty"`
	// DEPRECATED: use createdV2 instead
	Created              *ExternalLotCreated            `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Closed               *ExternalLotClosed             `protobuf:"bytes,3,opt,name=closed,proto3" json:"closed,omitempty"`
	BidUpdated           *ExternalLotBidUpdated         `protobuf:"bytes,4,opt,name=bid_updated,json=bidUpdated,proto3" json:"bid_updated,omitempty"`
	CreatedV2            *ExternalLotCreatedV2          `protobuf:"bytes,5,opt,name=createdV2,proto3" json:"createdV2,omitempty"`
	LiveBiddingDetails   *ExternalLotLiveBiddingDetails `protobuf:"bytes,6,opt,name=live_bidding_details,json=liveBiddingDetails,proto3" json:"live_bidding_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ExternalLotEvent) Reset()         { *m = ExternalLotEvent{} }
func (m *ExternalLotEvent) String() string { return proto.CompactTextString(m) }
func (*ExternalLotEvent) ProtoMessage()    {}
func (*ExternalLotEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{0}
}

func (m *ExternalLotEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLotEvent.Unmarshal(m, b)
}
func (m *ExternalLotEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLotEvent.Marshal(b, m, deterministic)
}
func (m *ExternalLotEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLotEvent.Merge(m, src)
}
func (m *ExternalLotEvent) XXX_Size() int {
	return xxx_messageInfo_ExternalLotEvent.Size(m)
}
func (m *ExternalLotEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLotEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLotEvent proto.InternalMessageInfo

func (m *ExternalLotEvent) GetType() ExternalLotEvent_Type {
	if m != nil {
		return m.Type
	}
	return ExternalLotEvent_TYPE_UNKNOWN
}

func (m *ExternalLotEvent) GetCreated() *ExternalLotCreated {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ExternalLotEvent) GetClosed() *ExternalLotClosed {
	if m != nil {
		return m.Closed
	}
	return nil
}

func (m *ExternalLotEvent) GetBidUpdated() *ExternalLotBidUpdated {
	if m != nil {
		return m.BidUpdated
	}
	return nil
}

func (m *ExternalLotEvent) GetCreatedV2() *ExternalLotCreatedV2 {
	if m != nil {
		return m.CreatedV2
	}
	return nil
}

func (m *ExternalLotEvent) GetLiveBiddingDetails() *ExternalLotLiveBiddingDetails {
	if m != nil {
		return m.LiveBiddingDetails
	}
	return nil
}

type ExternalLotCreated struct {
	Lot                  *ExternalLot `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ExternalLotCreated) Reset()         { *m = ExternalLotCreated{} }
func (m *ExternalLotCreated) String() string { return proto.CompactTextString(m) }
func (*ExternalLotCreated) ProtoMessage()    {}
func (*ExternalLotCreated) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{1}
}

func (m *ExternalLotCreated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLotCreated.Unmarshal(m, b)
}
func (m *ExternalLotCreated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLotCreated.Marshal(b, m, deterministic)
}
func (m *ExternalLotCreated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLotCreated.Merge(m, src)
}
func (m *ExternalLotCreated) XXX_Size() int {
	return xxx_messageInfo_ExternalLotCreated.Size(m)
}
func (m *ExternalLotCreated) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLotCreated.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLotCreated proto.InternalMessageInfo

func (m *ExternalLotCreated) GetLot() *ExternalLot {
	if m != nil {
		return m.Lot
	}
	return nil
}

type ExternalLotCreatedV2 struct {
	Lot                  *ExternalLotV2 `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ExternalLotCreatedV2) Reset()         { *m = ExternalLotCreatedV2{} }
func (m *ExternalLotCreatedV2) String() string { return proto.CompactTextString(m) }
func (*ExternalLotCreatedV2) ProtoMessage()    {}
func (*ExternalLotCreatedV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{2}
}

func (m *ExternalLotCreatedV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLotCreatedV2.Unmarshal(m, b)
}
func (m *ExternalLotCreatedV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLotCreatedV2.Marshal(b, m, deterministic)
}
func (m *ExternalLotCreatedV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLotCreatedV2.Merge(m, src)
}
func (m *ExternalLotCreatedV2) XXX_Size() int {
	return xxx_messageInfo_ExternalLotCreatedV2.Size(m)
}
func (m *ExternalLotCreatedV2) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLotCreatedV2.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLotCreatedV2 proto.InternalMessageInfo

func (m *ExternalLotCreatedV2) GetLot() *ExternalLotV2 {
	if m != nil {
		return m.Lot
	}
	return nil
}

type ExternalLotClosed struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsSold               bool     `protobuf:"varint,2,opt,name=is_sold,json=isSold,proto3" json:"is_sold,omitempty"`
	IsLiveBiddingEvent   bool     `protobuf:"varint,3,opt,name=is_live_bidding_event,json=isLiveBiddingEvent,proto3" json:"is_live_bidding_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalLotClosed) Reset()         { *m = ExternalLotClosed{} }
func (m *ExternalLotClosed) String() string { return proto.CompactTextString(m) }
func (*ExternalLotClosed) ProtoMessage()    {}
func (*ExternalLotClosed) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{3}
}

func (m *ExternalLotClosed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLotClosed.Unmarshal(m, b)
}
func (m *ExternalLotClosed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLotClosed.Marshal(b, m, deterministic)
}
func (m *ExternalLotClosed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLotClosed.Merge(m, src)
}
func (m *ExternalLotClosed) XXX_Size() int {
	return xxx_messageInfo_ExternalLotClosed.Size(m)
}
func (m *ExternalLotClosed) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLotClosed.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLotClosed proto.InternalMessageInfo

func (m *ExternalLotClosed) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExternalLotClosed) GetIsSold() bool {
	if m != nil {
		return m.IsSold
	}
	return false
}

func (m *ExternalLotClosed) GetIsLiveBiddingEvent() bool {
	if m != nil {
		return m.IsLiveBiddingEvent
	}
	return false
}

type ExternalLotBidUpdated struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               uint64   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	IsFinal              bool     `protobuf:"varint,3,opt,name=isFinal,proto3" json:"isFinal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalLotBidUpdated) Reset()         { *m = ExternalLotBidUpdated{} }
func (m *ExternalLotBidUpdated) String() string { return proto.CompactTextString(m) }
func (*ExternalLotBidUpdated) ProtoMessage()    {}
func (*ExternalLotBidUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{4}
}

func (m *ExternalLotBidUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLotBidUpdated.Unmarshal(m, b)
}
func (m *ExternalLotBidUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLotBidUpdated.Marshal(b, m, deterministic)
}
func (m *ExternalLotBidUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLotBidUpdated.Merge(m, src)
}
func (m *ExternalLotBidUpdated) XXX_Size() int {
	return xxx_messageInfo_ExternalLotBidUpdated.Size(m)
}
func (m *ExternalLotBidUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLotBidUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLotBidUpdated proto.InternalMessageInfo

func (m *ExternalLotBidUpdated) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExternalLotBidUpdated) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ExternalLotBidUpdated) GetIsFinal() bool {
	if m != nil {
		return m.IsFinal
	}
	return false
}

// DEPRECATED: use ExternalLotV2 instead
type CopartDetails struct {
	Highlights           string   `protobuf:"bytes,1,opt,name=highlights,proto3" json:"highlights,omitempty"`
	Notes                string   `protobuf:"bytes,2,opt,name=notes,proto3" json:"notes,omitempty"`
	SaleStatus           string   `protobuf:"bytes,3,opt,name=sale_status,json=saleStatus,proto3" json:"sale_status,omitempty"`
	YardNumber           uint32   `protobuf:"varint,4,opt,name=yard_number,json=yardNumber,proto3" json:"yard_number,omitempty"`
	SellerType           string   `protobuf:"bytes,5,opt,name=seller_type,json=sellerType,proto3" json:"seller_type,omitempty"`
	LotId                uint64   `protobuf:"varint,7,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	KeyFob               string   `protobuf:"bytes,8,opt,name=key_fob,json=keyFob,proto3" json:"key_fob,omitempty"`
	Lane                 string   `protobuf:"bytes,9,opt,name=lane,proto3" json:"lane,omitempty"`
	ItemNum              int64    `protobuf:"varint,10,opt,name=item_num,json=itemNum,proto3" json:"item_num,omitempty"`
	EstimatedRetailPrice int64    `protobuf:"varint,11,opt,name=estimated_retail_price,json=estimatedRetailPrice,proto3" json:"estimated_retail_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CopartDetails) Reset()         { *m = CopartDetails{} }
func (m *CopartDetails) String() string { return proto.CompactTextString(m) }
func (*CopartDetails) ProtoMessage()    {}
func (*CopartDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{5}
}

func (m *CopartDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopartDetails.Unmarshal(m, b)
}
func (m *CopartDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopartDetails.Marshal(b, m, deterministic)
}
func (m *CopartDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopartDetails.Merge(m, src)
}
func (m *CopartDetails) XXX_Size() int {
	return xxx_messageInfo_CopartDetails.Size(m)
}
func (m *CopartDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CopartDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CopartDetails proto.InternalMessageInfo

func (m *CopartDetails) GetHighlights() string {
	if m != nil {
		return m.Highlights
	}
	return ""
}

func (m *CopartDetails) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *CopartDetails) GetSaleStatus() string {
	if m != nil {
		return m.SaleStatus
	}
	return ""
}

func (m *CopartDetails) GetYardNumber() uint32 {
	if m != nil {
		return m.YardNumber
	}
	return 0
}

func (m *CopartDetails) GetSellerType() string {
	if m != nil {
		return m.SellerType
	}
	return ""
}

func (m *CopartDetails) GetLotId() uint64 {
	if m != nil {
		return m.LotId
	}
	return 0
}

func (m *CopartDetails) GetKeyFob() string {
	if m != nil {
		return m.KeyFob
	}
	return ""
}

func (m *CopartDetails) GetLane() string {
	if m != nil {
		return m.Lane
	}
	return ""
}

func (m *CopartDetails) GetItemNum() int64 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

func (m *CopartDetails) GetEstimatedRetailPrice() int64 {
	if m != nil {
		return m.EstimatedRetailPrice
	}
	return 0
}

// DEPRECATED: use ExternalLotV2 instead
type IAAIDetails struct {
	KeyFob               string   `protobuf:"bytes,1,opt,name=key_fob,json=keyFob,proto3" json:"key_fob,omitempty"`
	LossType             string   `protobuf:"bytes,2,opt,name=loss_type,json=lossType,proto3" json:"loss_type,omitempty"`
	RunAndDrive          string   `protobuf:"bytes,3,opt,name=run_and_drive,json=runAndDrive,proto3" json:"run_and_drive,omitempty"`
	Starts               string   `protobuf:"bytes,4,opt,name=starts,proto3" json:"starts,omitempty"`
	Branch               uint32   `protobuf:"varint,5,opt,name=branch,proto3" json:"branch,omitempty"`
	StockNumber          uint64   `protobuf:"varint,6,opt,name=stock_number,json=stockNumber,proto3" json:"stock_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IAAIDetails) Reset()         { *m = IAAIDetails{} }
func (m *IAAIDetails) String() string { return proto.CompactTextString(m) }
func (*IAAIDetails) ProtoMessage()    {}
func (*IAAIDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{6}
}

func (m *IAAIDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IAAIDetails.Unmarshal(m, b)
}
func (m *IAAIDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IAAIDetails.Marshal(b, m, deterministic)
}
func (m *IAAIDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IAAIDetails.Merge(m, src)
}
func (m *IAAIDetails) XXX_Size() int {
	return xxx_messageInfo_IAAIDetails.Size(m)
}
func (m *IAAIDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_IAAIDetails.DiscardUnknown(m)
}

var xxx_messageInfo_IAAIDetails proto.InternalMessageInfo

func (m *IAAIDetails) GetKeyFob() string {
	if m != nil {
		return m.KeyFob
	}
	return ""
}

func (m *IAAIDetails) GetLossType() string {
	if m != nil {
		return m.LossType
	}
	return ""
}

func (m *IAAIDetails) GetRunAndDrive() string {
	if m != nil {
		return m.RunAndDrive
	}
	return ""
}

func (m *IAAIDetails) GetStarts() string {
	if m != nil {
		return m.Starts
	}
	return ""
}

func (m *IAAIDetails) GetBranch() uint32 {
	if m != nil {
		return m.Branch
	}
	return 0
}

func (m *IAAIDetails) GetStockNumber() uint64 {
	if m != nil {
		return m.StockNumber
	}
	return 0
}

// DEPRECATED: use ExternalLotV2 instead
type AutoPapaDetails struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	OnRoad               bool     `protobuf:"varint,2,opt,name=on_road,json=onRoad,proto3" json:"on_road,omitempty"`
	SellerPhone          string   `protobuf:"bytes,3,opt,name=seller_phone,json=sellerPhone,proto3" json:"seller_phone,omitempty"`
	AdditionalInfo       string   `protobuf:"bytes,4,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutoPapaDetails) Reset()         { *m = AutoPapaDetails{} }
func (m *AutoPapaDetails) String() string { return proto.CompactTextString(m) }
func (*AutoPapaDetails) ProtoMessage()    {}
func (*AutoPapaDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{7}
}

func (m *AutoPapaDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoPapaDetails.Unmarshal(m, b)
}
func (m *AutoPapaDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoPapaDetails.Marshal(b, m, deterministic)
}
func (m *AutoPapaDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoPapaDetails.Merge(m, src)
}
func (m *AutoPapaDetails) XXX_Size() int {
	return xxx_messageInfo_AutoPapaDetails.Size(m)
}
func (m *AutoPapaDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoPapaDetails.DiscardUnknown(m)
}

var xxx_messageInfo_AutoPapaDetails proto.InternalMessageInfo

func (m *AutoPapaDetails) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *AutoPapaDetails) GetOnRoad() bool {
	if m != nil {
		return m.OnRoad
	}
	return false
}

func (m *AutoPapaDetails) GetSellerPhone() string {
	if m != nil {
		return m.SellerPhone
	}
	return ""
}

func (m *AutoPapaDetails) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

// DEPRECATED: use ExternalLotV2 instead
type BNP struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BNP) Reset()         { *m = BNP{} }
func (m *BNP) String() string { return proto.CompactTextString(m) }
func (*BNP) ProtoMessage()    {}
func (*BNP) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{8}
}

func (m *BNP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BNP.Unmarshal(m, b)
}
func (m *BNP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BNP.Marshal(b, m, deterministic)
}
func (m *BNP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BNP.Merge(m, src)
}
func (m *BNP) XXX_Size() int {
	return xxx_messageInfo_BNP.Size(m)
}
func (m *BNP) XXX_DiscardUnknown() {
	xxx_messageInfo_BNP.DiscardUnknown(m)
}

var xxx_messageInfo_BNP proto.InternalMessageInfo

type BNP_Details struct {
	ReportUrl            string       `protobuf:"bytes,1,opt,name=report_url,json=reportUrl,proto3" json:"report_url,omitempty"`
	SaleType             BNP_SaleType `protobuf:"varint,2,opt,name=sale_type,json=saleType,proto3,enum=events.BNP_SaleType" json:"sale_type,omitempty"`
	ExtendedName         string       `protobuf:"bytes,3,opt,name=extended_name,json=extendedName,proto3" json:"extended_name,omitempty"`
	StorageName          string       `protobuf:"bytes,4,opt,name=storage_name,json=storageName,proto3" json:"storage_name,omitempty"`
	KeyFob               string       `protobuf:"bytes,5,opt,name=key_fob,json=keyFob,proto3" json:"key_fob,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BNP_Details) Reset()         { *m = BNP_Details{} }
func (m *BNP_Details) String() string { return proto.CompactTextString(m) }
func (*BNP_Details) ProtoMessage()    {}
func (*BNP_Details) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{8, 0}
}

func (m *BNP_Details) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BNP_Details.Unmarshal(m, b)
}
func (m *BNP_Details) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BNP_Details.Marshal(b, m, deterministic)
}
func (m *BNP_Details) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BNP_Details.Merge(m, src)
}
func (m *BNP_Details) XXX_Size() int {
	return xxx_messageInfo_BNP_Details.Size(m)
}
func (m *BNP_Details) XXX_DiscardUnknown() {
	xxx_messageInfo_BNP_Details.DiscardUnknown(m)
}

var xxx_messageInfo_BNP_Details proto.InternalMessageInfo

func (m *BNP_Details) GetReportUrl() string {
	if m != nil {
		return m.ReportUrl
	}
	return ""
}

func (m *BNP_Details) GetSaleType() BNP_SaleType {
	if m != nil {
		return m.SaleType
	}
	return BNP_SALE_TYPE_UNKNOWN
}

func (m *BNP_Details) GetExtendedName() string {
	if m != nil {
		return m.ExtendedName
	}
	return ""
}

func (m *BNP_Details) GetStorageName() string {
	if m != nil {
		return m.StorageName
	}
	return ""
}

func (m *BNP_Details) GetKeyFob() string {
	if m != nil {
		return m.KeyFob
	}
	return ""
}

// defines vehicle properties
type VehicleV2 struct {
	// Vehicle identification number (WBAXA5C59ED690702)
	Vin string `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	// Note: required. if normalization of maker or model fails, lot will be ignored.
	// List of supported values is available here https://api.shelf.network/horizon/enums/makers
	// List of blacklisted maker models is available here https://gitlab.com/eAuction/enums/blob/master/csv/maker_models_black_list.csv
	// Manufacturer of the vehicle (BMW).
	Maker string `protobuf:"bytes,2,opt,name=maker,proto3" json:"maker,omitempty"`
	// Required. Model of the vehicle (M5)
	Model string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	// defines class of the vehicle. This field is overwritten during normalization, so should be empty
	Class string `protobuf:"bytes,23,opt,name=class,proto3" json:"class,omitempty"`
	// Required. Year when vehicle has been produced (2005)
	ManufactureYear uint32 `protobuf:"varint,4,opt,name=manufacture_year,json=manufactureYear,proto3" json:"manufacture_year,omitempty"`
	// Transmission (gearbox) type (Manual). List of supported values available here https://api.shelf.network/horizon/enums/transmissions
	// Note: `SEQUENTIAL` is deprecated. If normalization of value fails, lot with transmission `Unknown` is created.
	Transmission string `protobuf:"bytes,5,opt,name=transmission,proto3" json:"transmission,omitempty"`
	// Body style of the vehicle (Coupe). List of supported values available here https://gitlab.com/eAuction/enums/blob/master/csv/body_styles.csv
	// Note: If normalization of value fails, lot with body_style `Unknown` is created.
	BodyStyle string `protobuf:"bytes,6,opt,name=body_style,json=bodyStyle,proto3" json:"body_style,omitempty"`
	// Drive type of the vehicle. List of supported values: https://gitlab.com/eAuction/enums/blob/master/csv/drive_types.csv
	// Note: If normalization of value fails, lot with drive_type `Unknown` is created.
	DriveType string `protobuf:"bytes,7,opt,name=drive_type,json=driveType,proto3" json:"drive_type,omitempty"`
	// Defines color of the vehicle (Blue). TODO: should be normalized
	Color string `protobuf:"bytes,8,opt,name=color,proto3" json:"color,omitempty"`
	// "ownership_doc_type" (`NJ - CERTIFICATE OF TITLE`, `PA - CERTIFICATE OF SALVAGE`)
	// denotes the ownership documents that will be transferred to the Member. Each state issues
	// a wide variety of different ownership documents. Each type of document carries with it certain ownership
	// rights and certain restrictions or burdens. Members should research the viability of each type of title
	// document for their intended use of the lot prior to bidding. Each state maintains information on its website
	// for this purpose. Not all Members are able to bid on every title type; some require specific business licenses.
	// TODO: should be normalized
	OwnershipDocType string `protobuf:"bytes,9,opt,name=ownership_doc_type,json=ownershipDocType,proto3" json:"ownership_doc_type,omitempty"`
	// Lists of images of the vehicle. Should be link to publicly available jpg or png image.
	// img_links - list of images shown in the catalogue
	ImgLinks []string `protobuf:"bytes,10,rep,name=img_links,json=imgLinks,proto3" json:"img_links,omitempty"`
	// hd_img_links - list of images shown on lot details page. If array is empty, img_links are used.
	HdImgLinks []string `protobuf:"bytes,11,rep,name=hd_img_links,json=hdImgLinks,proto3" json:"hd_img_links,omitempty"`
	// is_image_download_optional if true, sanitizer will not try to download photos to the Shelf's storage
	IsImageDownloadOptional bool `protobuf:"varint,24,opt,name=is_image_download_optional,json=isImageDownloadOptional,proto3" json:"is_image_download_optional,omitempty"`
	// registered should be true, if vehicle is registered (customs fees paid) in the vehicle's location.
	Registered bool `protobuf:"varint,12,opt,name=registered,proto3" json:"registered,omitempty"`
	// vehicle_category: `pv` for private vehicles; `cv` for commercial vehicles. TODO: should be normalized
	VehicleCategory string `protobuf:"bytes,13,opt,name=vehicle_category,json=vehicleCategory,proto3" json:"vehicle_category,omitempty"`
	// Details of the odometer
	Odometer *VehicleV2_Odometer `protobuf:"bytes,14,opt,name=odometer,proto3" json:"odometer,omitempty"`
	// Defines location details of the vehicle
	Location  *VehicleV2_Location  `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	Engine    *VehicleV2_Engine    `protobuf:"bytes,16,opt,name=engine,proto3" json:"engine,omitempty"`
	Condition *VehicleV2_Condition `protobuf:"bytes,18,opt,name=condition,proto3" json:"condition,omitempty"`
	// Key is ISO 639-1 codes of the language, value if description of the lot.
	NotesLocalized map[string]string `protobuf:"bytes,19,rep,name=notes_localized,json=notesLocalized,proto3" json:"notes_localized,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// DEPRECATED: use key_fob instead
	// true if key fob is not lost.
	IsKeyFobPresent bool   `protobuf:"varint,20,opt,name=is_key_fob_present,json=isKeyFobPresent,proto3" json:"is_key_fob_present,omitempty"`
	KeyFob          string `protobuf:"bytes,25,opt,name=key_fob,json=keyFob,proto3" json:"key_fob,omitempty"`
	// defines lot name that contains important details of the lot (`2015 Audi A6 Avant 2.0 TDI Ultra 110kW S tronic 5d exs2i`)
	ExtendedName string `protobuf:"bytes,21,opt,name=extended_name,json=extendedName,proto3" json:"extended_name,omitempty"`
	// defines wheel position (left, right). Subject to normalization
	WheelPosition        string   `protobuf:"bytes,22,opt,name=wheel_position,json=wheelPosition,proto3" json:"wheel_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleV2) Reset()         { *m = VehicleV2{} }
func (m *VehicleV2) String() string { return proto.CompactTextString(m) }
func (*VehicleV2) ProtoMessage()    {}
func (*VehicleV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{9}
}

func (m *VehicleV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleV2.Unmarshal(m, b)
}
func (m *VehicleV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleV2.Marshal(b, m, deterministic)
}
func (m *VehicleV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleV2.Merge(m, src)
}
func (m *VehicleV2) XXX_Size() int {
	return xxx_messageInfo_VehicleV2.Size(m)
}
func (m *VehicleV2) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleV2.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleV2 proto.InternalMessageInfo

func (m *VehicleV2) GetVin() string {
	if m != nil {
		return m.Vin
	}
	return ""
}

func (m *VehicleV2) GetMaker() string {
	if m != nil {
		return m.Maker
	}
	return ""
}

func (m *VehicleV2) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *VehicleV2) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *VehicleV2) GetManufactureYear() uint32 {
	if m != nil {
		return m.ManufactureYear
	}
	return 0
}

func (m *VehicleV2) GetTransmission() string {
	if m != nil {
		return m.Transmission
	}
	return ""
}

func (m *VehicleV2) GetBodyStyle() string {
	if m != nil {
		return m.BodyStyle
	}
	return ""
}

func (m *VehicleV2) GetDriveType() string {
	if m != nil {
		return m.DriveType
	}
	return ""
}

func (m *VehicleV2) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *VehicleV2) GetOwnershipDocType() string {
	if m != nil {
		return m.OwnershipDocType
	}
	return ""
}

func (m *VehicleV2) GetImgLinks() []string {
	if m != nil {
		return m.ImgLinks
	}
	return nil
}

func (m *VehicleV2) GetHdImgLinks() []string {
	if m != nil {
		return m.HdImgLinks
	}
	return nil
}

func (m *VehicleV2) GetIsImageDownloadOptional() bool {
	if m != nil {
		return m.IsImageDownloadOptional
	}
	return false
}

func (m *VehicleV2) GetRegistered() bool {
	if m != nil {
		return m.Registered
	}
	return false
}

func (m *VehicleV2) GetVehicleCategory() string {
	if m != nil {
		return m.VehicleCategory
	}
	return ""
}

func (m *VehicleV2) GetOdometer() *VehicleV2_Odometer {
	if m != nil {
		return m.Odometer
	}
	return nil
}

func (m *VehicleV2) GetLocation() *VehicleV2_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *VehicleV2) GetEngine() *VehicleV2_Engine {
	if m != nil {
		return m.Engine
	}
	return nil
}

func (m *VehicleV2) GetCondition() *VehicleV2_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *VehicleV2) GetNotesLocalized() map[string]string {
	if m != nil {
		return m.NotesLocalized
	}
	return nil
}

func (m *VehicleV2) GetIsKeyFobPresent() bool {
	if m != nil {
		return m.IsKeyFobPresent
	}
	return false
}

func (m *VehicleV2) GetKeyFob() string {
	if m != nil {
		return m.KeyFob
	}
	return ""
}

func (m *VehicleV2) GetExtendedName() string {
	if m != nil {
		return m.ExtendedName
	}
	return ""
}

func (m *VehicleV2) GetWheelPosition() string {
	if m != nil {
		return m.WheelPosition
	}
	return ""
}

type VehicleV2_Odometer struct {
	// Status of the odometer (`Actual`, `Altered`). TODO: should be normalized
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Value of the odometer in kilometers
	ValueKm uint32 `protobuf:"varint,2,opt,name=value_km,json=valueKm,proto3" json:"value_km,omitempty"`
	// defines units in which odometer measures distance (`kms` or `miles`)
	Units                string   `protobuf:"bytes,3,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleV2_Odometer) Reset()         { *m = VehicleV2_Odometer{} }
func (m *VehicleV2_Odometer) String() string { return proto.CompactTextString(m) }
func (*VehicleV2_Odometer) ProtoMessage()    {}
func (*VehicleV2_Odometer) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{9, 0}
}

func (m *VehicleV2_Odometer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleV2_Odometer.Unmarshal(m, b)
}
func (m *VehicleV2_Odometer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleV2_Odometer.Marshal(b, m, deterministic)
}
func (m *VehicleV2_Odometer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleV2_Odometer.Merge(m, src)
}
func (m *VehicleV2_Odometer) XXX_Size() int {
	return xxx_messageInfo_VehicleV2_Odometer.Size(m)
}
func (m *VehicleV2_Odometer) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleV2_Odometer.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleV2_Odometer proto.InternalMessageInfo

func (m *VehicleV2_Odometer) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *VehicleV2_Odometer) GetValueKm() uint32 {
	if m != nil {
		return m.ValueKm
	}
	return 0
}

func (m *VehicleV2_Odometer) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

type VehicleV2_Location struct {
	// Required. Defines country where vehicle is located. ISO 3166-1 alpha-3.
	Country string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	// Defines city where vehicle is located. Not subject to normalization
	City string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	// Defines state where vehicle is located. Not subject to normalization
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	// Zip code of the vehicle's location. Not subject to normalization
	Zip string `protobuf:"bytes,4,opt,name=zip,proto3" json:"zip,omitempty"`
	// Defines name of storage unit. Not subject to normalization
	StorageName string `protobuf:"bytes,5,opt,name=storage_name,json=storageName,proto3" json:"storage_name,omitempty"`
	// true if vehicle is still traveling to the location
	OnRoad               bool     `protobuf:"varint,6,opt,name=on_road,json=onRoad,proto3" json:"on_road,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleV2_Location) Reset()         { *m = VehicleV2_Location{} }
func (m *VehicleV2_Location) String() string { return proto.CompactTextString(m) }
func (*VehicleV2_Location) ProtoMessage()    {}
func (*VehicleV2_Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{9, 1}
}

func (m *VehicleV2_Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleV2_Location.Unmarshal(m, b)
}
func (m *VehicleV2_Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleV2_Location.Marshal(b, m, deterministic)
}
func (m *VehicleV2_Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleV2_Location.Merge(m, src)
}
func (m *VehicleV2_Location) XXX_Size() int {
	return xxx_messageInfo_VehicleV2_Location.Size(m)
}
func (m *VehicleV2_Location) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleV2_Location.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleV2_Location proto.InternalMessageInfo

func (m *VehicleV2_Location) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *VehicleV2_Location) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *VehicleV2_Location) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *VehicleV2_Location) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *VehicleV2_Location) GetStorageName() string {
	if m != nil {
		return m.StorageName
	}
	return ""
}

func (m *VehicleV2_Location) GetOnRoad() bool {
	if m != nil {
		return m.OnRoad
	}
	return false
}

type VehicleV2_Engine struct {
	// defines engine volume in cubic centimetres
	VolumeCm uint32 `protobuf:"varint,1,opt,name=volume_cm,json=volumeCm,proto3" json:"volume_cm,omitempty"`
	// defines number of cylinders
	Cylinders uint32 `protobuf:"varint,2,opt,name=cylinders,proto3" json:"cylinders,omitempty"`
	// Fuel type of the vehicle (`Gas`). List of supported values available here https://api.shelf.network/horizon/enums/fuels
	// Note: If normalization of value fails, lot with fuel type `Unknown` is created.
	Fuel                 string   `protobuf:"bytes,3,opt,name=fuel,proto3" json:"fuel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleV2_Engine) Reset()         { *m = VehicleV2_Engine{} }
func (m *VehicleV2_Engine) String() string { return proto.CompactTextString(m) }
func (*VehicleV2_Engine) ProtoMessage()    {}
func (*VehicleV2_Engine) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{9, 2}
}

func (m *VehicleV2_Engine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleV2_Engine.Unmarshal(m, b)
}
func (m *VehicleV2_Engine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleV2_Engine.Marshal(b, m, deterministic)
}
func (m *VehicleV2_Engine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleV2_Engine.Merge(m, src)
}
func (m *VehicleV2_Engine) XXX_Size() int {
	return xxx_messageInfo_VehicleV2_Engine.Size(m)
}
func (m *VehicleV2_Engine) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleV2_Engine.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleV2_Engine proto.InternalMessageInfo

func (m *VehicleV2_Engine) GetVolumeCm() uint32 {
	if m != nil {
		return m.VolumeCm
	}
	return 0
}

func (m *VehicleV2_Engine) GetCylinders() uint32 {
	if m != nil {
		return m.Cylinders
	}
	return 0
}

func (m *VehicleV2_Engine) GetFuel() string {
	if m != nil {
		return m.Fuel
	}
	return ""
}

type VehicleV2_Condition struct {
	// highlights of the vehicle state. Value is normalized. Values:
	// `runs and drives` - vehicle started, could be put into gear and was capable of moving forward under its own power
	// `engine start program` - vehicle started and ran at idle
	// `enhanced` - vehicle failed to start or have not been tested
	// `unknown` - there is no information about overall vehicle condition
	Highlights string `protobuf:"bytes,1,opt,name=highlights,proto3" json:"highlights,omitempty"`
	// (`MINOR DENT/SCRATCHES`). Supported values https://gitlab.com/eAuction/enums/blob/master/csv/damage_types.csv
	// specifies primary damage of the vehicle
	PrimaryDamage string `protobuf:"bytes,2,opt,name=primary_damage,json=primaryDamage,proto3" json:"primary_damage,omitempty"`
	// specifies secondary_damage of the vehicle
	SecondaryDamage string `protobuf:"bytes,3,opt,name=secondary_damage,json=secondaryDamage,proto3" json:"secondary_damage,omitempty"`
	// defines url to detailed damages report
	ReportUrl string `protobuf:"bytes,4,opt,name=report_url,json=reportUrl,proto3" json:"report_url,omitempty"`
	// Overall evaluation of vehicles highlights and primary damage. Value is overwritten during normalization, so should be empty
	DamageLevel          int32    `protobuf:"varint,5,opt,name=damage_level,json=damageLevel,proto3" json:"damage_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleV2_Condition) Reset()         { *m = VehicleV2_Condition{} }
func (m *VehicleV2_Condition) String() string { return proto.CompactTextString(m) }
func (*VehicleV2_Condition) ProtoMessage()    {}
func (*VehicleV2_Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{9, 3}
}

func (m *VehicleV2_Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleV2_Condition.Unmarshal(m, b)
}
func (m *VehicleV2_Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleV2_Condition.Marshal(b, m, deterministic)
}
func (m *VehicleV2_Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleV2_Condition.Merge(m, src)
}
func (m *VehicleV2_Condition) XXX_Size() int {
	return xxx_messageInfo_VehicleV2_Condition.Size(m)
}
func (m *VehicleV2_Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleV2_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleV2_Condition proto.InternalMessageInfo

func (m *VehicleV2_Condition) GetHighlights() string {
	if m != nil {
		return m.Highlights
	}
	return ""
}

func (m *VehicleV2_Condition) GetPrimaryDamage() string {
	if m != nil {
		return m.PrimaryDamage
	}
	return ""
}

func (m *VehicleV2_Condition) GetSecondaryDamage() string {
	if m != nil {
		return m.SecondaryDamage
	}
	return ""
}

func (m *VehicleV2_Condition) GetReportUrl() string {
	if m != nil {
		return m.ReportUrl
	}
	return ""
}

func (m *VehicleV2_Condition) GetDamageLevel() int32 {
	if m != nil {
		return m.DamageLevel
	}
	return 0
}

// defines properties of an auction
type Auction struct {
	// defines start price of the auction in cents in currency of the lot.
	StartPrice int64 `protobuf:"varint,1,opt,name=start_price,json=startPrice,proto3" json:"start_price,omitempty"`
	// defines min bid step in cents in currency of the lot.
	MinBidStep int64 `protobuf:"varint,2,opt,name=min_bid_step,json=minBidStep,proto3" json:"min_bid_step,omitempty"`
	// if true - approval of the highest bid is required by the lot seller
	OnApproval bool `protobuf:"varint,3,opt,name=on_approval,json=onApproval,proto3" json:"on_approval,omitempty"`
	// unix timestamp (before start_time it's not allowed to place a bid). If `bidding_start_time > end_time` lot will be ignored
	BiddingStartTime     int64    `protobuf:"varint,4,opt,name=bidding_start_time,json=biddingStartTime,proto3" json:"bidding_start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Auction) Reset()         { *m = Auction{} }
func (m *Auction) String() string { return proto.CompactTextString(m) }
func (*Auction) ProtoMessage()    {}
func (*Auction) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{10}
}

func (m *Auction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auction.Unmarshal(m, b)
}
func (m *Auction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auction.Marshal(b, m, deterministic)
}
func (m *Auction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auction.Merge(m, src)
}
func (m *Auction) XXX_Size() int {
	return xxx_messageInfo_Auction.Size(m)
}
func (m *Auction) XXX_DiscardUnknown() {
	xxx_messageInfo_Auction.DiscardUnknown(m)
}

var xxx_messageInfo_Auction proto.InternalMessageInfo

func (m *Auction) GetStartPrice() int64 {
	if m != nil {
		return m.StartPrice
	}
	return 0
}

func (m *Auction) GetMinBidStep() int64 {
	if m != nil {
		return m.MinBidStep
	}
	return 0
}

func (m *Auction) GetOnApproval() bool {
	if m != nil {
		return m.OnApproval
	}
	return false
}

func (m *Auction) GetBiddingStartTime() int64 {
	if m != nil {
		return m.BiddingStartTime
	}
	return 0
}

// defines properties of buy now
type BuyNow struct {
	// in cents in currency of the lot (if there is no special offer for business - should be same as customer
	BusinessTotal int64 `protobuf:"varint,1,opt,name=business_total,json=businessTotal,proto3" json:"business_total,omitempty"`
	// in cents in currency of the lot. Must be included into business_total. Must not be negative
	BusinessFee int64 `protobuf:"varint,2,opt,name=business_fee,json=businessFee,proto3" json:"business_fee,omitempty"`
	// in cents in currency of the lot. if negative - lot won't be show on b2c platforms. Zero value is not allowed
	CustomerTotal int64 `protobuf:"varint,3,opt,name=customer_total,json=customerTotal,proto3" json:"customer_total,omitempty"`
	// in cents in currency of the lot. Must be included into customer_total. Must not be negative
	CustomerFee int64 `protobuf:"varint,4,opt,name=customer_fee,json=customerFee,proto3" json:"customer_fee,omitempty"`
	// if true it's not allowed to request purchase through the platform. Deal is performed outside of the platform.
	IsAdvertisement      bool     `protobuf:"varint,5,opt,name=is_advertisement,json=isAdvertisement,proto3" json:"is_advertisement,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuyNow) Reset()         { *m = BuyNow{} }
func (m *BuyNow) String() string { return proto.CompactTextString(m) }
func (*BuyNow) ProtoMessage()    {}
func (*BuyNow) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{11}
}

func (m *BuyNow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyNow.Unmarshal(m, b)
}
func (m *BuyNow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyNow.Marshal(b, m, deterministic)
}
func (m *BuyNow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyNow.Merge(m, src)
}
func (m *BuyNow) XXX_Size() int {
	return xxx_messageInfo_BuyNow.Size(m)
}
func (m *BuyNow) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyNow.DiscardUnknown(m)
}

var xxx_messageInfo_BuyNow proto.InternalMessageInfo

func (m *BuyNow) GetBusinessTotal() int64 {
	if m != nil {
		return m.BusinessTotal
	}
	return 0
}

func (m *BuyNow) GetBusinessFee() int64 {
	if m != nil {
		return m.BusinessFee
	}
	return 0
}

func (m *BuyNow) GetCustomerTotal() int64 {
	if m != nil {
		return m.CustomerTotal
	}
	return 0
}

func (m *BuyNow) GetCustomerFee() int64 {
	if m != nil {
		return m.CustomerFee
	}
	return 0
}

func (m *BuyNow) GetIsAdvertisement() bool {
	if m != nil {
		return m.IsAdvertisement
	}
	return false
}

// provides details about seller
type Seller struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string   `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Seller) Reset()         { *m = Seller{} }
func (m *Seller) String() string { return proto.CompactTextString(m) }
func (*Seller) ProtoMessage()    {}
func (*Seller) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{12}
}

func (m *Seller) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Seller.Unmarshal(m, b)
}
func (m *Seller) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Seller.Marshal(b, m, deterministic)
}
func (m *Seller) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Seller.Merge(m, src)
}
func (m *Seller) XXX_Size() int {
	return xxx_messageInfo_Seller.Size(m)
}
func (m *Seller) XXX_DiscardUnknown() {
	xxx_messageInfo_Seller.DiscardUnknown(m)
}

var xxx_messageInfo_Seller proto.InternalMessageInfo

func (m *Seller) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Seller) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type ExternalLotV2 struct {
	// external unique identifier of the lot (iaai-140-1577723400-26519413 - `iaai-{branch_id}-{sale_end_time}-{lot_id}`).
	// When receiving two ExternalLot events with same ID, second one is ignored.
	// Update is not supported in current version. To update lot details close old one and create new one.
	// Same ID should be used for bid updated and lots closing
	// required
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// required. defines details of the vehicle to be sold. Required.
	Vehicle *VehicleV2 `protobuf:"bytes,2,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
	// defines unix timestamp after which lot should be removed from the catalogue. If end time is in the past - lot will be skipped
	EndTime int64 `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// required defines currency of prices for the lot (`USD`, `EUR`, etc.) https://en.wikipedia.org/wiki/ISO_4217
	Currency string `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	// if neither auction nor buy now are set, lot will be ignored
	Auction *Auction `protobuf:"bytes,23,opt,name=auction,proto3" json:"auction,omitempty"`
	// WARN: due to migration from the legacy system, if auction is specified, only customer total price will be used
	// and is_advertisement is not allowed
	BuyNow *BuyNow `protobuf:"bytes,24,opt,name=buy_now,json=buyNow,proto3" json:"buy_now,omitempty"`
	// defines estimated retail price for this vehicle without damage
	EstimatedRetailPrice int64   `protobuf:"varint,26,opt,name=estimated_retail_price,json=estimatedRetailPrice,proto3" json:"estimated_retail_price,omitempty"`
	Seller               *Seller `protobuf:"bytes,27,opt,name=seller,proto3" json:"seller,omitempty"`
	ExternalBranch       string  `protobuf:"bytes,33,opt,name=external_branch,json=externalBranch,proto3" json:"external_branch,omitempty"`
	ExternalLotId        string  `protobuf:"bytes,34,opt,name=external_lot_id,json=externalLotId,proto3" json:"external_lot_id,omitempty"`
	// required. defines ID of the external platform. Lots from unknown platform are skipped. (`GBQPQYPOOYWC3ESZCXUYENVMEBUXN2G745R6RDONEHMOV3ZANPT34ONW`)
	PlatformId string `protobuf:"bytes,35,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	// optional
	OrganizerId          string   `protobuf:"bytes,36,opt,name=organizer_id,json=organizerId,proto3" json:"organizer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalLotV2) Reset()         { *m = ExternalLotV2{} }
func (m *ExternalLotV2) String() string { return proto.CompactTextString(m) }
func (*ExternalLotV2) ProtoMessage()    {}
func (*ExternalLotV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{13}
}

func (m *ExternalLotV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLotV2.Unmarshal(m, b)
}
func (m *ExternalLotV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLotV2.Marshal(b, m, deterministic)
}
func (m *ExternalLotV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLotV2.Merge(m, src)
}
func (m *ExternalLotV2) XXX_Size() int {
	return xxx_messageInfo_ExternalLotV2.Size(m)
}
func (m *ExternalLotV2) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLotV2.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLotV2 proto.InternalMessageInfo

func (m *ExternalLotV2) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExternalLotV2) GetVehicle() *VehicleV2 {
	if m != nil {
		return m.Vehicle
	}
	return nil
}

func (m *ExternalLotV2) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ExternalLotV2) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *ExternalLotV2) GetAuction() *Auction {
	if m != nil {
		return m.Auction
	}
	return nil
}

func (m *ExternalLotV2) GetBuyNow() *BuyNow {
	if m != nil {
		return m.BuyNow
	}
	return nil
}

func (m *ExternalLotV2) GetEstimatedRetailPrice() int64 {
	if m != nil {
		return m.EstimatedRetailPrice
	}
	return 0
}

func (m *ExternalLotV2) GetSeller() *Seller {
	if m != nil {
		return m.Seller
	}
	return nil
}

func (m *ExternalLotV2) GetExternalBranch() string {
	if m != nil {
		return m.ExternalBranch
	}
	return ""
}

func (m *ExternalLotV2) GetExternalLotId() string {
	if m != nil {
		return m.ExternalLotId
	}
	return ""
}

func (m *ExternalLotV2) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *ExternalLotV2) GetOrganizerId() string {
	if m != nil {
		return m.OrganizerId
	}
	return ""
}

// DEPRECATED: use ExternalLotV2 instead
type ExternalLot struct {
	Id               string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Vin              string                `protobuf:"bytes,2,opt,name=vin,proto3" json:"vin,omitempty"`
	Maker            string                `protobuf:"bytes,3,opt,name=maker,proto3" json:"maker,omitempty"`
	Model            string                `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	ManufactureYear  uint32                `protobuf:"varint,5,opt,name=manufacture_year,json=manufactureYear,proto3" json:"manufacture_year,omitempty"`
	Document         string                `protobuf:"bytes,6,opt,name=document,proto3" json:"document,omitempty"`
	Transmission     string                `protobuf:"bytes,7,opt,name=transmission,proto3" json:"transmission,omitempty"`
	BodyStyle        string                `protobuf:"bytes,8,opt,name=body_style,json=bodyStyle,proto3" json:"body_style,omitempty"`
	Color            string                `protobuf:"bytes,9,opt,name=color,proto3" json:"color,omitempty"`
	Engine           *ExternalLot_Engine   `protobuf:"bytes,10,opt,name=engine,proto3" json:"engine,omitempty"`
	Odometer         *ExternalLot_Odometer `protobuf:"bytes,11,opt,name=odometer,proto3" json:"odometer,omitempty"`
	Damage           *ExternalLot_Damage   `protobuf:"bytes,12,opt,name=damage,proto3" json:"damage,omitempty"`
	ImgLinks         []string              `protobuf:"bytes,13,rep,name=img_links,json=imgLinks,proto3" json:"img_links,omitempty"`
	Location         *ExternalLot_Location `protobuf:"bytes,14,opt,name=location,proto3" json:"location,omitempty"`
	Seller           string                `protobuf:"bytes,15,opt,name=seller,proto3" json:"seller,omitempty"`
	AuctionTimestamp int64                 `protobuf:"varint,16,opt,name=auction_timestamp,json=auctionTimestamp,proto3" json:"auction_timestamp,omitempty"`
	DriveType        string                `protobuf:"bytes,17,opt,name=drive_type,json=driveType,proto3" json:"drive_type,omitempty"`
	BuyNowPrice      uint64                `protobuf:"varint,18,opt,name=buy_now_price,json=buyNowPrice,proto3" json:"buy_now_price,omitempty"`
	RetailPrice      uint64                `protobuf:"varint,19,opt,name=retail_price,json=retailPrice,proto3" json:"retail_price,omitempty"`
	HdImgLinks       []string              `protobuf:"bytes,20,rep,name=hd_img_links,json=hdImgLinks,proto3" json:"hd_img_links,omitempty"`
	StartPrice       uint64                `protobuf:"varint,21,opt,name=start_price,json=startPrice,proto3" json:"start_price,omitempty"`
	Currency         string                `protobuf:"bytes,22,opt,name=currency,proto3" json:"currency,omitempty"`
	DurationS        uint64                `protobuf:"varint,23,opt,name=duration_s,json=durationS,proto3" json:"duration_s,omitempty"`
	Registered       bool                  `protobuf:"varint,24,opt,name=registered,proto3" json:"registered,omitempty"`
	VehicleCategory  string                `protobuf:"bytes,25,opt,name=vehicleCategory,proto3" json:"vehicleCategory,omitempty"`
	// Types that are valid to be assigned to Details:
	//	*ExternalLot_CopartDetails
	//	*ExternalLot_IaaiDetails
	//	*ExternalLot_AutoPapaDetails
	//	*ExternalLot_BnpDetails
	Details              isExternalLot_Details `protobuf_oneof:"details"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ExternalLot) Reset()         { *m = ExternalLot{} }
func (m *ExternalLot) String() string { return proto.CompactTextString(m) }
func (*ExternalLot) ProtoMessage()    {}
func (*ExternalLot) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{14}
}

func (m *ExternalLot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLot.Unmarshal(m, b)
}
func (m *ExternalLot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLot.Marshal(b, m, deterministic)
}
func (m *ExternalLot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLot.Merge(m, src)
}
func (m *ExternalLot) XXX_Size() int {
	return xxx_messageInfo_ExternalLot.Size(m)
}
func (m *ExternalLot) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLot.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLot proto.InternalMessageInfo

func (m *ExternalLot) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExternalLot) GetVin() string {
	if m != nil {
		return m.Vin
	}
	return ""
}

func (m *ExternalLot) GetMaker() string {
	if m != nil {
		return m.Maker
	}
	return ""
}

func (m *ExternalLot) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *ExternalLot) GetManufactureYear() uint32 {
	if m != nil {
		return m.ManufactureYear
	}
	return 0
}

func (m *ExternalLot) GetDocument() string {
	if m != nil {
		return m.Document
	}
	return ""
}

func (m *ExternalLot) GetTransmission() string {
	if m != nil {
		return m.Transmission
	}
	return ""
}

func (m *ExternalLot) GetBodyStyle() string {
	if m != nil {
		return m.BodyStyle
	}
	return ""
}

func (m *ExternalLot) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *ExternalLot) GetEngine() *ExternalLot_Engine {
	if m != nil {
		return m.Engine
	}
	return nil
}

func (m *ExternalLot) GetOdometer() *ExternalLot_Odometer {
	if m != nil {
		return m.Odometer
	}
	return nil
}

func (m *ExternalLot) GetDamage() *ExternalLot_Damage {
	if m != nil {
		return m.Damage
	}
	return nil
}

func (m *ExternalLot) GetImgLinks() []string {
	if m != nil {
		return m.ImgLinks
	}
	return nil
}

func (m *ExternalLot) GetLocation() *ExternalLot_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *ExternalLot) GetSeller() string {
	if m != nil {
		return m.Seller
	}
	return ""
}

func (m *ExternalLot) GetAuctionTimestamp() int64 {
	if m != nil {
		return m.AuctionTimestamp
	}
	return 0
}

func (m *ExternalLot) GetDriveType() string {
	if m != nil {
		return m.DriveType
	}
	return ""
}

func (m *ExternalLot) GetBuyNowPrice() uint64 {
	if m != nil {
		return m.BuyNowPrice
	}
	return 0
}

func (m *ExternalLot) GetRetailPrice() uint64 {
	if m != nil {
		return m.RetailPrice
	}
	return 0
}

func (m *ExternalLot) GetHdImgLinks() []string {
	if m != nil {
		return m.HdImgLinks
	}
	return nil
}

func (m *ExternalLot) GetStartPrice() uint64 {
	if m != nil {
		return m.StartPrice
	}
	return 0
}

func (m *ExternalLot) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *ExternalLot) GetDurationS() uint64 {
	if m != nil {
		return m.DurationS
	}
	return 0
}

func (m *ExternalLot) GetRegistered() bool {
	if m != nil {
		return m.Registered
	}
	return false
}

func (m *ExternalLot) GetVehicleCategory() string {
	if m != nil {
		return m.VehicleCategory
	}
	return ""
}

type isExternalLot_Details interface {
	isExternalLot_Details()
}

type ExternalLot_CopartDetails struct {
	CopartDetails *CopartDetails `protobuf:"bytes,101,opt,name=copart_details,json=copartDetails,proto3,oneof"`
}

type ExternalLot_IaaiDetails struct {
	IaaiDetails *IAAIDetails `protobuf:"bytes,102,opt,name=iaai_details,json=iaaiDetails,proto3,oneof"`
}

type ExternalLot_AutoPapaDetails struct {
	AutoPapaDetails *AutoPapaDetails `protobuf:"bytes,103,opt,name=auto_papa_details,json=autoPapaDetails,proto3,oneof"`
}

type ExternalLot_BnpDetails struct {
	BnpDetails *BNP_Details `protobuf:"bytes,104,opt,name=bnp_details,json=bnpDetails,proto3,oneof"`
}

func (*ExternalLot_CopartDetails) isExternalLot_Details() {}

func (*ExternalLot_IaaiDetails) isExternalLot_Details() {}

func (*ExternalLot_AutoPapaDetails) isExternalLot_Details() {}

func (*ExternalLot_BnpDetails) isExternalLot_Details() {}

func (m *ExternalLot) GetDetails() isExternalLot_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ExternalLot) GetCopartDetails() *CopartDetails {
	if x, ok := m.GetDetails().(*ExternalLot_CopartDetails); ok {
		return x.CopartDetails
	}
	return nil
}

func (m *ExternalLot) GetIaaiDetails() *IAAIDetails {
	if x, ok := m.GetDetails().(*ExternalLot_IaaiDetails); ok {
		return x.IaaiDetails
	}
	return nil
}

func (m *ExternalLot) GetAutoPapaDetails() *AutoPapaDetails {
	if x, ok := m.GetDetails().(*ExternalLot_AutoPapaDetails); ok {
		return x.AutoPapaDetails
	}
	return nil
}

func (m *ExternalLot) GetBnpDetails() *BNP_Details {
	if x, ok := m.GetDetails().(*ExternalLot_BnpDetails); ok {
		return x.BnpDetails
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExternalLot) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExternalLot_CopartDetails)(nil),
		(*ExternalLot_IaaiDetails)(nil),
		(*ExternalLot_AutoPapaDetails)(nil),
		(*ExternalLot_BnpDetails)(nil),
	}
}

type ExternalLot_Engine struct {
	VolumeL              float32  `protobuf:"fixed32,1,opt,name=volume_l,json=volumeL,proto3" json:"volume_l,omitempty"`
	Cylinders            uint32   `protobuf:"varint,2,opt,name=cylinders,proto3" json:"cylinders,omitempty"`
	Fuel                 string   `protobuf:"bytes,3,opt,name=fuel,proto3" json:"fuel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalLot_Engine) Reset()         { *m = ExternalLot_Engine{} }
func (m *ExternalLot_Engine) String() string { return proto.CompactTextString(m) }
func (*ExternalLot_Engine) ProtoMessage()    {}
func (*ExternalLot_Engine) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{14, 0}
}

func (m *ExternalLot_Engine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLot_Engine.Unmarshal(m, b)
}
func (m *ExternalLot_Engine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLot_Engine.Marshal(b, m, deterministic)
}
func (m *ExternalLot_Engine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLot_Engine.Merge(m, src)
}
func (m *ExternalLot_Engine) XXX_Size() int {
	return xxx_messageInfo_ExternalLot_Engine.Size(m)
}
func (m *ExternalLot_Engine) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLot_Engine.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLot_Engine proto.InternalMessageInfo

func (m *ExternalLot_Engine) GetVolumeL() float32 {
	if m != nil {
		return m.VolumeL
	}
	return 0
}

func (m *ExternalLot_Engine) GetCylinders() uint32 {
	if m != nil {
		return m.Cylinders
	}
	return 0
}

func (m *ExternalLot_Engine) GetFuel() string {
	if m != nil {
		return m.Fuel
	}
	return ""
}

type ExternalLot_Odometer struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ValueKm              uint32   `protobuf:"varint,2,opt,name=value_km,json=valueKm,proto3" json:"value_km,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalLot_Odometer) Reset()         { *m = ExternalLot_Odometer{} }
func (m *ExternalLot_Odometer) String() string { return proto.CompactTextString(m) }
func (*ExternalLot_Odometer) ProtoMessage()    {}
func (*ExternalLot_Odometer) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{14, 1}
}

func (m *ExternalLot_Odometer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLot_Odometer.Unmarshal(m, b)
}
func (m *ExternalLot_Odometer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLot_Odometer.Marshal(b, m, deterministic)
}
func (m *ExternalLot_Odometer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLot_Odometer.Merge(m, src)
}
func (m *ExternalLot_Odometer) XXX_Size() int {
	return xxx_messageInfo_ExternalLot_Odometer.Size(m)
}
func (m *ExternalLot_Odometer) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLot_Odometer.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLot_Odometer proto.InternalMessageInfo

func (m *ExternalLot_Odometer) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ExternalLot_Odometer) GetValueKm() uint32 {
	if m != nil {
		return m.ValueKm
	}
	return 0
}

type ExternalLot_Damage struct {
	Primary              string   `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`
	Secondary            string   `protobuf:"bytes,2,opt,name=secondary,proto3" json:"secondary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalLot_Damage) Reset()         { *m = ExternalLot_Damage{} }
func (m *ExternalLot_Damage) String() string { return proto.CompactTextString(m) }
func (*ExternalLot_Damage) ProtoMessage()    {}
func (*ExternalLot_Damage) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{14, 2}
}

func (m *ExternalLot_Damage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLot_Damage.Unmarshal(m, b)
}
func (m *ExternalLot_Damage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLot_Damage.Marshal(b, m, deterministic)
}
func (m *ExternalLot_Damage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLot_Damage.Merge(m, src)
}
func (m *ExternalLot_Damage) XXX_Size() int {
	return xxx_messageInfo_ExternalLot_Damage.Size(m)
}
func (m *ExternalLot_Damage) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLot_Damage.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLot_Damage proto.InternalMessageInfo

func (m *ExternalLot_Damage) GetPrimary() string {
	if m != nil {
		return m.Primary
	}
	return ""
}

func (m *ExternalLot_Damage) GetSecondary() string {
	if m != nil {
		return m.Secondary
	}
	return ""
}

type ExternalLot_Location struct {
	Country              string   `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	City                 string   `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Zip                  string   `protobuf:"bytes,4,opt,name=zip,proto3" json:"zip,omitempty"`
	IsSubLot             bool     `protobuf:"varint,5,opt,name=is_sub_lot,json=isSubLot,proto3" json:"is_sub_lot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalLot_Location) Reset()         { *m = ExternalLot_Location{} }
func (m *ExternalLot_Location) String() string { return proto.CompactTextString(m) }
func (*ExternalLot_Location) ProtoMessage()    {}
func (*ExternalLot_Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{14, 3}
}

func (m *ExternalLot_Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLot_Location.Unmarshal(m, b)
}
func (m *ExternalLot_Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLot_Location.Marshal(b, m, deterministic)
}
func (m *ExternalLot_Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLot_Location.Merge(m, src)
}
func (m *ExternalLot_Location) XXX_Size() int {
	return xxx_messageInfo_ExternalLot_Location.Size(m)
}
func (m *ExternalLot_Location) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLot_Location.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLot_Location proto.InternalMessageInfo

func (m *ExternalLot_Location) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *ExternalLot_Location) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *ExternalLot_Location) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ExternalLot_Location) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *ExternalLot_Location) GetIsSubLot() bool {
	if m != nil {
		return m.IsSubLot
	}
	return false
}

type ExternalLotLiveBiddingDetails struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Lane                 string   `protobuf:"bytes,2,opt,name=lane,proto3" json:"lane,omitempty"`
	ItemNumber           uint64   `protobuf:"varint,3,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
	BranchName           string   `protobuf:"bytes,4,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Branch               string   `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`
	StartTime            int64    `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalLotLiveBiddingDetails) Reset()         { *m = ExternalLotLiveBiddingDetails{} }
func (m *ExternalLotLiveBiddingDetails) String() string { return proto.CompactTextString(m) }
func (*ExternalLotLiveBiddingDetails) ProtoMessage()    {}
func (*ExternalLotLiveBiddingDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f7456ed8efcf9, []int{15}
}

func (m *ExternalLotLiveBiddingDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalLotLiveBiddingDetails.Unmarshal(m, b)
}
func (m *ExternalLotLiveBiddingDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalLotLiveBiddingDetails.Marshal(b, m, deterministic)
}
func (m *ExternalLotLiveBiddingDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalLotLiveBiddingDetails.Merge(m, src)
}
func (m *ExternalLotLiveBiddingDetails) XXX_Size() int {
	return xxx_messageInfo_ExternalLotLiveBiddingDetails.Size(m)
}
func (m *ExternalLotLiveBiddingDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalLotLiveBiddingDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalLotLiveBiddingDetails proto.InternalMessageInfo

func (m *ExternalLotLiveBiddingDetails) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExternalLotLiveBiddingDetails) GetLane() string {
	if m != nil {
		return m.Lane
	}
	return ""
}

func (m *ExternalLotLiveBiddingDetails) GetItemNumber() uint64 {
	if m != nil {
		return m.ItemNumber
	}
	return 0
}

func (m *ExternalLotLiveBiddingDetails) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *ExternalLotLiveBiddingDetails) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *ExternalLotLiveBiddingDetails) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func init() {
	proto.RegisterEnum("events.ExternalLotEvent_Type", ExternalLotEvent_Type_name, ExternalLotEvent_Type_value)
	proto.RegisterEnum("events.BNP_SaleType", BNP_SaleType_name, BNP_SaleType_value)
	proto.RegisterType((*ExternalLotEvent)(nil), "events.ExternalLotEvent")
	proto.RegisterType((*ExternalLotCreated)(nil), "events.ExternalLotCreated")
	proto.RegisterType((*ExternalLotCreatedV2)(nil), "events.ExternalLotCreatedV2")
	proto.RegisterType((*ExternalLotClosed)(nil), "events.ExternalLotClosed")
	proto.RegisterType((*ExternalLotBidUpdated)(nil), "events.ExternalLotBidUpdated")
	proto.RegisterType((*CopartDetails)(nil), "events.CopartDetails")
	proto.RegisterType((*IAAIDetails)(nil), "events.IAAIDetails")
	proto.RegisterType((*AutoPapaDetails)(nil), "events.AutoPapaDetails")
	proto.RegisterType((*BNP)(nil), "events.BNP")
	proto.RegisterType((*BNP_Details)(nil), "events.BNP.Details")
	proto.RegisterType((*VehicleV2)(nil), "events.VehicleV2")
	proto.RegisterMapType((map[string]string)(nil), "events.VehicleV2.NotesLocalizedEntry")
	proto.RegisterType((*VehicleV2_Odometer)(nil), "events.VehicleV2.Odometer")
	proto.RegisterType((*VehicleV2_Location)(nil), "events.VehicleV2.Location")
	proto.RegisterType((*VehicleV2_Engine)(nil), "events.VehicleV2.Engine")
	proto.RegisterType((*VehicleV2_Condition)(nil), "events.VehicleV2.Condition")
	proto.RegisterType((*Auction)(nil), "events.Auction")
	proto.RegisterType((*BuyNow)(nil), "events.BuyNow")
	proto.RegisterType((*Seller)(nil), "events.Seller")
	proto.RegisterType((*ExternalLotV2)(nil), "events.ExternalLotV2")
	proto.RegisterType((*ExternalLot)(nil), "events.ExternalLot")
	proto.RegisterType((*ExternalLot_Engine)(nil), "events.ExternalLot.Engine")
	proto.RegisterType((*ExternalLot_Odometer)(nil), "events.ExternalLot.Odometer")
	proto.RegisterType((*ExternalLot_Damage)(nil), "events.ExternalLot.Damage")
	proto.RegisterType((*ExternalLot_Location)(nil), "events.ExternalLot.Location")
	proto.RegisterType((*ExternalLotLiveBiddingDetails)(nil), "events.ExternalLotLiveBiddingDetails")
}

func init() { proto.RegisterFile("external_lots.proto", fileDescriptor_126f7456ed8efcf9) }

var fileDescriptor_126f7456ed8efcf9 = []byte{
	// 2438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5b, 0x6f, 0x1b, 0xc7,
	0x15, 0x36, 0x45, 0x8a, 0x97, 0x43, 0x51, 0xa4, 0xc7, 0x92, 0xbd, 0xa6, 0xe3, 0x46, 0x66, 0xea,
	0xc4, 0x41, 0x0a, 0xb9, 0x61, 0x83, 0xc0, 0x4d, 0xd0, 0xb4, 0xba, 0xb9, 0x61, 0x43, 0x50, 0xc2,
	0x52, 0x92, 0xe1, 0xbe, 0x2c, 0x86, 0xbb, 0x23, 0x6a, 0xa0, 0xdd, 0x9d, 0xc5, 0xce, 0xae, 0x5c,
	0xe6, 0xa1, 0x6f, 0x05, 0x0a, 0xb4, 0xff, 0xa0, 0xfd, 0x05, 0xfd, 0x09, 0x45, 0x80, 0x3e, 0xe4,
	0xa1, 0x40, 0x7f, 0x55, 0x31, 0x67, 0x66, 0x97, 0xcb, 0x8b, 0x1a, 0xa0, 0x45, 0xdf, 0x76, 0xbe,
	0x39, 0x67, 0x2e, 0xe7, 0xfa, 0xed, 0xc0, 0x03, 0xf6, 0xbb, 0x84, 0xc5, 0x21, 0xf5, 0x1d, 0x5f,
	0x24, 0x72, 0x3f, 0x8a, 0x45, 0x22, 0x48, 0x95, 0xdd, 0xb2, 0x30, 0x91, 0xbd, 0x3f, 0x55, 0xa0,
	0x73, 0x62, 0xe6, 0x87, 0x22, 0x39, 0x51, 0x28, 0xf9, 0x14, 0x2a, 0xc9, 0x2c, 0x62, 0x56, 0x69,
	0xaf, 0xf4, 0x62, 0xbb, 0xff, 0x74, 0x5f, 0xcb, 0xee, 0x2f, 0xcb, 0xed, 0x9f, 0xcf, 0x22, 0x66,
	0xa3, 0x28, 0xf9, 0x0c, 0x6a, 0x6e, 0xcc, 0x68, 0xc2, 0x3c, 0x6b, 0x63, 0xaf, 0xf4, 0xa2, 0xd9,
	0xef, 0xae, 0xd1, 0x3a, 0xd2, 0x12, 0x76, 0x26, 0x4a, 0x3e, 0x85, 0xaa, 0xeb, 0x0b, 0xc9, 0x3c,
	0xab, 0x8c, 0x4a, 0x8f, 0xd7, 0x29, 0xa1, 0x80, 0x6d, 0x04, 0xc9, 0x57, 0xd0, 0x9c, 0x70, 0xcf,
	0x49, 0x23, 0x0f, 0x37, 0xab, 0xa0, 0xde, 0xba, 0x23, 0x1e, 0x72, 0xef, 0x42, 0x0b, 0xd9, 0x30,
	0xc9, 0xbf, 0xc9, 0x17, 0xd0, 0x30, 0xbb, 0x5f, 0xf6, 0xad, 0x4d, 0xd4, 0x7e, 0xef, 0xee, 0xa3,
	0x5e, 0xf6, 0xed, 0xb9, 0x38, 0x79, 0x03, 0x3b, 0x3e, 0xbf, 0x65, 0xce, 0x84, 0x7b, 0x1e, 0x0f,
	0xa7, 0x8e, 0xc7, 0x12, 0xca, 0x7d, 0x69, 0x55, 0x71, 0x99, 0xe7, 0x6b, 0x96, 0x19, 0xf2, 0x5b,
	0x76, 0xa8, 0xa5, 0x8f, 0xb5, 0xb0, 0x4d, 0xfc, 0x15, 0xac, 0xf7, 0x87, 0x12, 0x54, 0x94, 0x31,
	0x49, 0x07, 0xb6, 0xce, 0xdf, 0x9e, 0x9d, 0x38, 0x17, 0xa3, 0x6f, 0x46, 0xa7, 0x6f, 0x46, 0x9d,
	0x7b, 0x39, 0x72, 0x64, 0x9f, 0x1c, 0x9c, 0x9f, 0x1c, 0x77, 0x4a, 0xa4, 0x0d, 0x4d, 0x8d, 0x0c,
	0x4f, 0xc7, 0x27, 0xc7, 0x9d, 0x0d, 0xb2, 0x03, 0x1d, 0x04, 0x0e, 0x07, 0xc7, 0xce, 0xc5, 0xd9,
	0x31, 0x8a, 0x95, 0xc9, 0x03, 0x68, 0x17, 0x15, 0x9d, 0xcb, 0x7e, 0xa7, 0x42, 0x9e, 0xc2, 0x63,
	0x04, 0x87, 0x83, 0x4b, 0x94, 0x3f, 0x1e, 0x8c, 0x7e, 0xed, 0x1c, 0x9f, 0x9c, 0x1f, 0x0c, 0x86,
	0xe3, 0xce, 0x66, 0xef, 0x4b, 0x20, 0xab, 0x36, 0x20, 0xcf, 0xa1, 0xec, 0x8b, 0x04, 0xa3, 0xa1,
	0xd9, 0x7f, 0xb0, 0xe6, 0x96, 0xb6, 0x9a, 0xef, 0xfd, 0x12, 0x76, 0xd6, 0x19, 0x90, 0x7c, 0x54,
	0x54, 0xdf, 0x5d, 0xa3, 0x7e, 0xd9, 0xd7, 0x0b, 0x08, 0xb8, 0xbf, 0xe2, 0x77, 0xb2, 0x0d, 0x1b,
	0xdc, 0x43, 0xe5, 0x86, 0xbd, 0xc1, 0x3d, 0xf2, 0x08, 0x6a, 0x5c, 0x3a, 0x52, 0xf8, 0x3a, 0xd0,
	0xea, 0x76, 0x95, 0xcb, 0xb1, 0xf0, 0x55, 0x2c, 0xed, 0x72, 0xe9, 0x2c, 0xf8, 0x07, 0xb7, 0xc2,
	0xd0, 0xaa, 0xdb, 0x84, 0xcb, 0x82, 0x33, 0x30, 0x7e, 0x7b, 0x6f, 0x61, 0x77, 0x6d, 0xc0, 0xac,
	0x6c, 0xfa, 0x10, 0xaa, 0x34, 0x10, 0x69, 0x98, 0xe0, 0x9e, 0x15, 0xdb, 0x8c, 0x88, 0xa5, 0x0e,
	0xf3, 0x9a, 0x87, 0xd4, 0x37, 0xbb, 0x64, 0xc3, 0xde, 0xf7, 0x1b, 0xd0, 0x3a, 0x12, 0x11, 0x8d,
	0x13, 0xe3, 0x63, 0xf2, 0x23, 0x80, 0x6b, 0x3e, 0xbd, 0xf6, 0xf9, 0xf4, 0x3a, 0x91, 0x66, 0xed,
	0x02, 0x42, 0x76, 0x60, 0x33, 0x14, 0x09, 0x93, 0xb8, 0x45, 0xc3, 0xd6, 0x03, 0xf2, 0x3e, 0x34,
	0x25, 0xf5, 0x99, 0x23, 0x13, 0x9a, 0xa4, 0x12, 0x77, 0x69, 0xd8, 0xa0, 0xa0, 0x31, 0x22, 0x4a,
	0x60, 0x46, 0x63, 0xcf, 0x09, 0xd3, 0x60, 0xc2, 0x62, 0xcc, 0x87, 0x96, 0x0d, 0x0a, 0x1a, 0x21,
	0x82, 0x2b, 0x30, 0xdf, 0x67, 0xb1, 0x83, 0x39, 0xbd, 0x69, 0x56, 0x40, 0x08, 0x63, 0x6e, 0x17,
	0xaa, 0xbe, 0x48, 0x1c, 0xee, 0x59, 0x35, 0xbc, 0xdc, 0xa6, 0x2f, 0x92, 0x01, 0x1a, 0xfa, 0x86,
	0xcd, 0x9c, 0x2b, 0x31, 0xb1, 0xea, 0xa8, 0x53, 0xbd, 0x61, 0xb3, 0xd7, 0x62, 0x42, 0x08, 0x54,
	0x7c, 0x1a, 0x32, 0xab, 0x81, 0x28, 0x7e, 0x93, 0xc7, 0x50, 0xe7, 0x09, 0x0b, 0xd4, 0x29, 0x2c,
	0xd8, 0x2b, 0xbd, 0x28, 0xdb, 0x35, 0x35, 0x1e, 0xa5, 0x01, 0xf9, 0x0c, 0x1e, 0x32, 0x99, 0xf0,
	0x40, 0x19, 0xd6, 0x89, 0xd1, 0x18, 0x4e, 0x14, 0x73, 0x97, 0x59, 0x4d, 0x14, 0xdc, 0xc9, 0x67,
	0x6d, 0x9c, 0x3c, 0x53, 0x73, 0xbf, 0xa9, 0xd4, 0xab, 0x9d, 0x5a, 0xef, 0xef, 0x25, 0x68, 0x0e,
	0x0e, 0x0e, 0x06, 0x99, 0x0d, 0x0b, 0x67, 0x2a, 0x2d, 0x9c, 0xe9, 0x09, 0x34, 0x7c, 0x21, 0xa5,
	0xbe, 0xa2, 0x36, 0x60, 0x5d, 0x01, 0x78, 0xc1, 0x1e, 0xb4, 0xe2, 0x34, 0x74, 0x68, 0xe8, 0x39,
	0x5e, 0xcc, 0x6f, 0x99, 0xb1, 0x62, 0x33, 0x4e, 0xc3, 0x83, 0xd0, 0x3b, 0x56, 0x90, 0xf2, 0xb0,
	0x4c, 0x68, 0x9c, 0x48, 0xb4, 0x60, 0xc3, 0x36, 0x23, 0x85, 0x4f, 0x62, 0x1a, 0xba, 0xd7, 0x68,
	0xb8, 0x96, 0x6d, 0x46, 0xe4, 0x19, 0x6c, 0xc9, 0x44, 0xb8, 0x37, 0x99, 0xdd, 0xab, 0x68, 0xba,
	0x26, 0x62, 0xda, 0xf0, 0xbd, 0x3f, 0x97, 0xa0, 0x7d, 0x90, 0x26, 0xe2, 0x8c, 0x46, 0x34, 0xbb,
	0xc0, 0x0e, 0x6c, 0x2a, 0x4f, 0x32, 0x73, 0x7c, 0x3d, 0x50, 0xd7, 0x12, 0xa1, 0x13, 0x0b, 0x9a,
	0xc7, 0xb4, 0x08, 0x6d, 0x41, 0x3d, 0xdc, 0x45, 0xfb, 0x2e, 0xba, 0x16, 0x61, 0x7e, 0x70, 0x8d,
	0x9d, 0x29, 0x88, 0x7c, 0x04, 0x6d, 0xea, 0x79, 0x3c, 0xe1, 0x42, 0x55, 0x78, 0x1e, 0x5e, 0x09,
	0x73, 0x83, 0xed, 0x39, 0x3c, 0x08, 0xaf, 0x44, 0xef, 0x6f, 0x1b, 0x50, 0x3e, 0x1c, 0x9d, 0x75,
	0xbf, 0x2b, 0x41, 0x2d, 0x3b, 0xce, 0x53, 0x80, 0x98, 0x45, 0x22, 0x4e, 0x9c, 0x34, 0xf6, 0xcd,
	0x99, 0x1a, 0x1a, 0xb9, 0x88, 0x7d, 0xf2, 0x29, 0x34, 0x30, 0xf8, 0x72, 0xab, 0x6e, 0xf7, 0x77,
	0xb2, 0xfc, 0x3d, 0x1c, 0x9d, 0xed, 0x8f, 0xa9, 0xcf, 0xb0, 0x07, 0xd4, 0xa5, 0xf9, 0x22, 0x1f,
	0x40, 0x4b, 0xb5, 0x9b, 0xd0, 0x63, 0x9e, 0x13, 0xd2, 0x20, 0x3b, 0xf2, 0x56, 0x06, 0x8e, 0x68,
	0xc0, 0x8c, 0xf1, 0x62, 0x3a, 0x65, 0x5a, 0xa6, 0x62, 0xae, 0xa5, 0x31, 0x14, 0x29, 0x78, 0x7a,
	0xb3, 0xe8, 0xe9, 0x9e, 0x07, 0xf5, 0x6c, 0x5b, 0xb2, 0x0b, 0xf7, 0xc7, 0x07, 0xc3, 0x13, 0x67,
	0xa9, 0x64, 0x2e, 0xc0, 0x87, 0x17, 0x6f, 0x9d, 0xd1, 0xe9, 0x9b, 0x4e, 0x49, 0x15, 0xc4, 0x39,
	0x7c, 0xfa, 0xfa, 0xf5, 0x89, 0xdd, 0xd9, 0x58, 0x94, 0x3d, 0xb8, 0x38, 0x3a, 0x1f, 0x9c, 0x8e,
	0x3a, 0xe5, 0xde, 0x1f, 0xb7, 0xa0, 0x71, 0xc9, 0xae, 0xb9, 0xeb, 0xb3, 0xcb, 0x3e, 0xe9, 0x40,
	0xf9, 0x96, 0x87, 0xc6, 0x3e, 0xea, 0x53, 0xf9, 0x31, 0xa0, 0x37, 0x2c, 0xce, 0x92, 0x15, 0x07,
	0x88, 0x0a, 0x8f, 0xf9, 0xe6, 0xd2, 0x7a, 0xa0, 0x50, 0xd7, 0xa7, 0x52, 0x5a, 0x8f, 0x34, 0x8a,
	0x03, 0xf2, 0x31, 0x74, 0x02, 0x1a, 0xa6, 0x57, 0xd4, 0x4d, 0xd2, 0x98, 0x39, 0x33, 0x46, 0xb3,
	0xe4, 0x6d, 0x17, 0xf0, 0xb7, 0x8c, 0xc6, 0xa4, 0x07, 0x5b, 0x49, 0x4c, 0x43, 0x19, 0x70, 0x29,
	0xb9, 0x08, 0x8d, 0x41, 0x16, 0x30, 0xe5, 0xc9, 0x89, 0xf0, 0x66, 0x8e, 0x4c, 0x66, 0x3e, 0xc3,
	0x68, 0x6c, 0xd8, 0x0d, 0x85, 0x8c, 0x15, 0xa0, 0xa6, 0x31, 0xf4, 0xb5, 0x2b, 0x6b, 0x7a, 0x1a,
	0x11, 0x34, 0xa4, 0x3a, 0xa2, 0xf0, 0x45, 0x6c, 0x32, 0x5d, 0x0f, 0xc8, 0x4f, 0x80, 0x88, 0x77,
	0x21, 0x8b, 0xe5, 0x35, 0x8f, 0x1c, 0x4f, 0xb8, 0x5a, 0x59, 0xa7, 0x7d, 0x27, 0x9f, 0x39, 0x16,
	0x2e, 0xae, 0xf1, 0x04, 0x1a, 0x3c, 0x98, 0x3a, 0x3e, 0x0f, 0x6f, 0xa4, 0x05, 0x7b, 0x65, 0x95,
	0x82, 0x3c, 0x98, 0x0e, 0xd5, 0x98, 0xec, 0xc1, 0xd6, 0xb5, 0xe7, 0xcc, 0xe7, 0x9b, 0x38, 0x0f,
	0xd7, 0xde, 0x20, 0x93, 0xf8, 0x12, 0xba, 0x5c, 0x3a, 0x3c, 0x50, 0x41, 0xe1, 0x89, 0x77, 0xa1,
	0x2f, 0xa8, 0xe7, 0x88, 0x48, 0x07, 0xb0, 0x65, 0x61, 0x5a, 0x3c, 0xe2, 0x72, 0xa0, 0x04, 0x8e,
	0xcd, 0xfc, 0xa9, 0x99, 0x56, 0xb5, 0x35, 0x66, 0x53, 0x2e, 0x13, 0x16, 0x33, 0xcf, 0xda, 0x42,
	0xe1, 0x02, 0xa2, 0x8c, 0x7d, 0xab, 0xbd, 0xe9, 0xb8, 0x34, 0x61, 0x53, 0x11, 0xcf, 0xac, 0x16,
	0xde, 0xa3, 0x6d, 0xf0, 0x23, 0x03, 0x93, 0xcf, 0xa1, 0x2e, 0x3c, 0x11, 0xb0, 0x84, 0xc5, 0xd6,
	0xf6, 0x22, 0x93, 0xc9, 0x03, 0x62, 0xff, 0xd4, 0x48, 0xd8, 0xb9, 0xac, 0xd2, 0xf3, 0x85, 0x4b,
	0xd5, 0x81, 0xac, 0xf6, 0x5d, 0x7a, 0x43, 0x23, 0x61, 0xe7, 0xb2, 0xe4, 0xa7, 0x50, 0x65, 0xe1,
	0x94, 0x87, 0xcc, 0xea, 0xa0, 0x96, 0xb5, 0xaa, 0x75, 0x82, 0xf3, 0xb6, 0x91, 0x23, 0x3f, 0x87,
	0x86, 0x2b, 0x42, 0x9d, 0xdb, 0x16, 0x41, 0xa5, 0x27, 0xab, 0x4a, 0x47, 0x99, 0x88, 0x3d, 0x97,
	0x26, 0x23, 0x68, 0x63, 0x5b, 0x71, 0xd4, 0xf6, 0x3e, 0xff, 0x96, 0x79, 0xd6, 0x83, 0xbd, 0x72,
	0x91, 0xbb, 0xcc, 0x17, 0x18, 0x29, 0xc1, 0x61, 0x26, 0x77, 0x12, 0x26, 0xf1, 0xcc, 0xde, 0x0e,
	0x17, 0x40, 0xf2, 0x09, 0x10, 0x2e, 0x1d, 0x93, 0xa8, 0x4e, 0x14, 0x33, 0xa9, 0x1a, 0xee, 0x0e,
	0xda, 0xbf, 0xcd, 0xe5, 0x37, 0x98, 0xb2, 0x67, 0x1a, 0x2e, 0xa6, 0xf4, 0xe3, 0x85, 0xe2, 0xbd,
	0x52, 0x33, 0x76, 0xd7, 0xd4, 0x8c, 0xe7, 0xb0, 0xfd, 0xee, 0x9a, 0x31, 0xdf, 0x89, 0x84, 0xd4,
	0x57, 0x7f, 0x88, 0x52, 0x2d, 0x44, 0xcf, 0x0c, 0xd8, 0x1d, 0x43, 0x3d, 0x73, 0x8e, 0xa9, 0xe9,
	0xaa, 0x6d, 0x96, 0xf2, 0x9a, 0xae, 0x5a, 0xe6, 0x63, 0xa8, 0xdf, 0x52, 0x3f, 0x65, 0xce, 0x4d,
	0x80, 0xf9, 0xdb, 0xb2, 0x6b, 0x38, 0xfe, 0x26, 0x50, 0x89, 0x90, 0x86, 0x3c, 0xc9, 0x1a, 0xad,
	0x1e, 0x74, 0xff, 0x5a, 0x82, 0x7a, 0xe6, 0x3a, 0xd5, 0xf3, 0x5d, 0xd5, 0xfc, 0xe3, 0x99, 0x59,
	0x36, 0x1b, 0xaa, 0xc6, 0xe8, 0xf2, 0x64, 0x66, 0x6a, 0x02, 0x7e, 0xcf, 0x0b, 0x7e, 0xb9, 0x58,
	0xf0, 0x3b, 0x50, 0xfe, 0x96, 0x47, 0xa6, 0xee, 0xa9, 0xcf, 0x95, 0x92, 0xb8, 0xb9, 0xb6, 0x24,
	0x66, 0x5d, 0xa2, 0x5a, 0xec, 0x12, 0xdd, 0x37, 0x50, 0xd5, 0x21, 0xa2, 0x72, 0xf0, 0x56, 0xf8,
	0x69, 0xc0, 0x1c, 0x37, 0xc0, 0xd3, 0xb5, 0xec, 0xba, 0x06, 0x8e, 0x02, 0xf2, 0x1e, 0x34, 0xdc,
	0x99, 0xcf, 0x43, 0x8f, 0xc5, 0xd2, 0xdc, 0x7b, 0x0e, 0xa8, 0xc3, 0x5f, 0xa5, 0x79, 0xe9, 0xc2,
	0xef, 0xee, 0x3f, 0x4a, 0xd0, 0xc8, 0xe3, 0xe8, 0x07, 0x09, 0xcc, 0x73, 0xd8, 0x8e, 0x62, 0x1e,
	0xd0, 0x78, 0xe6, 0x78, 0x54, 0xa5, 0xa9, 0x31, 0x44, 0xcb, 0xa0, 0xc7, 0x08, 0xaa, 0x5c, 0x94,
	0x4c, 0x85, 0x64, 0x41, 0x50, 0x6f, 0xda, 0xce, 0x71, 0x23, 0xba, 0xd8, 0x9e, 0x2a, 0xcb, 0xed,
	0xe9, 0x19, 0x6c, 0x69, 0x7d, 0xc7, 0x67, 0xb7, 0xcc, 0x47, 0x9b, 0x6d, 0xda, 0x4d, 0x8d, 0x0d,
	0x15, 0xd4, 0x3d, 0x80, 0x07, 0x6b, 0xe2, 0x58, 0xd9, 0xff, 0x86, 0x65, 0xfe, 0x53, 0x9f, 0xca,
	0x4f, 0x18, 0x03, 0x59, 0x41, 0xc7, 0xc1, 0x17, 0x1b, 0xaf, 0x4a, 0xbd, 0xbf, 0x94, 0xa0, 0x76,
	0x90, 0xba, 0x68, 0x02, 0xc5, 0xa5, 0x14, 0x2f, 0x30, 0x04, 0xa6, 0x84, 0x04, 0x06, 0x10, 0x42,
	0xda, 0xa2, 0xea, 0x5c, 0xc0, 0x43, 0x45, 0x40, 0x1d, 0x99, 0xb0, 0x08, 0x57, 0x2b, 0xdb, 0x10,
	0xf0, 0xf0, 0x90, 0x7b, 0xe3, 0x84, 0x45, 0x6a, 0x09, 0x11, 0x3a, 0x34, 0x8a, 0x62, 0x71, 0x9b,
	0xd3, 0x46, 0x10, 0xe1, 0x81, 0x41, 0x54, 0xd5, 0xcd, 0xf8, 0xab, 0xde, 0x2b, 0xe1, 0xa6, 0x45,
	0x96, 0xed, 0x8e, 0x99, 0x19, 0xab, 0x89, 0x73, 0x1e, 0xb0, 0xde, 0x3f, 0x4b, 0x50, 0x3d, 0x4c,
	0x67, 0x23, 0xf1, 0x4e, 0xd9, 0x7f, 0x92, 0x4a, 0x1e, 0x32, 0xc5, 0x83, 0x44, 0x42, 0x7d, 0x73,
	0xbe, 0x56, 0x86, 0x9e, 0x2b, 0x50, 0x59, 0x2d, 0x17, 0xbb, 0x62, 0xcc, 0x1c, 0xb1, 0x99, 0x61,
	0xaf, 0x19, 0xe6, 0x9a, 0x9b, 0xca, 0x44, 0x04, 0x8a, 0x34, 0xe2, 0x4a, 0x65, 0xbd, 0x52, 0x86,
	0xe6, 0x2b, 0xe5, 0x62, 0x6a, 0x25, 0x7d, 0xc6, 0x66, 0x86, 0xa9, 0x95, 0x3e, 0x86, 0x0e, 0x97,
	0x0e, 0xf5, 0x6e, 0x59, 0x9c, 0x70, 0xc9, 0x02, 0x55, 0x1e, 0x36, 0xb3, 0xf2, 0x70, 0x50, 0x84,
	0x7b, 0x7d, 0xa8, 0x8e, 0x91, 0xd7, 0xa8, 0x50, 0xc4, 0x1c, 0xd0, 0xee, 0xc1, 0x6f, 0xe5, 0x1f,
	0x4d, 0x81, 0x8c, 0x7f, 0x70, 0xd0, 0xfb, 0x57, 0x19, 0x5a, 0x0b, 0x3f, 0x12, 0x2b, 0xcc, 0xfd,
	0x13, 0xa8, 0x99, 0x0a, 0x6f, 0xfe, 0x4b, 0xef, 0xaf, 0x54, 0x3a, 0x3b, 0x93, 0x50, 0x85, 0x81,
	0x85, 0x5e, 0xd1, 0xe0, 0x35, 0x16, 0x7a, 0xca, 0xce, 0xa4, 0x0b, 0x75, 0x37, 0x8d, 0x63, 0x16,
	0xba, 0x33, 0x93, 0x9b, 0xf9, 0x98, 0x7c, 0x0c, 0x35, 0xaa, 0x03, 0x04, 0x5b, 0x7c, 0xb3, 0xdf,
	0xce, 0xf6, 0x30, 0x71, 0x63, 0x67, 0xf3, 0xe4, 0x23, 0xa8, 0x4d, 0xd2, 0x99, 0x13, 0x8a, 0x77,
	0xd8, 0xd2, 0x9a, 0xfd, 0xed, 0x9c, 0x4f, 0xa1, 0x13, 0xed, 0xea, 0x44, 0x3b, 0xf3, 0x6e, 0xd6,
	0xdc, 0xbd, 0x9b, 0x35, 0x93, 0x0f, 0xa1, 0xaa, 0xb9, 0xa1, 0xf5, 0x64, 0x71, 0x75, 0x6d, 0x59,
	0xdb, 0xcc, 0x2a, 0xd2, 0x98, 0x3f, 0x0a, 0x18, 0x7a, 0xfb, 0x4c, 0x93, 0xc6, 0x0c, 0x3e, 0xd4,
	0x34, 0xf7, 0xc3, 0x82, 0xa0, 0xf9, 0x49, 0xe8, 0xe9, 0xa4, 0x66, 0x73, 0xb3, 0x0f, 0x3c, 0x15,
	0xd5, 0x91, 0x4f, 0x93, 0x2b, 0x11, 0x07, 0x4a, 0xe6, 0x03, 0x5d, 0x1c, 0x32, 0x68, 0x80, 0x4c,
	0x56, 0xc4, 0x53, 0x1a, 0xf2, 0x6f, 0x59, 0xac, 0x24, 0x7e, 0xac, 0xeb, 0x5b, 0x8e, 0x0d, 0xbc,
	0xde, 0xf7, 0x4d, 0x68, 0x16, 0x9c, 0xb9, 0xe2, 0x4a, 0xc3, 0xc2, 0x36, 0xd6, 0xb0, 0xb0, 0xf2,
	0x5a, 0x16, 0x56, 0x29, 0xb2, 0xb0, 0x75, 0x7c, 0x6b, 0x73, 0x3d, 0xdf, 0xea, 0x42, 0xdd, 0x13,
	0x6e, 0x8a, 0xc1, 0xaa, 0x99, 0x54, 0x3e, 0x5e, 0xe1, 0x62, 0xb5, 0x1f, 0xe4, 0x62, 0xf5, 0x65,
	0x2e, 0x96, 0x93, 0xad, 0x46, 0x91, 0x6c, 0xf5, 0x73, 0x1e, 0x00, 0x77, 0xbe, 0x9f, 0x2c, 0x33,
	0x81, 0x57, 0x05, 0xae, 0xd2, 0xbc, 0xf3, 0x29, 0x63, 0x1d, 0x5b, 0xe9, 0x43, 0xd5, 0x94, 0xde,
	0xad, 0xbb, 0x77, 0xd3, 0x55, 0xd8, 0x36, 0x92, 0x8b, 0x04, 0xaf, 0xb5, 0x44, 0xf0, 0x5e, 0x15,
	0xe8, 0xcf, 0xf6, 0xdd, 0x47, 0x59, 0x43, 0x80, 0x1e, 0xe6, 0x31, 0xdb, 0x36, 0x5d, 0x5a, 0xc7,
	0xe8, 0x27, 0x70, 0xdf, 0x64, 0x0d, 0x26, 0xa4, 0x4c, 0x68, 0x10, 0x21, 0x47, 0x2a, 0xdb, 0x1d,
	0x33, 0x71, 0x9e, 0xe1, 0x4b, 0xfc, 0xf6, 0xfe, 0x32, 0xbf, 0xed, 0x41, 0xcb, 0xa4, 0x9d, 0x49,
	0x22, 0xa2, 0x7f, 0xd7, 0x74, 0xb2, 0xe9, 0xdc, 0x79, 0x06, 0x5b, 0x0b, 0x79, 0xf6, 0x40, 0x8b,
	0xc4, 0x85, 0xf4, 0x5a, 0x66, 0xb1, 0x3b, 0x2b, 0x2c, 0x76, 0xa9, 0x41, 0xec, 0xe2, 0x1a, 0xc5,
	0x06, 0x51, 0xac, 0x23, 0x0f, 0x97, 0xea, 0x88, 0xba, 0x44, 0x1a, 0xa3, 0x55, 0x1c, 0xfd, 0xb7,
	0x50, 0xb1, 0x1b, 0x19, 0x32, 0x5e, 0x22, 0xb9, 0xd6, 0x0a, 0xc9, 0x7d, 0x01, 0xcb, 0x64, 0xd6,
	0xf0, 0xac, 0x15, 0x8e, 0xfb, 0x15, 0x6c, 0xbb, 0xf8, 0x36, 0x91, 0xbf, 0x60, 0xb1, 0xc5, 0xc7,
	0x99, 0x85, 0x97, 0x8b, 0xaf, 0xef, 0xd9, 0x2d, 0x77, 0xe1, 0x29, 0xe3, 0x15, 0x6c, 0x71, 0x4a,
	0x79, 0xae, 0x7d, 0xb5, 0xf8, 0x32, 0x54, 0xf8, 0x63, 0xff, 0xfa, 0x9e, 0xdd, 0x54, 0xa2, 0x99,
	0xe6, 0x89, 0x72, 0x6a, 0x22, 0x9c, 0x88, 0x46, 0x34, 0x57, 0x9f, 0xa2, 0xfa, 0xa3, 0x79, 0xd1,
	0x5c, 0xf8, 0x67, 0xfe, 0xfa, 0x9e, 0xdd, 0xa6, 0x4b, 0xbf, 0xd1, 0x9f, 0x43, 0x73, 0x12, 0x46,
	0xf9, 0x02, 0xd7, 0x8b, 0xfb, 0xab, 0x5f, 0xd3, 0xb9, 0x32, 0x4c, 0xc2, 0xc8, 0x8c, 0xba, 0x17,
	0x39, 0x53, 0x52, 0x1c, 0x50, 0x33, 0x25, 0xdd, 0x26, 0x37, 0xec, 0x9a, 0x1e, 0x0f, 0xff, 0x0b,
	0x9e, 0xf4, 0x8b, 0xff, 0x89, 0x74, 0x76, 0x7f, 0x05, 0x55, 0x43, 0x78, 0x2c, 0xa8, 0x19, 0xb2,
	0x94, 0x71, 0x4b, 0x33, 0x54, 0x87, 0xca, 0xd9, 0x91, 0x29, 0x81, 0x73, 0xa0, 0xfb, 0xfb, 0xff,
	0x3b, 0x3f, 0x7d, 0x0f, 0x80, 0x4b, 0x47, 0xa6, 0x13, 0xd5, 0x06, 0x4c, 0x0b, 0xaf, 0x73, 0x39,
	0x4e, 0x27, 0x43, 0x91, 0x1c, 0x36, 0xa0, 0x66, 0x7c, 0xd1, 0xfb, 0xae, 0x04, 0x4f, 0xff, 0xe3,
	0x03, 0xe8, 0x4a, 0x5d, 0xcf, 0xde, 0x93, 0x36, 0x0a, 0xef, 0x49, 0xef, 0x43, 0x33, 0x7b, 0x4f,
	0x9a, 0x98, 0xfa, 0x5e, 0xb1, 0xc1, 0x3c, 0x29, 0x99, 0x57, 0x2d, 0xdd, 0xb8, 0x8a, 0x2f, 0x08,
	0xa0, 0x21, 0x64, 0xcb, 0x8b, 0x0f, 0x37, 0x8d, 0xfc, 0xe1, 0xe6, 0x29, 0x40, 0x81, 0x56, 0x55,
	0xb1, 0x9e, 0x34, 0x64, 0xc6, 0xa7, 0x0e, 0x9f, 0xff, 0xf6, 0x83, 0x29, 0x4f, 0x7c, 0x3a, 0xd9,
	0x77, 0x45, 0xf0, 0x92, 0x99, 0x06, 0xfe, 0x52, 0x47, 0xd6, 0xcb, 0xa9, 0x78, 0x79, 0x43, 0xaf,
	0x6e, 0xe8, 0xa4, 0x8a, 0xaf, 0xe8, 0x3f, 0xfb, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x4b,
	0xfe, 0x6d, 0x5c, 0x17, 0x00, 0x00,
}
