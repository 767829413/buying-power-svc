// Code generated by protoc-gen-go. DO NOT EDIT.
// source: leasings.proto

package kafka

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LeasingEvent_Type int32

const (
	LeasingEvent_TYPE_UNKNOWN LeasingEvent_Type = 0
	LeasingEvent_TYPE_STATE   LeasingEvent_Type = 1
)

var LeasingEvent_Type_name = map[int32]string{
	0: "TYPE_UNKNOWN",
	1: "TYPE_STATE",
}

var LeasingEvent_Type_value = map[string]int32{
	"TYPE_UNKNOWN": 0,
	"TYPE_STATE":   1,
}

func (x LeasingEvent_Type) String() string {
	return proto.EnumName(LeasingEvent_Type_name, int32(x))
}

func (LeasingEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99d14e3f473e42b9, []int{0, 0}
}

type Leasing_State int32

const (
	Leasing_UNKNOWN          Leasing_State = 0
	Leasing_APPROVED         Leasing_State = 1
	Leasing_REJECTED         Leasing_State = 2
	Leasing_PENDING          Leasing_State = 3
	Leasing_READY_FOR_REVIEW Leasing_State = 4
)

var Leasing_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "APPROVED",
	2: "REJECTED",
	3: "PENDING",
	4: "READY_FOR_REVIEW",
}

var Leasing_State_value = map[string]int32{
	"UNKNOWN":          0,
	"APPROVED":         1,
	"REJECTED":         2,
	"PENDING":          3,
	"READY_FOR_REVIEW": 4,
}

func (x Leasing_State) String() string {
	return proto.EnumName(Leasing_State_name, int32(x))
}

func (Leasing_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99d14e3f473e42b9, []int{2, 0}
}

type LeasingEvent struct {
	Type                 LeasingEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=events.LeasingEvent_Type" json:"type,omitempty"`
	State                *LeasingState     `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LeasingEvent) Reset()         { *m = LeasingEvent{} }
func (m *LeasingEvent) String() string { return proto.CompactTextString(m) }
func (*LeasingEvent) ProtoMessage()    {}
func (*LeasingEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d14e3f473e42b9, []int{0}
}

func (m *LeasingEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeasingEvent.Unmarshal(m, b)
}
func (m *LeasingEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeasingEvent.Marshal(b, m, deterministic)
}
func (m *LeasingEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeasingEvent.Merge(m, src)
}
func (m *LeasingEvent) XXX_Size() int {
	return xxx_messageInfo_LeasingEvent.Size(m)
}
func (m *LeasingEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_LeasingEvent.DiscardUnknown(m)
}

var xxx_messageInfo_LeasingEvent proto.InternalMessageInfo

func (m *LeasingEvent) GetType() LeasingEvent_Type {
	if m != nil {
		return m.Type
	}
	return LeasingEvent_TYPE_UNKNOWN
}

func (m *LeasingEvent) GetState() *LeasingState {
	if m != nil {
		return m.State
	}
	return nil
}

type LeasingState struct {
	Leasing              *Leasing `protobuf:"bytes,1,opt,name=leasing,proto3" json:"leasing,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeasingState) Reset()         { *m = LeasingState{} }
func (m *LeasingState) String() string { return proto.CompactTextString(m) }
func (*LeasingState) ProtoMessage()    {}
func (*LeasingState) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d14e3f473e42b9, []int{1}
}

func (m *LeasingState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeasingState.Unmarshal(m, b)
}
func (m *LeasingState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeasingState.Marshal(b, m, deterministic)
}
func (m *LeasingState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeasingState.Merge(m, src)
}
func (m *LeasingState) XXX_Size() int {
	return xxx_messageInfo_LeasingState.Size(m)
}
func (m *LeasingState) XXX_DiscardUnknown() {
	xxx_messageInfo_LeasingState.DiscardUnknown(m)
}

var xxx_messageInfo_LeasingState proto.InternalMessageInfo

func (m *LeasingState) GetLeasing() *Leasing {
	if m != nil {
		return m.Leasing
	}
	return nil
}

type Leasing struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RequestorId          string        `protobuf:"bytes,2,opt,name=requestor_id,json=requestorId,proto3" json:"requestor_id,omitempty"`
	Phone                string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	BankName             string        `protobuf:"bytes,4,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	LotId                int64         `protobuf:"varint,5,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	Version              int32         `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	State                Leasing_State `protobuf:"varint,7,opt,name=state,proto3,enum=events.Leasing_State" json:"state,omitempty"`
	BankLogo             string        `protobuf:"bytes,8,opt,name=bank_logo,json=bankLogo,proto3" json:"bank_logo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Leasing) Reset()         { *m = Leasing{} }
func (m *Leasing) String() string { return proto.CompactTextString(m) }
func (*Leasing) ProtoMessage()    {}
func (*Leasing) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d14e3f473e42b9, []int{2}
}

func (m *Leasing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Leasing.Unmarshal(m, b)
}
func (m *Leasing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Leasing.Marshal(b, m, deterministic)
}
func (m *Leasing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Leasing.Merge(m, src)
}
func (m *Leasing) XXX_Size() int {
	return xxx_messageInfo_Leasing.Size(m)
}
func (m *Leasing) XXX_DiscardUnknown() {
	xxx_messageInfo_Leasing.DiscardUnknown(m)
}

var xxx_messageInfo_Leasing proto.InternalMessageInfo

func (m *Leasing) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Leasing) GetRequestorId() string {
	if m != nil {
		return m.RequestorId
	}
	return ""
}

func (m *Leasing) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Leasing) GetBankName() string {
	if m != nil {
		return m.BankName
	}
	return ""
}

func (m *Leasing) GetLotId() int64 {
	if m != nil {
		return m.LotId
	}
	return 0
}

func (m *Leasing) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Leasing) GetState() Leasing_State {
	if m != nil {
		return m.State
	}
	return Leasing_UNKNOWN
}

func (m *Leasing) GetBankLogo() string {
	if m != nil {
		return m.BankLogo
	}
	return ""
}

func init() {
	proto.RegisterEnum("events.LeasingEvent_Type", LeasingEvent_Type_name, LeasingEvent_Type_value)
	proto.RegisterEnum("events.Leasing_State", Leasing_State_name, Leasing_State_value)
	proto.RegisterType((*LeasingEvent)(nil), "events.LeasingEvent")
	proto.RegisterType((*LeasingState)(nil), "events.LeasingState")
	proto.RegisterType((*Leasing)(nil), "events.Leasing")
}

func init() { proto.RegisterFile("leasings.proto", fileDescriptor_99d14e3f473e42b9) }

var fileDescriptor_99d14e3f473e42b9 = []byte{
	// 411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0xc5, 0x69, 0xd3, 0xb4, 0xb7, 0x55, 0xb1, 0xac, 0x4e, 0x0a, 0xe2, 0xa5, 0x04, 0x21, 0x05,
	0x10, 0xa9, 0x54, 0x9e, 0x78, 0x2c, 0xc4, 0xa0, 0xc0, 0x94, 0x46, 0x6e, 0xd8, 0x34, 0x5e, 0x22,
	0x77, 0x31, 0x21, 0x6a, 0x1a, 0x87, 0xc4, 0x9b, 0xb4, 0xef, 0xe0, 0x83, 0xf8, 0xb5, 0x29, 0xce,
	0xda, 0x4d, 0x7d, 0xbc, 0xe7, 0x9c, 0x7b, 0xcf, 0xf1, 0x91, 0x61, 0x5a, 0x08, 0xde, 0xe4, 0x65,
	0xd6, 0x78, 0x55, 0x2d, 0x95, 0x24, 0x03, 0x71, 0x2b, 0x4a, 0xd5, 0x38, 0xff, 0x10, 0x4c, 0xce,
	0x3b, 0x8a, 0xb6, 0x08, 0xf9, 0x00, 0x7d, 0x75, 0x57, 0x09, 0x1b, 0xcd, 0x91, 0x3b, 0x5d, 0xbe,
	0xf0, 0x3a, 0x9d, 0xf7, 0x54, 0xe3, 0xc5, 0x77, 0x95, 0x60, 0x5a, 0x46, 0xde, 0x81, 0xd9, 0x28,
	0xae, 0x84, 0x6d, 0xcc, 0x91, 0x3b, 0x5e, 0xce, 0x4e, 0xf4, 0x9b, 0x96, 0x63, 0x9d, 0xc4, 0x71,
	0xa1, 0xdf, 0x6e, 0x12, 0x0c, 0x93, 0xf8, 0x2a, 0xa2, 0xc9, 0xcf, 0xf0, 0x47, 0xb8, 0xbe, 0x0c,
	0xf1, 0x33, 0x32, 0x05, 0xd0, 0xc8, 0x26, 0x5e, 0xc5, 0x14, 0x23, 0xe7, 0xd3, 0x31, 0x94, 0x3e,
	0x40, 0xde, 0x82, 0xf5, 0x90, 0x5f, 0xe7, 0x1a, 0x2f, 0x9f, 0x9f, 0xf8, 0xb0, 0x03, 0xef, 0xfc,
	0x37, 0xc0, 0x7a, 0x00, 0xc9, 0x14, 0x8c, 0x3c, 0xd5, 0x1b, 0x23, 0x66, 0xe4, 0x29, 0x79, 0x05,
	0x93, 0x5a, 0xfc, 0xbd, 0x11, 0x8d, 0x92, 0x75, 0x92, 0xa7, 0x3a, 0xf3, 0x88, 0x8d, 0x8f, 0x58,
	0x90, 0x92, 0x19, 0x98, 0xd5, 0x1f, 0x59, 0x0a, 0xbb, 0xa7, 0xb9, 0x6e, 0x20, 0x2f, 0x61, 0xb4,
	0xe5, 0xe5, 0x2e, 0x29, 0xf9, 0x5e, 0xd8, 0x7d, 0xcd, 0x0c, 0x5b, 0x20, 0xe4, 0x7b, 0x41, 0xce,
	0x60, 0x50, 0x48, 0xd5, 0xde, 0x33, 0xe7, 0xc8, 0xed, 0x31, 0xb3, 0x90, 0x2a, 0x48, 0x89, 0x0d,
	0xd6, 0xad, 0xa8, 0x9b, 0x5c, 0x96, 0xf6, 0x60, 0x8e, 0x5c, 0x93, 0x1d, 0x46, 0xf2, 0xfe, 0xd0,
	0x99, 0xa5, 0x3b, 0x3e, 0x3b, 0x79, 0x8b, 0xf7, 0xb4, 0xb4, 0xa3, 0x75, 0x21, 0x33, 0x69, 0x0f,
	0x1f, 0xad, 0xcf, 0x65, 0x26, 0x9d, 0x0d, 0x98, 0x5d, 0x41, 0x63, 0xb0, 0x1e, 0xdb, 0x9c, 0xc0,
	0x70, 0x15, 0x45, 0x6c, 0x7d, 0x41, 0x7d, 0x8c, 0xda, 0x89, 0xd1, 0xef, 0xf4, 0x4b, 0x4c, 0x7d,
	0x6c, 0xb4, 0xc2, 0x88, 0x86, 0x7e, 0x10, 0x7e, 0xc3, 0x3d, 0x32, 0x03, 0xcc, 0xe8, 0xca, 0xbf,
	0x4a, 0xbe, 0xae, 0x59, 0xc2, 0xe8, 0x45, 0x40, 0x2f, 0x71, 0xff, 0xf3, 0x9b, 0x5f, 0xaf, 0xb3,
	0x5c, 0x15, 0x7c, 0xeb, 0x5d, 0xcb, 0xfd, 0x42, 0xac, 0x6e, 0xae, 0x55, 0x2e, 0xcb, 0x45, 0x17,
	0x72, 0x91, 0xc9, 0xc5, 0x8e, 0xff, 0xde, 0xf1, 0xed, 0x40, 0x7f, 0xa4, 0x8f, 0xf7, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x3c, 0xed, 0x85, 0x7b, 0x5a, 0x02, 0x00, 0x00,
}
