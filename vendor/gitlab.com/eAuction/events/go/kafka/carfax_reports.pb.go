// Code generated by protoc-gen-go. DO NOT EDIT.
// source: carfax_reports.proto

package kafka

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CarfaxReportEvent_Type int32

const (
	CarfaxReportEvent_TYPE_UNKNOWN   CarfaxReportEvent_Type = 0
	CarfaxReportEvent_TYPE_FULFILLED CarfaxReportEvent_Type = 1
)

var CarfaxReportEvent_Type_name = map[int32]string{
	0: "TYPE_UNKNOWN",
	1: "TYPE_FULFILLED",
}

var CarfaxReportEvent_Type_value = map[string]int32{
	"TYPE_UNKNOWN":   0,
	"TYPE_FULFILLED": 1,
}

func (x CarfaxReportEvent_Type) String() string {
	return proto.EnumName(CarfaxReportEvent_Type_name, int32(x))
}

func (CarfaxReportEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4b123536c7976bdc, []int{0, 0}
}

type CarfaxReportFulfilled_Requestor_Locale int32

const (
	CarfaxReportFulfilled_Requestor_LOCALE_UNKNOWN CarfaxReportFulfilled_Requestor_Locale = 0
	CarfaxReportFulfilled_Requestor_LOCALE_GL      CarfaxReportFulfilled_Requestor_Locale = 1
	CarfaxReportFulfilled_Requestor_LOCALE_RU      CarfaxReportFulfilled_Requestor_Locale = 2
	CarfaxReportFulfilled_Requestor_LOCALE_UK      CarfaxReportFulfilled_Requestor_Locale = 3
	CarfaxReportFulfilled_Requestor_LOCALE_EN      CarfaxReportFulfilled_Requestor_Locale = 4
)

var CarfaxReportFulfilled_Requestor_Locale_name = map[int32]string{
	0: "LOCALE_UNKNOWN",
	1: "LOCALE_GL",
	2: "LOCALE_RU",
	3: "LOCALE_UK",
	4: "LOCALE_EN",
}

var CarfaxReportFulfilled_Requestor_Locale_value = map[string]int32{
	"LOCALE_UNKNOWN": 0,
	"LOCALE_GL":      1,
	"LOCALE_RU":      2,
	"LOCALE_UK":      3,
	"LOCALE_EN":      4,
}

func (x CarfaxReportFulfilled_Requestor_Locale) String() string {
	return proto.EnumName(CarfaxReportFulfilled_Requestor_Locale_name, int32(x))
}

func (CarfaxReportFulfilled_Requestor_Locale) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4b123536c7976bdc, []int{1, 0, 0}
}

type CarfaxReportEvent struct {
	Type                 CarfaxReportEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=events.CarfaxReportEvent_Type" json:"type,omitempty"`
	Fulfilled            *CarfaxReportFulfilled `protobuf:"bytes,2,opt,name=fulfilled,proto3" json:"fulfilled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CarfaxReportEvent) Reset()         { *m = CarfaxReportEvent{} }
func (m *CarfaxReportEvent) String() string { return proto.CompactTextString(m) }
func (*CarfaxReportEvent) ProtoMessage()    {}
func (*CarfaxReportEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b123536c7976bdc, []int{0}
}

func (m *CarfaxReportEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarfaxReportEvent.Unmarshal(m, b)
}
func (m *CarfaxReportEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarfaxReportEvent.Marshal(b, m, deterministic)
}
func (m *CarfaxReportEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarfaxReportEvent.Merge(m, src)
}
func (m *CarfaxReportEvent) XXX_Size() int {
	return xxx_messageInfo_CarfaxReportEvent.Size(m)
}
func (m *CarfaxReportEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CarfaxReportEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CarfaxReportEvent proto.InternalMessageInfo

func (m *CarfaxReportEvent) GetType() CarfaxReportEvent_Type {
	if m != nil {
		return m.Type
	}
	return CarfaxReportEvent_TYPE_UNKNOWN
}

func (m *CarfaxReportEvent) GetFulfilled() *CarfaxReportFulfilled {
	if m != nil {
		return m.Fulfilled
	}
	return nil
}

type CarfaxReportFulfilled struct {
	RequestId            int64                            `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Vin                  string                           `protobuf:"bytes,2,opt,name=vin,proto3" json:"vin,omitempty"`
	DocumentLink         string                           `protobuf:"bytes,3,opt,name=document_link,json=documentLink,proto3" json:"document_link,omitempty"`
	Requestor            *CarfaxReportFulfilled_Requestor `protobuf:"bytes,4,opt,name=requestor,proto3" json:"requestor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CarfaxReportFulfilled) Reset()         { *m = CarfaxReportFulfilled{} }
func (m *CarfaxReportFulfilled) String() string { return proto.CompactTextString(m) }
func (*CarfaxReportFulfilled) ProtoMessage()    {}
func (*CarfaxReportFulfilled) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b123536c7976bdc, []int{1}
}

func (m *CarfaxReportFulfilled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarfaxReportFulfilled.Unmarshal(m, b)
}
func (m *CarfaxReportFulfilled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarfaxReportFulfilled.Marshal(b, m, deterministic)
}
func (m *CarfaxReportFulfilled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarfaxReportFulfilled.Merge(m, src)
}
func (m *CarfaxReportFulfilled) XXX_Size() int {
	return xxx_messageInfo_CarfaxReportFulfilled.Size(m)
}
func (m *CarfaxReportFulfilled) XXX_DiscardUnknown() {
	xxx_messageInfo_CarfaxReportFulfilled.DiscardUnknown(m)
}

var xxx_messageInfo_CarfaxReportFulfilled proto.InternalMessageInfo

func (m *CarfaxReportFulfilled) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *CarfaxReportFulfilled) GetVin() string {
	if m != nil {
		return m.Vin
	}
	return ""
}

func (m *CarfaxReportFulfilled) GetDocumentLink() string {
	if m != nil {
		return m.DocumentLink
	}
	return ""
}

func (m *CarfaxReportFulfilled) GetRequestor() *CarfaxReportFulfilled_Requestor {
	if m != nil {
		return m.Requestor
	}
	return nil
}

type CarfaxReportFulfilled_Requestor struct {
	Id                   string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string                                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string                                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Locale               CarfaxReportFulfilled_Requestor_Locale `protobuf:"varint,4,opt,name=locale,proto3,enum=events.CarfaxReportFulfilled_Requestor_Locale" json:"locale,omitempty"`
	SubscriptionId       int64                                  `protobuf:"varint,5,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *CarfaxReportFulfilled_Requestor) Reset()         { *m = CarfaxReportFulfilled_Requestor{} }
func (m *CarfaxReportFulfilled_Requestor) String() string { return proto.CompactTextString(m) }
func (*CarfaxReportFulfilled_Requestor) ProtoMessage()    {}
func (*CarfaxReportFulfilled_Requestor) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b123536c7976bdc, []int{1, 0}
}

func (m *CarfaxReportFulfilled_Requestor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarfaxReportFulfilled_Requestor.Unmarshal(m, b)
}
func (m *CarfaxReportFulfilled_Requestor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarfaxReportFulfilled_Requestor.Marshal(b, m, deterministic)
}
func (m *CarfaxReportFulfilled_Requestor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarfaxReportFulfilled_Requestor.Merge(m, src)
}
func (m *CarfaxReportFulfilled_Requestor) XXX_Size() int {
	return xxx_messageInfo_CarfaxReportFulfilled_Requestor.Size(m)
}
func (m *CarfaxReportFulfilled_Requestor) XXX_DiscardUnknown() {
	xxx_messageInfo_CarfaxReportFulfilled_Requestor.DiscardUnknown(m)
}

var xxx_messageInfo_CarfaxReportFulfilled_Requestor proto.InternalMessageInfo

func (m *CarfaxReportFulfilled_Requestor) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CarfaxReportFulfilled_Requestor) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CarfaxReportFulfilled_Requestor) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CarfaxReportFulfilled_Requestor) GetLocale() CarfaxReportFulfilled_Requestor_Locale {
	if m != nil {
		return m.Locale
	}
	return CarfaxReportFulfilled_Requestor_LOCALE_UNKNOWN
}

func (m *CarfaxReportFulfilled_Requestor) GetSubscriptionId() int64 {
	if m != nil {
		return m.SubscriptionId
	}
	return 0
}

func init() {
	proto.RegisterEnum("events.CarfaxReportEvent_Type", CarfaxReportEvent_Type_name, CarfaxReportEvent_Type_value)
	proto.RegisterEnum("events.CarfaxReportFulfilled_Requestor_Locale", CarfaxReportFulfilled_Requestor_Locale_name, CarfaxReportFulfilled_Requestor_Locale_value)
	proto.RegisterType((*CarfaxReportEvent)(nil), "events.CarfaxReportEvent")
	proto.RegisterType((*CarfaxReportFulfilled)(nil), "events.CarfaxReportFulfilled")
	proto.RegisterType((*CarfaxReportFulfilled_Requestor)(nil), "events.CarfaxReportFulfilled.Requestor")
}

func init() { proto.RegisterFile("carfax_reports.proto", fileDescriptor_4b123536c7976bdc) }

var fileDescriptor_4b123536c7976bdc = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0x35, 0xc9, 0x76, 0x21, 0xd7, 0x36, 0x8e, 0x43, 0x85, 0x45, 0xa8, 0x94, 0x2d, 0xd2, 0x3e,
	0xc8, 0x2c, 0xac, 0x8f, 0x3e, 0xd5, 0x9a, 0xc8, 0xd2, 0x21, 0x95, 0xa1, 0xc1, 0x8f, 0x97, 0x90,
	0x4d, 0x26, 0x75, 0xc8, 0x6c, 0x26, 0x26, 0x93, 0x62, 0xff, 0x86, 0x3f, 0xc5, 0x7f, 0xe1, 0xbf,
	0x92, 0x4c, 0x12, 0x1b, 0xb0, 0x88, 0x6f, 0x39, 0xe7, 0x9e, 0x73, 0x73, 0xee, 0xbd, 0x03, 0x87,
	0x69, 0x52, 0xe7, 0xc9, 0xf7, 0xb8, 0xe6, 0x95, 0xaa, 0x75, 0x43, 0xaa, 0x5a, 0x69, 0x85, 0xe7,
	0xfc, 0x96, 0x97, 0xba, 0x59, 0xfe, 0xb4, 0xe0, 0xe9, 0x85, 0x11, 0x30, 0x53, 0xf7, 0x3b, 0x1a,
	0xaf, 0x61, 0xa6, 0xef, 0x2a, 0xbe, 0xb0, 0x8e, 0xad, 0x33, 0x6f, 0xfd, 0x82, 0xf4, 0x62, 0xf2,
	0x97, 0x90, 0x5c, 0xdf, 0x55, 0x9c, 0x19, 0x2d, 0x7e, 0x03, 0x6e, 0xde, 0xca, 0x5c, 0x48, 0xc9,
	0xb3, 0x85, 0x7d, 0x6c, 0x9d, 0x3d, 0x5e, 0x1f, 0x3d, 0x64, 0x0c, 0x46, 0x11, 0xbb, 0xd7, 0x2f,
	0x5f, 0xc1, 0xac, 0x6b, 0x85, 0x11, 0xec, 0x5f, 0x7f, 0xfe, 0xe0, 0xc7, 0x51, 0x78, 0x19, 0x5e,
	0x7d, 0x0c, 0xd1, 0x23, 0x8c, 0xc1, 0x33, 0x4c, 0x10, 0xd1, 0x60, 0x43, 0xa9, 0xff, 0x0e, 0x59,
	0xcb, 0x5f, 0x0e, 0x3c, 0x7b, 0xb0, 0x25, 0x3e, 0x02, 0xa8, 0xf9, 0xb7, 0x96, 0x37, 0x3a, 0x16,
	0x99, 0x89, 0xef, 0x30, 0x77, 0x60, 0x36, 0x19, 0x46, 0xe0, 0xdc, 0x8a, 0xd2, 0xa4, 0x73, 0x59,
	0xf7, 0x89, 0x4f, 0xe0, 0x20, 0x53, 0x69, 0xbb, 0xe3, 0xa5, 0x8e, 0xa5, 0x28, 0x8b, 0x85, 0x63,
	0x6a, 0xfb, 0x23, 0x49, 0x45, 0x59, 0x60, 0x1f, 0xc6, 0x1e, 0xaa, 0x5e, 0xcc, 0xcc, 0x68, 0xa7,
	0xff, 0x1c, 0x8d, 0xb0, 0x51, 0xce, 0xee, 0x9d, 0xcf, 0x7f, 0xd8, 0xe0, 0xfe, 0x29, 0x60, 0x0f,
	0xec, 0x21, 0xa2, 0xcb, 0x6c, 0x91, 0xe1, 0x43, 0xd8, 0xe3, 0xbb, 0x44, 0xc8, 0x21, 0x5d, 0x0f,
	0x3a, 0xb6, 0xfa, 0xaa, 0x4a, 0x3e, 0xe4, 0xea, 0x01, 0x0e, 0x60, 0x2e, 0x55, 0x9a, 0x48, 0x6e,
	0xd2, 0x78, 0x6b, 0xf2, 0x9f, 0x69, 0x08, 0x35, 0x2e, 0x36, 0xb8, 0xf1, 0x29, 0x3c, 0x69, 0xda,
	0x6d, 0x93, 0xd6, 0xa2, 0xd2, 0x42, 0x95, 0xdd, 0xce, 0xf6, 0xcc, 0xce, 0xbc, 0x29, 0xbd, 0xc9,
	0x96, 0x9f, 0x60, 0xde, 0x5b, 0xbb, 0x7b, 0xd0, 0xab, 0x8b, 0x73, 0x3a, 0xbd, 0xd1, 0x01, 0xb8,
	0x03, 0xf7, 0x9e, 0x22, 0x6b, 0x02, 0x59, 0x84, 0xec, 0x09, 0x8c, 0x2e, 0x91, 0x33, 0x81, 0x7e,
	0x88, 0x66, 0x6f, 0x5f, 0x7e, 0x39, 0xb9, 0x11, 0x5a, 0x26, 0x5b, 0x92, 0xaa, 0xdd, 0x8a, 0x9f,
	0xb7, 0x69, 0xf7, 0xcb, 0x55, 0x3f, 0xcf, 0xea, 0x46, 0xad, 0x8a, 0x24, 0x2f, 0x92, 0xed, 0xdc,
	0x3c, 0xdb, 0xd7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xae, 0x1b, 0x61, 0x15, 0xce, 0x02, 0x00,
	0x00,
}
